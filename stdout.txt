-------------------------------------------------
target file      : "test input\basi0g01.png"
test description : black & white
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 144 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b',\x06w\xcf', width=32, height=32, bit_depth=1, color_type=0, compression_method=0, filter_method=0, interlace_method=1, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=144, chunk_type=b'IDAT', chunk_crc=b'f\x18"\xf2')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi0g02.png"
test description : 2 bit (4 level) grayscale
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 81 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'k\xa6\r\x1f', width=32, height=32, bit_depth=2, color_type=0, compression_method=0, filter_method=0, interlace_method=1, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=81, chunk_type=b'IDAT', chunk_crc=b'\x85\xb6\xd9}')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi0g04.png"
test description : 4 bit (16 level) grayscale
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 174 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xe4\xe6\xf8\xbf', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=1, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=174, chunk_type=b'IDAT', chunk_crc=b'\xd3M\x07\x16')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi0g08.png"
test description : 8 bit (256 level) grayscale
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 181 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'!\x16\x15\xbe', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=1, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=181, chunk_type=b'IDAT', chunk_crc=b'\xe8\x1f\x9f(')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi0g16.png"
test description : 16 bit (64k level) grayscale
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 226 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'q\x86\xc9\xfd', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=1, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=226, chunk_type=b'IDAT', chunk_crc=b'\x14\xff\xff\xfe')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi2c08.png"
test description : 3x8 bits rgb color
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 242 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x8b\x1f\xdd5', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=1, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=242, chunk_type=b'IDAT', chunk_crc=b'!\xfc=3')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi2c16.png"
test description : 3x16 bits rgb color
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 522 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xdb\x8f\x01v', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=1, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=522, chunk_type=b'IDAT', chunk_crc=b'\xdf\x13D\xf7')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi3p01.png"
test description : 1 bit (2 color) paletted
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 6 bytes
parsing b'IDAT'; 41 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'>\xb3\xd8!', width=32, height=32, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=6, chunk_type=b'PLTE', chunk_crc=b'l\x1a\xd2&', entries=[C_RGB(r=238, g=255, b=34), C_RGB(r=34, g=102, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=41, chunk_type=b'IDAT', chunk_crc=b'v\xa9\xc3\x9e')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi3p02.png"
test description : 2 bit (4 color) paletted
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 12 bytes
parsing b'IDAT'; 81 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'y\x13\xa2\xf1', width=32, height=32, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'|.w\x82', sbit_n_r=1, sbit_n_g=1, sbit_n_b=1, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=12, chunk_type=b'PLTE', chunk_crc=b'e?+\xba', entries=[C_RGB(r=0, g=255, b=0), C_RGB(r=255, g=0, b=0), C_RGB(r=255, g=255, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=81, chunk_type=b'IDAT', chunk_crc=b'\x1fu\xe1\x03')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi3p04.png"
test description : 4 bit (16 color) paletted
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 45 bytes
parsing b'IDAT'; 182 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xf6SWQ', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=45, chunk_type=b'PLTE', chunk_crc=b'\xd2\xb0I\xbd', entries=[C_RGB(r=34, g=0, b=255), C_RGB(r=0, g=255, b=255), C_RGB(r=136, g=0, b=255), C_RGB(r=34, g=255, b=0), C_RGB(r=0, g=153, b=255), C_RGB(r=255, g=102, b=0), C_RGB(r=221, g=0, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=153), C_RGB(r=221, g=255, b=0), C_RGB(r=255, g=0, b=187), C_RGB(r=255, g=187, b=0), C_RGB(r=0, g=68, b=255), C_RGB(r=0, g=255, b=68)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=182, chunk_type=b'IDAT', chunk_crc=b'\x0ct\xd0_')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi3p08.png"
test description : 8 bit (256 color) paletted
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 768 bytes
parsing b'IDAT'; 674 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'3\xa3\xbaP', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=768, chunk_type=b'PLTE', chunk_crc=b'\xb9\x8e\xd3b', entries=[C_RGB(r=34, g=68, b=0), C_RGB(r=245, g=255, b=237), C_RGB(r=119, g=255, b=119), C_RGB(r=203, g=255, b=255), C_RGB(r=17, g=10, b=0), C_RGB(r=58, g=119, b=0), C_RGB(r=34, g=34, b=255), C_RGB(r=255, g=17, b=255), C_RGB(r=17, g=0, b=0), C_RGB(r=34, g=34, b=0), C_RGB(r=255, g=172, b=85), C_RGB(r=102, g=255, b=102), C_RGB(r=255, g=102, b=102), C_RGB(r=255, g=1, b=255), C_RGB(r=34, g=18, b=0), C_RGB(r=220, g=255, b=255), C_RGB(r=204, g=255, b=153), C_RGB(r=68, g=68, b=255), C_RGB(r=0, g=85, b=85), C_RGB(r=34, g=0, b=0), C_RGB(r=203, g=203, b=255), C_RGB(r=68, g=68, b=0), C_RGB(r=85, g=255, b=85), C_RGB(r=203, g=203, b=0), C_RGB(r=51, g=26, b=0), C_RGB(r=255, g=236, b=220), C_RGB(r=237, g=255, b=255), C_RGB(r=228, g=255, b=203), C_RGB(r=255, g=220, b=220), C_RGB(r=68, g=255, b=68), C_RGB(r=102, g=102, b=255), C_RGB(r=51, g=0, b=0), C_RGB(r=68, g=34, b=0), C_RGB(r=237, g=237, b=255), C_RGB(r=102, g=102, b=0), C_RGB(r=255, g=164, b=68), C_RGB(r=255, g=255, b=170), C_RGB(r=237, g=237, b=0), C_RGB(r=0, g=203, b=203), C_RGB(r=254, g=255, b=255), C_RGB(r=253, g=255, b=254), C_RGB(r=255, g=255, b=1), C_RGB(r=51, g=255, b=51), C_RGB(r=85, g=42, b=0), C_RGB(r=1, g=1, b=255), C_RGB(r=136, g=136, b=255), C_RGB(r=0, g=170, b=170), C_RGB(r=1, g=1, b=0), C_RGB(r=68, g=0, b=0), C_RGB(r=136, g=136, b=0), C_RGB(r=255, g=228, b=203), C_RGB(r=186, g=91, b=0), C_RGB(r=34, g=255, b=34), C_RGB(r=102, g=50, b=0), C_RGB(r=255, g=255, b=153), C_RGB(r=170, g=170, b=255), C_RGB(r=85, g=0, b=0), C_RGB(r=170, g=170, b=0), C_RGB(r=203, g=99, b=0), C_RGB(r=17, g=255, b=17), C_RGB(r=212, g=255, b=170), C_RGB(r=119, g=58, b=0), C_RGB(r=255, g=68, b=68), C_RGB(r=220, g=107, b=0), C_RGB(r=102, g=0, b=0), C_RGB(r=1, g=255, b=1), C_RGB(r=136, g=66, b=0), C_RGB(r=236, g=255, b=220), C_RGB(r=107, g=220, b=0), C_RGB(r=255, g=220, b=186), C_RGB(r=0, g=51, b=51), C_RGB(r=0, g=237, b=0), C_RGB(r=237, g=115, b=0), C_RGB(r=255, g=255, b=136), C_RGB(r=153, g=74, b=0), C_RGB(r=17, g=255, b=255), C_RGB(r=119, g=0, b=0), C_RGB(r=255, g=131, b=1), C_RGB(r=255, g=186, b=186), C_RGB(r=254, g=123, b=0), C_RGB(r=255, g=254, b=255), C_RGB(r=0, g=203, b=0), C_RGB(r=255, g=153, b=153), C_RGB(r=34, g=255, b=255), C_RGB(r=136, g=0, b=0), C_RGB(r=255, g=255, b=119), C_RGB(r=0, g=136, b=136), C_RGB(r=255, g=220, b=255), C_RGB(r=26, g=51, b=0), C_RGB(r=0, g=0, b=170), C_RGB(r=51, g=255, b=255), C_RGB(r=0, g=153, b=0), C_RGB(r=153, g=0, b=0), C_RGB(r=0, g=0, b=1), C_RGB(r=50, g=102, b=0), C_RGB(r=255, g=186, b=255), C_RGB(r=68, g=255, b=255), C_RGB(r=255, g=170, b=255), C_RGB(r=0, g=119, b=0), C_RGB(r=0, g=254, b=254), C_RGB(r=170, g=0, b=0), C_RGB(r=74, g=153, b=0), C_RGB(r=255, g=255, b=102), C_RGB(r=255, g=34, b=34), C_RGB(r=0, g=0, b=153), C_RGB(r=139, g=255, b=17), C_RGB(r=85, g=255, b=255), C_RGB(r=255, g=1, b=1), C_RGB(r=255, g=136, b=255), C_RGB(r=0, g=85, b=0), C_RGB(r=0, g=17, b=17), C_RGB(r=255, g=255, b=254), C_RGB(r=255, g=253, b=254), C_RGB(r=164, g=255, b=68), C_RGB(r=102, g=255, b=255), C_RGB(r=255, g=102, b=255), C_RGB(r=0, g=51, b=0), C_RGB(r=255, g=255, b=85), C_RGB(r=255, g=119, b=119), C_RGB(r=0, g=0, b=136), C_RGB(r=255, g=68, b=255), C_RGB(r=0, g=17, b=0), C_RGB(r=119, g=255, b=255), C_RGB(r=0, g=102, b=102), C_RGB(r=255, g=255, b=237), C_RGB(r=0, g=1, b=0), C_RGB(r=255, g=245, b=237), C_RGB(r=17, g=17, b=255), C_RGB(r=255, g=255, b=68), C_RGB(r=255, g=34, b=255), C_RGB(r=255, g=237, b=237), C_RGB(r=17, g=17, b=0), C_RGB(r=136, g=255, b=255), C_RGB(r=0, g=0, b=119), C_RGB(r=147, g=255, b=34), C_RGB(r=0, g=220, b=220), C_RGB(r=51, g=51, b=255), C_RGB(r=254, g=0, b=254), C_RGB(r=186, g=186, b=255), C_RGB(r=153, g=255, b=255), C_RGB(r=51, g=51, b=0), C_RGB(r=99, g=203, b=0), C_RGB(r=186, g=186, b=0), C_RGB(r=172, g=255, b=85), C_RGB(r=255, g=255, b=220), C_RGB(r=255, g=255, b=51), C_RGB(r=123, g=254, b=0), C_RGB(r=237, g=0, b=237), C_RGB(r=85, g=85, b=255), C_RGB(r=170, g=255, b=255), C_RGB(r=220, g=220, b=255), C_RGB(r=85, g=85, b=0), C_RGB(r=0, g=0, b=102), C_RGB(r=220, g=220, b=0), C_RGB(r=220, g=0, b=220), C_RGB(r=131, g=255, b=1), C_RGB(r=119, g=119, b=255), C_RGB(r=254, g=254, b=255), C_RGB(r=255, g=255, b=203), C_RGB(r=255, g=85, b=85), C_RGB(r=119, g=119, b=0), C_RGB(r=254, g=254, b=0), C_RGB(r=203, g=0, b=203), C_RGB(r=0, g=0, b=254), C_RGB(r=1, g=2, b=0), C_RGB(r=1, g=0, b=0), C_RGB(r=18, g=34, b=0), C_RGB(r=255, g=255, b=34), C_RGB(r=0, g=68, b=68), C_RGB(r=155, g=255, b=51), C_RGB(r=255, g=212, b=170), C_RGB(r=0, g=0, b=85), C_RGB(r=153, g=153, b=255), C_RGB(r=153, g=153, b=0), C_RGB(r=186, g=0, b=186), C_RGB(r=42, g=85, b=0), C_RGB(r=255, g=203, b=203), C_RGB(r=180, g=255, b=102), C_RGB(r=255, g=155, b=51), C_RGB(r=255, g=255, b=186), C_RGB(r=170, g=0, b=170), C_RGB(r=66, g=136, b=0), C_RGB(r=83, g=170, b=0), C_RGB(r=255, g=170, b=170), C_RGB(r=0, g=0, b=237), C_RGB(r=0, g=186, b=186), C_RGB(r=255, g=255, b=17), C_RGB(r=0, g=254, b=0), C_RGB(r=0, g=0, b=68), C_RGB(r=0, g=153, b=153), C_RGB(r=153, g=0, b=153), C_RGB(r=255, g=204, b=153), C_RGB(r=186, g=0, b=0), C_RGB(r=136, g=0, b=136), C_RGB(r=0, g=220, b=0), C_RGB(r=255, g=147, b=34), C_RGB(r=0, g=0, b=220), C_RGB(r=254, g=255, b=254), C_RGB(r=170, g=83, b=0), C_RGB(r=119, g=0, b=119), C_RGB(r=2, g=1, b=0), C_RGB(r=203, g=0, b=0), C_RGB(r=0, g=0, b=51), C_RGB(r=255, g=237, b=255), C_RGB(r=0, g=186, b=0), C_RGB(r=255, g=51, b=51), C_RGB(r=237, g=255, b=237), C_RGB(r=255, g=196, b=136), C_RGB(r=188, g=255, b=119), C_RGB(r=0, g=170, b=0), C_RGB(r=102, g=0, b=102), C_RGB(r=0, g=34, b=34), C_RGB(r=220, g=0, b=0), C_RGB(r=255, g=203, b=255), C_RGB(r=220, g=255, b=220), C_RGB(r=255, g=139, b=17), C_RGB(r=0, g=0, b=203), C_RGB(r=0, g=1, b=1), C_RGB(r=85, g=0, b=85), C_RGB(r=0, g=136, b=0), C_RGB(r=0, g=0, b=34), C_RGB(r=1, g=255, b=255), C_RGB(r=203, g=255, b=203), C_RGB(r=237, g=0, b=0), C_RGB(r=255, g=136, b=136), C_RGB(r=68, g=0, b=68), C_RGB(r=91, g=186, b=0), C_RGB(r=255, g=188, b=119), C_RGB(r=255, g=153, b=255), C_RGB(r=0, g=102, b=0), C_RGB(r=186, g=255, b=186), C_RGB(r=0, g=119, b=119), C_RGB(r=115, g=237, b=0), C_RGB(r=254, g=0, b=0), C_RGB(r=51, g=0, b=51), C_RGB(r=0, g=0, b=186), C_RGB(r=255, g=119, b=255), C_RGB(r=0, g=68, b=0), C_RGB(r=170, g=255, b=170), C_RGB(r=255, g=254, b=254), C_RGB(r=0, g=0, b=17), C_RGB(r=34, g=0, b=34), C_RGB(r=196, g=255, b=136), C_RGB(r=0, g=237, b=237), C_RGB(r=153, g=255, b=153), C_RGB(r=255, g=85, b=255), C_RGB(r=0, g=34, b=0), C_RGB(r=255, g=180, b=102), C_RGB(r=17, g=0, b=17), C_RGB(r=10, g=17, b=0), C_RGB(r=255, g=17, b=17), C_RGB(r=220, g=255, b=186), C_RGB(r=186, g=255, b=255), C_RGB(r=136, g=255, b=136), C_RGB(r=1, g=0, b=1), C_RGB(r=255, g=51, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=674, chunk_type=b'IDAT', chunk_crc=b'r\xaf\xc1\xe5')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi4a08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 141 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xaet\x82\xe9', width=32, height=32, bit_depth=8, color_type=4, compression_method=0, filter_method=0, interlace_method=1, color_type_info='alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=141, chunk_type=b'IDAT', chunk_crc=b'\x1dYU]')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi4a16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 2782 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfe\xe4^\xaa', width=32, height=32, bit_depth=16, color_type=4, compression_method=0, filter_method=0, interlace_method=1, color_type_info='alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=2782, chunk_type=b'IDAT', chunk_crc=b'l\x16\xc7\xcb')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi6a08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 288 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x04}Jb', width=32, height=32, bit_depth=8, color_type=6, compression_method=0, filter_method=0, interlace_method=1, color_type_info='color-used;alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=288, chunk_type=b'IDAT', chunk_crc=b'iNsB')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basi6a16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 4107 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'T\xed\x96!', width=32, height=32, bit_depth=16, color_type=6, compression_method=0, filter_method=0, interlace_method=1, color_type_info='color-used;alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=4107, chunk_type=b'IDAT', chunk_crc=b'@\x9aR\t')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn0g01.png"
test description : black & white
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 91 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'[\x01GY', width=32, height=32, bit_depth=1, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=91, chunk_type=b'IDAT', chunk_crc=b'\xd0/\x14\xc9')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn0g02.png"
test description : 2 bit (4 level) grayscale
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 31 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x1c\xa1=\x89', width=32, height=32, bit_depth=2, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=31, chunk_type=b'IDAT', chunk_crc=b'\x8b\t\x89\xa9')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn0g04.png"
test description : 4 bit (16 level) grayscale
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 72 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=72, chunk_type=b'IDAT', chunk_crc=b'\xea\xffA\xfa')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn0g08.png"
test description : 8 bit (256 level) grayscale
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 65 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'V\x11%(', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=65, chunk_type=b'IDAT', chunk_crc=b'5\xe2\xd8Y')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn0g16.png"
test description : 16 bit (64k level) grayscale
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 94 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=94, chunk_type=b'IDAT', chunk_crc=b'\xae+\x9f\xd7')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn2c08.png"
test description : 3x8 bits rgb color
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 72 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=72, chunk_type=b'IDAT', chunk_crc=b'\x0f@\xcfK')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn2c16.png"
test description : 3x16 bits rgb color
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 229 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=229, chunk_type=b'IDAT', chunk_crc=b'\x07\xbb\xc4\xec')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn3p01.png"
test description : 1 bit (2 color) paletted
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 6 bytes
parsing b'IDAT'; 21 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'I\xb4\xe8\xb7', width=32, height=32, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=6, chunk_type=b'PLTE', chunk_crc=b'l\x1a\xd2&', entries=[C_RGB(r=238, g=255, b=34), C_RGB(r=34, g=102, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=21, chunk_type=b'IDAT', chunk_crc=b'\x93\x82fY')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn3p02.png"
test description : 2 bit (4 color) paletted
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 12 bytes
parsing b'IDAT'; 34 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x0e\x14\x92g', width=32, height=32, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'|.w\x82', sbit_n_r=1, sbit_n_g=1, sbit_n_b=1, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=12, chunk_type=b'PLTE', chunk_crc=b'e?+\xba', entries=[C_RGB(r=0, g=255, b=0), C_RGB(r=255, g=0, b=0), C_RGB(r=255, g=255, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=34, chunk_type=b'IDAT', chunk_crc=b'\xea\x89\x8e\x1b')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn3p04.png"
test description : 4 bit (16 color) paletted
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 45 bytes
parsing b'IDAT'; 71 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x81Tg\xc7', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=45, chunk_type=b'PLTE', chunk_crc=b'\xd2\xb0I\xbd', entries=[C_RGB(r=34, g=0, b=255), C_RGB(r=0, g=255, b=255), C_RGB(r=136, g=0, b=255), C_RGB(r=34, g=255, b=0), C_RGB(r=0, g=153, b=255), C_RGB(r=255, g=102, b=0), C_RGB(r=221, g=0, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=153), C_RGB(r=221, g=255, b=0), C_RGB(r=255, g=0, b=187), C_RGB(r=255, g=187, b=0), C_RGB(r=0, g=68, b=255), C_RGB(r=0, g=255, b=68)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=71, chunk_type=b'IDAT', chunk_crc=b'\x0f\x82\x05}')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn3p08.png"
test description : 8 bit (256 color) paletted
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 768 bytes
parsing b'IDAT'; 433 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=768, chunk_type=b'PLTE', chunk_crc=b'\xb9\x8e\xd3b', entries=[C_RGB(r=34, g=68, b=0), C_RGB(r=245, g=255, b=237), C_RGB(r=119, g=255, b=119), C_RGB(r=203, g=255, b=255), C_RGB(r=17, g=10, b=0), C_RGB(r=58, g=119, b=0), C_RGB(r=34, g=34, b=255), C_RGB(r=255, g=17, b=255), C_RGB(r=17, g=0, b=0), C_RGB(r=34, g=34, b=0), C_RGB(r=255, g=172, b=85), C_RGB(r=102, g=255, b=102), C_RGB(r=255, g=102, b=102), C_RGB(r=255, g=1, b=255), C_RGB(r=34, g=18, b=0), C_RGB(r=220, g=255, b=255), C_RGB(r=204, g=255, b=153), C_RGB(r=68, g=68, b=255), C_RGB(r=0, g=85, b=85), C_RGB(r=34, g=0, b=0), C_RGB(r=203, g=203, b=255), C_RGB(r=68, g=68, b=0), C_RGB(r=85, g=255, b=85), C_RGB(r=203, g=203, b=0), C_RGB(r=51, g=26, b=0), C_RGB(r=255, g=236, b=220), C_RGB(r=237, g=255, b=255), C_RGB(r=228, g=255, b=203), C_RGB(r=255, g=220, b=220), C_RGB(r=68, g=255, b=68), C_RGB(r=102, g=102, b=255), C_RGB(r=51, g=0, b=0), C_RGB(r=68, g=34, b=0), C_RGB(r=237, g=237, b=255), C_RGB(r=102, g=102, b=0), C_RGB(r=255, g=164, b=68), C_RGB(r=255, g=255, b=170), C_RGB(r=237, g=237, b=0), C_RGB(r=0, g=203, b=203), C_RGB(r=254, g=255, b=255), C_RGB(r=253, g=255, b=254), C_RGB(r=255, g=255, b=1), C_RGB(r=51, g=255, b=51), C_RGB(r=85, g=42, b=0), C_RGB(r=1, g=1, b=255), C_RGB(r=136, g=136, b=255), C_RGB(r=0, g=170, b=170), C_RGB(r=1, g=1, b=0), C_RGB(r=68, g=0, b=0), C_RGB(r=136, g=136, b=0), C_RGB(r=255, g=228, b=203), C_RGB(r=186, g=91, b=0), C_RGB(r=34, g=255, b=34), C_RGB(r=102, g=50, b=0), C_RGB(r=255, g=255, b=153), C_RGB(r=170, g=170, b=255), C_RGB(r=85, g=0, b=0), C_RGB(r=170, g=170, b=0), C_RGB(r=203, g=99, b=0), C_RGB(r=17, g=255, b=17), C_RGB(r=212, g=255, b=170), C_RGB(r=119, g=58, b=0), C_RGB(r=255, g=68, b=68), C_RGB(r=220, g=107, b=0), C_RGB(r=102, g=0, b=0), C_RGB(r=1, g=255, b=1), C_RGB(r=136, g=66, b=0), C_RGB(r=236, g=255, b=220), C_RGB(r=107, g=220, b=0), C_RGB(r=255, g=220, b=186), C_RGB(r=0, g=51, b=51), C_RGB(r=0, g=237, b=0), C_RGB(r=237, g=115, b=0), C_RGB(r=255, g=255, b=136), C_RGB(r=153, g=74, b=0), C_RGB(r=17, g=255, b=255), C_RGB(r=119, g=0, b=0), C_RGB(r=255, g=131, b=1), C_RGB(r=255, g=186, b=186), C_RGB(r=254, g=123, b=0), C_RGB(r=255, g=254, b=255), C_RGB(r=0, g=203, b=0), C_RGB(r=255, g=153, b=153), C_RGB(r=34, g=255, b=255), C_RGB(r=136, g=0, b=0), C_RGB(r=255, g=255, b=119), C_RGB(r=0, g=136, b=136), C_RGB(r=255, g=220, b=255), C_RGB(r=26, g=51, b=0), C_RGB(r=0, g=0, b=170), C_RGB(r=51, g=255, b=255), C_RGB(r=0, g=153, b=0), C_RGB(r=153, g=0, b=0), C_RGB(r=0, g=0, b=1), C_RGB(r=50, g=102, b=0), C_RGB(r=255, g=186, b=255), C_RGB(r=68, g=255, b=255), C_RGB(r=255, g=170, b=255), C_RGB(r=0, g=119, b=0), C_RGB(r=0, g=254, b=254), C_RGB(r=170, g=0, b=0), C_RGB(r=74, g=153, b=0), C_RGB(r=255, g=255, b=102), C_RGB(r=255, g=34, b=34), C_RGB(r=0, g=0, b=153), C_RGB(r=139, g=255, b=17), C_RGB(r=85, g=255, b=255), C_RGB(r=255, g=1, b=1), C_RGB(r=255, g=136, b=255), C_RGB(r=0, g=85, b=0), C_RGB(r=0, g=17, b=17), C_RGB(r=255, g=255, b=254), C_RGB(r=255, g=253, b=254), C_RGB(r=164, g=255, b=68), C_RGB(r=102, g=255, b=255), C_RGB(r=255, g=102, b=255), C_RGB(r=0, g=51, b=0), C_RGB(r=255, g=255, b=85), C_RGB(r=255, g=119, b=119), C_RGB(r=0, g=0, b=136), C_RGB(r=255, g=68, b=255), C_RGB(r=0, g=17, b=0), C_RGB(r=119, g=255, b=255), C_RGB(r=0, g=102, b=102), C_RGB(r=255, g=255, b=237), C_RGB(r=0, g=1, b=0), C_RGB(r=255, g=245, b=237), C_RGB(r=17, g=17, b=255), C_RGB(r=255, g=255, b=68), C_RGB(r=255, g=34, b=255), C_RGB(r=255, g=237, b=237), C_RGB(r=17, g=17, b=0), C_RGB(r=136, g=255, b=255), C_RGB(r=0, g=0, b=119), C_RGB(r=147, g=255, b=34), C_RGB(r=0, g=220, b=220), C_RGB(r=51, g=51, b=255), C_RGB(r=254, g=0, b=254), C_RGB(r=186, g=186, b=255), C_RGB(r=153, g=255, b=255), C_RGB(r=51, g=51, b=0), C_RGB(r=99, g=203, b=0), C_RGB(r=186, g=186, b=0), C_RGB(r=172, g=255, b=85), C_RGB(r=255, g=255, b=220), C_RGB(r=255, g=255, b=51), C_RGB(r=123, g=254, b=0), C_RGB(r=237, g=0, b=237), C_RGB(r=85, g=85, b=255), C_RGB(r=170, g=255, b=255), C_RGB(r=220, g=220, b=255), C_RGB(r=85, g=85, b=0), C_RGB(r=0, g=0, b=102), C_RGB(r=220, g=220, b=0), C_RGB(r=220, g=0, b=220), C_RGB(r=131, g=255, b=1), C_RGB(r=119, g=119, b=255), C_RGB(r=254, g=254, b=255), C_RGB(r=255, g=255, b=203), C_RGB(r=255, g=85, b=85), C_RGB(r=119, g=119, b=0), C_RGB(r=254, g=254, b=0), C_RGB(r=203, g=0, b=203), C_RGB(r=0, g=0, b=254), C_RGB(r=1, g=2, b=0), C_RGB(r=1, g=0, b=0), C_RGB(r=18, g=34, b=0), C_RGB(r=255, g=255, b=34), C_RGB(r=0, g=68, b=68), C_RGB(r=155, g=255, b=51), C_RGB(r=255, g=212, b=170), C_RGB(r=0, g=0, b=85), C_RGB(r=153, g=153, b=255), C_RGB(r=153, g=153, b=0), C_RGB(r=186, g=0, b=186), C_RGB(r=42, g=85, b=0), C_RGB(r=255, g=203, b=203), C_RGB(r=180, g=255, b=102), C_RGB(r=255, g=155, b=51), C_RGB(r=255, g=255, b=186), C_RGB(r=170, g=0, b=170), C_RGB(r=66, g=136, b=0), C_RGB(r=83, g=170, b=0), C_RGB(r=255, g=170, b=170), C_RGB(r=0, g=0, b=237), C_RGB(r=0, g=186, b=186), C_RGB(r=255, g=255, b=17), C_RGB(r=0, g=254, b=0), C_RGB(r=0, g=0, b=68), C_RGB(r=0, g=153, b=153), C_RGB(r=153, g=0, b=153), C_RGB(r=255, g=204, b=153), C_RGB(r=186, g=0, b=0), C_RGB(r=136, g=0, b=136), C_RGB(r=0, g=220, b=0), C_RGB(r=255, g=147, b=34), C_RGB(r=0, g=0, b=220), C_RGB(r=254, g=255, b=254), C_RGB(r=170, g=83, b=0), C_RGB(r=119, g=0, b=119), C_RGB(r=2, g=1, b=0), C_RGB(r=203, g=0, b=0), C_RGB(r=0, g=0, b=51), C_RGB(r=255, g=237, b=255), C_RGB(r=0, g=186, b=0), C_RGB(r=255, g=51, b=51), C_RGB(r=237, g=255, b=237), C_RGB(r=255, g=196, b=136), C_RGB(r=188, g=255, b=119), C_RGB(r=0, g=170, b=0), C_RGB(r=102, g=0, b=102), C_RGB(r=0, g=34, b=34), C_RGB(r=220, g=0, b=0), C_RGB(r=255, g=203, b=255), C_RGB(r=220, g=255, b=220), C_RGB(r=255, g=139, b=17), C_RGB(r=0, g=0, b=203), C_RGB(r=0, g=1, b=1), C_RGB(r=85, g=0, b=85), C_RGB(r=0, g=136, b=0), C_RGB(r=0, g=0, b=34), C_RGB(r=1, g=255, b=255), C_RGB(r=203, g=255, b=203), C_RGB(r=237, g=0, b=0), C_RGB(r=255, g=136, b=136), C_RGB(r=68, g=0, b=68), C_RGB(r=91, g=186, b=0), C_RGB(r=255, g=188, b=119), C_RGB(r=255, g=153, b=255), C_RGB(r=0, g=102, b=0), C_RGB(r=186, g=255, b=186), C_RGB(r=0, g=119, b=119), C_RGB(r=115, g=237, b=0), C_RGB(r=254, g=0, b=0), C_RGB(r=51, g=0, b=51), C_RGB(r=0, g=0, b=186), C_RGB(r=255, g=119, b=255), C_RGB(r=0, g=68, b=0), C_RGB(r=170, g=255, b=170), C_RGB(r=255, g=254, b=254), C_RGB(r=0, g=0, b=17), C_RGB(r=34, g=0, b=34), C_RGB(r=196, g=255, b=136), C_RGB(r=0, g=237, b=237), C_RGB(r=153, g=255, b=153), C_RGB(r=255, g=85, b=255), C_RGB(r=0, g=34, b=0), C_RGB(r=255, g=180, b=102), C_RGB(r=17, g=0, b=17), C_RGB(r=10, g=17, b=0), C_RGB(r=255, g=17, b=17), C_RGB(r=220, g=255, b=186), C_RGB(r=186, g=255, b=255), C_RGB(r=136, g=255, b=136), C_RGB(r=1, g=0, b=1), C_RGB(r=255, g=51, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=433, chunk_type=b'IDAT', chunk_crc=b'\x87\x96\xc8\xe0')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn4a08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 53 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xd9s\xb2\x7f', width=32, height=32, bit_depth=8, color_type=4, compression_method=0, filter_method=0, interlace_method=0, color_type_info='alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=53, chunk_type=b'IDAT', chunk_crc=b'\xc4\xeb\x85\xc8')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn4a16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 2133 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x89\xe3n<', width=32, height=32, bit_depth=16, color_type=4, compression_method=0, filter_method=0, interlace_method=0, color_type_info='alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=2133, chunk_type=b'IDAT', chunk_crc=b'\xc3\xe1\xacu')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn6a08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 111 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'szz\xf4', width=32, height=32, bit_depth=8, color_type=6, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used;alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=111, chunk_type=b'IDAT', chunk_crc=b'\x16\x0f\xb8L')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\basn6a16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 3362 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'#\xea\xa6\xb7', width=32, height=32, bit_depth=16, color_type=6, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used;alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=3362, chunk_type=b'IDAT', chunk_crc=b'\xad\xdb\xb5\xf3')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\bgai4a08.png"
test description : 8 bit grayscale, alpha, no background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 141 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xaet\x82\xe9', width=32, height=32, bit_depth=8, color_type=4, compression_method=0, filter_method=0, interlace_method=1, color_type_info='alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=141, chunk_type=b'IDAT', chunk_crc=b'\x1dYU]')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\bgai4a16.png"
test description : 16 bit grayscale, alpha, no background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 2782 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfe\xe4^\xaa', width=32, height=32, bit_depth=16, color_type=4, compression_method=0, filter_method=0, interlace_method=1, color_type_info='alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=2782, chunk_type=b'IDAT', chunk_crc=b'l\x16\xc7\xcb')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\bgan6a08.png"
test description : 3x8 bits rgb color, alpha, no background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 111 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'szz\xf4', width=32, height=32, bit_depth=8, color_type=6, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used;alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=111, chunk_type=b'IDAT', chunk_crc=b'\x16\x0f\xb8L')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\bgan6a16.png"
test description : 3x16 bits rgb color, alpha, no background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 3362 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'#\xea\xa6\xb7', width=32, height=32, bit_depth=16, color_type=6, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used;alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=3362, chunk_type=b'IDAT', chunk_crc=b'\xad\xdb\xb5\xf3')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\bgbn4a08.png"
test description : 8 bit grayscale, alpha, black background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'bKGD'; 2 bytes
parsing b'IDAT'; 53 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xd9s\xb2\x7f', width=32, height=32, bit_depth=8, color_type=4, compression_method=0, filter_method=0, interlace_method=0, color_type_info='alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_bKGD(is_parsed=True, chunk_size=2, chunk_type=b'bKGD', chunk_crc=b'\xaa\x8d#2', background_color=C_RGB(r=0, g=0, b=0))
  [003] - CT_IDAT(is_parsed=True, chunk_size=53, chunk_type=b'IDAT', chunk_crc=b'\xc4\xeb\x85\xc8')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\bggn4a16.png"
test description : 16 bit grayscale, alpha, gray background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'bKGD'; 2 bytes
parsing b'IDAT'; 2133 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x89\xe3n<', width=32, height=32, bit_depth=16, color_type=4, compression_method=0, filter_method=0, interlace_method=0, color_type_info='alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_bKGD(is_parsed=True, chunk_size=2, chunk_type=b'bKGD', chunk_crc=b'\r\xab\x01)', background_color=C_RGB(r=43908, g=43908, b=43908))
  [003] - CT_IDAT(is_parsed=True, chunk_size=2133, chunk_type=b'IDAT', chunk_crc=b'\xc3\xe1\xacu')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\bgwn6a08.png"
test description : 3x8 bits rgb color, alpha, white background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'bKGD'; 6 bytes
parsing b'IDAT'; 111 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'szz\xf4', width=32, height=32, bit_depth=8, color_type=6, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used;alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_bKGD(is_parsed=True, chunk_size=6, chunk_type=b'bKGD', chunk_crc=b'\xa0\xbd\xa7\x93', background_color=C_RGB(r=255, g=255, b=255))
  [003] - CT_IDAT(is_parsed=True, chunk_size=111, chunk_type=b'IDAT', chunk_crc=b'\x16\x0f\xb8L')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\bgyn6a16.png"
test description : 3x16 bits rgb color, alpha, yellow background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'bKGD'; 6 bytes
parsing b'IDAT'; 3362 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'#\xea\xa6\xb7', width=32, height=32, bit_depth=16, color_type=6, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used;alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_bKGD(is_parsed=True, chunk_size=6, chunk_type=b'bKGD', chunk_crc=b'\xb7~\xe5#', background_color=C_RGB(r=65535, g=65535, b=0))
  [003] - CT_IDAT(is_parsed=True, chunk_size=3362, chunk_type=b'IDAT', chunk_crc=b'\xad\xdb\xb5\xf3')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ccwn2c08.png"
test description : chroma chunk w:0.3127,0.3290 r:0.64,0.33 g:0.30,0.60 b:0.15,0.06
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'cHRM'; 32 bytes
parsing b'IDAT'; 1397 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_cHRM(is_parsed=True, chunk_size=32, chunk_type=b'cHRM', chunk_crc=b'\x9c\xbaQ<', white_point_x=31270, white_point_y=32900, red_x=64000, red_y=33000, green_x=30000, green_y=60000, blue_x=15000, blue_y=6000)
  [003] - CT_IDAT(is_parsed=True, chunk_size=1397, chunk_type=b'IDAT', chunk_crc=b'\xac\x1d\x89(')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ccwn3p08.png"
test description : chroma chunk w:0.3127,0.3290 r:0.64,0.33 g:0.30,0.60 b:0.15,0.06
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'cHRM'; 32 bytes
parsing b'PLTE'; 738 bytes
parsing b'IDAT'; 687 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_cHRM(is_parsed=True, chunk_size=32, chunk_type=b'cHRM', chunk_crc=b'\x9c\xbaQ<', white_point_x=31270, white_point_y=32900, red_x=64000, red_y=33000, green_x=30000, green_y=60000, blue_x=15000, blue_y=6000)
  [003] - CT_PLTE(is_parsed=True, chunk_size=738, chunk_type=b'PLTE', chunk_crc=b'\xc0\x13J\xaa', entries=[C_RGB(r=246, g=176, b=222), C_RGB(r=137, g=255, b=117), C_RGB(r=228, g=255, b=197), C_RGB(r=13, g=255, b=107), C_RGB(r=234, g=255, b=140), C_RGB(r=53, g=255, b=173), C_RGB(r=255, g=49, b=192), C_RGB(r=140, g=73, b=151), C_RGB(r=128, g=255, b=214), C_RGB(r=254, g=38, b=52), C_RGB(r=255, g=177, b=52), C_RGB(r=224, g=50, b=254), C_RGB(r=28, g=136, b=255), C_RGB(r=255, g=14, b=116), C_RGB(r=81, g=255, b=35), C_RGB(r=197, g=3, b=211), C_RGB(r=200, g=1, b=108), C_RGB(r=255, g=206, b=45), C_RGB(r=255, g=94, b=165), C_RGB(r=254, g=62, b=98), C_RGB(r=79, g=255, b=119), C_RGB(r=51, g=255, b=88), C_RGB(r=254, g=11, b=148), C_RGB(r=255, g=46, b=99), C_RGB(r=36, g=255, b=136), C_RGB(r=127, g=255, b=196), C_RGB(r=115, g=255, b=204), C_RGB(r=255, g=167, b=141), C_RGB(r=131, g=255, b=137), C_RGB(r=61, g=255, b=187), C_RGB(r=255, g=209, b=230), C_RGB(r=27, g=255, b=150), C_RGB(r=150, g=255, b=202), C_RGB(r=255, g=59, b=29), C_RGB(r=89, g=137, b=255), C_RGB(r=189, g=24, b=199), C_RGB(r=255, g=31, b=92), C_RGB(r=122, g=60, b=255), C_RGB(r=251, g=251, b=252), C_RGB(r=228, g=255, b=14), C_RGB(r=30, g=255, b=156), C_RGB(r=129, g=255, b=181), C_RGB(r=72, g=226, b=254), C_RGB(r=65, g=40, b=255), C_RGB(r=255, g=168, b=220), C_RGB(r=45, g=255, b=131), C_RGB(r=255, g=158, b=28), C_RGB(r=73, g=19, b=190), C_RGB(r=96, g=255, b=168), C_RGB(r=37, g=255, b=209), C_RGB(r=17, g=255, b=123), C_RGB(r=146, g=255, b=75), C_RGB(r=82, g=255, b=217), C_RGB(r=126, g=0, b=153), C_RGB(r=29, g=111, b=255), C_RGB(r=224, g=21, b=253), C_RGB(r=247, g=252, b=29), C_RGB(r=184, g=224, b=255), C_RGB(r=181, g=255, b=222), C_RGB(r=234, g=124, b=156), C_RGB(r=196, g=255, b=240), C_RGB(r=252, g=252, b=100), C_RGB(r=252, g=224, b=226), C_RGB(r=113, g=106, b=255), C_RGB(r=193, g=128, b=218), C_RGB(r=221, g=221, b=245), C_RGB(r=250, g=96, b=238), C_RGB(r=30, g=255, b=165), C_RGB(r=166, g=255, b=210), C_RGB(r=201, g=255, b=228), C_RGB(r=43, g=255, b=95), C_RGB(r=246, g=3, b=112), C_RGB(r=180, g=53, b=255), C_RGB(r=31, g=255, b=232), C_RGB(r=198, g=255, b=205), C_RGB(r=93, g=255, b=131), C_RGB(r=255, g=103, b=173), C_RGB(r=43, g=220, b=254), C_RGB(r=255, g=19, b=61), C_RGB(r=100, g=226, b=254), C_RGB(r=14, g=253, b=235), C_RGB(r=69, g=255, b=190), C_RGB(r=255, g=99, b=67), C_RGB(r=61, g=255, b=139), C_RGB(r=200, g=206, b=237), C_RGB(r=202, g=255, b=20), C_RGB(r=194, g=255, b=75), C_RGB(r=255, g=38, b=160), C_RGB(r=26, g=255, b=144), C_RGB(r=252, g=130, b=206), C_RGB(r=255, g=48, b=140), C_RGB(r=210, g=255, b=51), C_RGB(r=23, g=55, b=255), C_RGB(r=163, g=0, b=99), C_RGB(r=142, g=255, b=189), C_RGB(r=254, g=255, b=250), C_RGB(r=155, g=224, b=255), C_RGB(r=255, g=25, b=44), C_RGB(r=15, g=255, b=176), C_RGB(r=9, g=255, b=127), C_RGB(r=16, g=255, b=71), C_RGB(r=20, g=210, b=254), C_RGB(r=54, g=255, b=29), C_RGB(r=199, g=171, b=206), C_RGB(r=255, g=239, b=188), C_RGB(r=255, g=225, b=102), C_RGB(r=255, g=200, b=218), C_RGB(r=215, g=250, b=241), C_RGB(r=153, g=255, b=226), C_RGB(r=251, g=255, b=250), C_RGB(r=253, g=251, b=252), C_RGB(r=227, g=2, b=89), C_RGB(r=255, g=129, b=76), C_RGB(r=139, g=255, b=20), C_RGB(r=31, g=155, b=255), C_RGB(r=15, g=255, b=159), C_RGB(r=224, g=254, b=253), C_RGB(r=212, g=255, b=208), C_RGB(r=255, g=113, b=76), C_RGB(r=253, g=23, b=217), C_RGB(r=142, g=201, b=255), C_RGB(r=255, g=192, b=29), C_RGB(r=158, g=255, b=128), C_RGB(r=224, g=255, b=74), C_RGB(r=19, g=255, b=123), C_RGB(r=65, g=193, b=255), C_RGB(r=250, g=251, b=252), C_RGB(r=60, g=241, b=253), C_RGB(r=246, g=187, b=222), C_RGB(r=255, g=112, b=195), C_RGB(r=177, g=255, b=44), C_RGB(r=126, g=255, b=30), C_RGB(r=33, g=255, b=97), C_RGB(r=162, g=255, b=49), C_RGB(r=179, g=255, b=132), C_RGB(r=12, g=255, b=202), C_RGB(r=24, g=255, b=88), C_RGB(r=20, g=243, b=253), C_RGB(r=9, g=255, b=93), C_RGB(r=101, g=255, b=174), C_RGB(r=71, g=255, b=141), C_RGB(r=254, g=10, b=62), C_RGB(r=245, g=222, b=237), C_RGB(r=255, g=76, b=175), C_RGB(r=59, g=1, b=91), C_RGB(r=250, g=253, b=172), C_RGB(r=64, g=255, b=157), C_RGB(r=152, g=239, b=254), C_RGB(r=93, g=255, b=126), C_RGB(r=84, g=255, b=180), C_RGB(r=202, g=255, b=141), C_RGB(r=244, g=253, b=60), C_RGB(r=145, g=255, b=227), C_RGB(r=22, g=167, b=255), C_RGB(r=101, g=255, b=200), C_RGB(r=57, g=3, b=198), C_RGB(r=79, g=165, b=255), C_RGB(r=236, g=240, b=254), C_RGB(r=255, g=41, b=102), C_RGB(r=253, g=9, b=183), C_RGB(r=170, g=251, b=235), C_RGB(r=156, g=255, b=178), C_RGB(r=255, g=203, b=157), C_RGB(r=162, g=255, b=15), C_RGB(r=246, g=52, b=169), C_RGB(r=186, g=247, b=254), C_RGB(r=255, g=133, b=174), C_RGB(r=227, g=4, b=230), C_RGB(r=163, g=255, b=102), C_RGB(r=255, g=150, b=144), C_RGB(r=255, g=111, b=25), C_RGB(r=226, g=255, b=88), C_RGB(r=255, g=227, b=140), C_RGB(r=150, g=255, b=238), C_RGB(r=65, g=255, b=101), C_RGB(r=61, g=255, b=54), C_RGB(r=38, g=255, b=220), C_RGB(r=94, g=255, b=27), C_RGB(r=254, g=63, b=213), C_RGB(r=41, g=255, b=160), C_RGB(r=103, g=255, b=208), C_RGB(r=255, g=225, b=226), C_RGB(r=250, g=254, b=234), C_RGB(r=231, g=75, b=84), C_RGB(r=33, g=185, b=255), C_RGB(r=210, g=105, b=255), C_RGB(r=253, g=214, b=194), C_RGB(r=191, g=255, b=139), C_RGB(r=107, g=201, b=255), C_RGB(r=175, g=255, b=186), C_RGB(r=255, g=240, b=242), C_RGB(r=75, g=255, b=160), C_RGB(r=255, g=199, b=123), C_RGB(r=253, g=241, b=124), C_RGB(r=83, g=255, b=234), C_RGB(r=255, g=232, b=30), C_RGB(r=255, g=255, b=255), C_RGB(r=105, g=255, b=67), C_RGB(r=255, g=168, b=47), C_RGB(r=255, g=27, b=134), C_RGB(r=255, g=53, b=94), C_RGB(r=101, g=252, b=245), C_RGB(r=255, g=144, b=196), C_RGB(r=255, g=77, b=117), C_RGB(r=255, g=64, b=127), C_RGB(r=126, g=255, b=114), C_RGB(r=255, g=115, b=14), C_RGB(r=255, g=62, b=170), C_RGB(r=255, g=142, b=27), C_RGB(r=111, g=255, b=162), C_RGB(r=227, g=163, b=221), C_RGB(r=155, g=255, b=63), C_RGB(r=64, g=255, b=175), C_RGB(r=51, g=255, b=182), C_RGB(r=39, g=243, b=253), C_RGB(r=26, g=255, b=48), C_RGB(r=124, g=255, b=221), C_RGB(r=255, g=123, b=209), C_RGB(r=255, g=79, b=37), C_RGB(r=63, g=255, b=240), C_RGB(r=124, g=246, b=254), C_RGB(r=255, g=123, b=83), C_RGB(r=32, g=255, b=57), C_RGB(r=144, g=0, b=196), C_RGB(r=255, g=214, b=79), C_RGB(r=255, g=85, b=166), C_RGB(r=239, g=255, b=245), C_RGB(r=175, g=193, b=255), C_RGB(r=255, g=26, b=173), C_RGB(r=62, g=255, b=219), C_RGB(r=47, g=87, b=255), C_RGB(r=128, g=166, b=255), C_RGB(r=20, g=255, b=237), C_RGB(r=255, g=146, b=76), C_RGB(r=98, g=255, b=218), C_RGB(r=255, g=182, b=122), C_RGB(r=142, g=228, b=255), C_RGB(r=231, g=226, b=227), C_RGB(r=236, g=1, b=164), C_RGB(r=254, g=10, b=89), C_RGB(r=43, g=255, b=180), C_RGB(r=185, g=184, b=195), C_RGB(r=218, g=255, b=141), C_RGB(r=210, g=255, b=239), C_RGB(r=255, g=156, b=208), C_RGB(r=186, g=255, b=43)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=687, chunk_type=b'IDAT', chunk_crc=b'\xa5\xb3\xc33')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cdfn2c08.png"
test description : physical pixel dimensions, 8x32 flat pixels
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'pHYs'; 9 bytes
parsing b'IDAT'; 295 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xa0\x92\xae\x87', width=8, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_pHYs(is_parsed=True, chunk_size=9, chunk_type=b'pHYs', chunk_crc=b'2R0\x93', pixel_per_unit_x=1, pixel_per_unit_y=4, unit_specifier=0)
  [004] - CT_IDAT(is_parsed=True, chunk_size=295, chunk_type=b'IDAT', chunk_crc=b's \xf0\xb7')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cdhn2c08.png"
test description : physical pixel dimensions, 32x8 high pixels
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'pHYs'; 9 bytes
parsing b'IDAT'; 235 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x17\xe7j\xf8', width=32, height=8, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_pHYs(is_parsed=True, chunk_size=9, chunk_type=b'pHYs', chunk_crc=b'\x1f\xe8Ue', pixel_per_unit_x=4, pixel_per_unit_y=1, unit_specifier=0)
  [004] - CT_IDAT(is_parsed=True, chunk_size=235, chunk_type=b'IDAT', chunk_crc=b'h\xbe\xfb\xa4')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cdsn2c08.png"
test description : physical pixel dimensions, 8x8 square pixels
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'pHYs'; 9 bytes
parsing b'IDAT'; 123 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'Km)\xdc', width=8, height=8, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_pHYs(is_parsed=True, chunk_size=9, chunk_type=b'pHYs', chunk_crc=b'O%\xc4\xd6', pixel_per_unit_x=1, pixel_per_unit_y=1, unit_specifier=0)
  [004] - CT_IDAT(is_parsed=True, chunk_size=123, chunk_type=b'IDAT', chunk_crc=b'\x17^\xd6\xae')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cdun2c08.png"
test description : physical pixel dimensions, 1000 pixels per 1 meter
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'pHYs'; 9 bytes
parsing b'IDAT'; 615 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_pHYs(is_parsed=True, chunk_size=9, chunk_type=b'pHYs', chunk_crc=b'\xb5{Rk', pixel_per_unit_x=1000, pixel_per_unit_y=1000, unit_specifier=1)
  [004] - CT_IDAT(is_parsed=True, chunk_size=615, chunk_type=b'IDAT', chunk_crc=b'.l\xbb\x12')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ch1n3p04.png"
test description : histogram 15 colors
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 45 bytes
parsing b'hIST'; 30 bytes
WARNING! chunk type b'hIST' parser method is not yet overridden. skipping procedure.
parsing b'IDAT'; 71 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x81Tg\xc7', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=45, chunk_type=b'PLTE', chunk_crc=b'\xd2\xb0I\xbd', entries=[C_RGB(r=34, g=0, b=255), C_RGB(r=0, g=255, b=255), C_RGB(r=136, g=0, b=255), C_RGB(r=34, g=255, b=0), C_RGB(r=0, g=153, b=255), C_RGB(r=255, g=102, b=0), C_RGB(r=221, g=0, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=153), C_RGB(r=221, g=255, b=0), C_RGB(r=255, g=0, b=187), C_RGB(r=255, g=187, b=0), C_RGB(r=0, g=68, b=255), C_RGB(r=0, g=255, b=68)])
  [004] - CT_hIST(is_parsed=False, chunk_size=30, chunk_type=b'hIST', chunk_crc=b'H\x99YA')
  [005] - CT_IDAT(is_parsed=True, chunk_size=71, chunk_type=b'IDAT', chunk_crc=b'\x0f\x82\x05}')
  [006] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ch2n3p08.png"
test description : histogram 256 colors
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 768 bytes
parsing b'hIST'; 512 bytes
WARNING! chunk type b'hIST' parser method is not yet overridden. skipping procedure.
parsing b'IDAT'; 433 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=768, chunk_type=b'PLTE', chunk_crc=b'\xb9\x8e\xd3b', entries=[C_RGB(r=34, g=68, b=0), C_RGB(r=245, g=255, b=237), C_RGB(r=119, g=255, b=119), C_RGB(r=203, g=255, b=255), C_RGB(r=17, g=10, b=0), C_RGB(r=58, g=119, b=0), C_RGB(r=34, g=34, b=255), C_RGB(r=255, g=17, b=255), C_RGB(r=17, g=0, b=0), C_RGB(r=34, g=34, b=0), C_RGB(r=255, g=172, b=85), C_RGB(r=102, g=255, b=102), C_RGB(r=255, g=102, b=102), C_RGB(r=255, g=1, b=255), C_RGB(r=34, g=18, b=0), C_RGB(r=220, g=255, b=255), C_RGB(r=204, g=255, b=153), C_RGB(r=68, g=68, b=255), C_RGB(r=0, g=85, b=85), C_RGB(r=34, g=0, b=0), C_RGB(r=203, g=203, b=255), C_RGB(r=68, g=68, b=0), C_RGB(r=85, g=255, b=85), C_RGB(r=203, g=203, b=0), C_RGB(r=51, g=26, b=0), C_RGB(r=255, g=236, b=220), C_RGB(r=237, g=255, b=255), C_RGB(r=228, g=255, b=203), C_RGB(r=255, g=220, b=220), C_RGB(r=68, g=255, b=68), C_RGB(r=102, g=102, b=255), C_RGB(r=51, g=0, b=0), C_RGB(r=68, g=34, b=0), C_RGB(r=237, g=237, b=255), C_RGB(r=102, g=102, b=0), C_RGB(r=255, g=164, b=68), C_RGB(r=255, g=255, b=170), C_RGB(r=237, g=237, b=0), C_RGB(r=0, g=203, b=203), C_RGB(r=254, g=255, b=255), C_RGB(r=253, g=255, b=254), C_RGB(r=255, g=255, b=1), C_RGB(r=51, g=255, b=51), C_RGB(r=85, g=42, b=0), C_RGB(r=1, g=1, b=255), C_RGB(r=136, g=136, b=255), C_RGB(r=0, g=170, b=170), C_RGB(r=1, g=1, b=0), C_RGB(r=68, g=0, b=0), C_RGB(r=136, g=136, b=0), C_RGB(r=255, g=228, b=203), C_RGB(r=186, g=91, b=0), C_RGB(r=34, g=255, b=34), C_RGB(r=102, g=50, b=0), C_RGB(r=255, g=255, b=153), C_RGB(r=170, g=170, b=255), C_RGB(r=85, g=0, b=0), C_RGB(r=170, g=170, b=0), C_RGB(r=203, g=99, b=0), C_RGB(r=17, g=255, b=17), C_RGB(r=212, g=255, b=170), C_RGB(r=119, g=58, b=0), C_RGB(r=255, g=68, b=68), C_RGB(r=220, g=107, b=0), C_RGB(r=102, g=0, b=0), C_RGB(r=1, g=255, b=1), C_RGB(r=136, g=66, b=0), C_RGB(r=236, g=255, b=220), C_RGB(r=107, g=220, b=0), C_RGB(r=255, g=220, b=186), C_RGB(r=0, g=51, b=51), C_RGB(r=0, g=237, b=0), C_RGB(r=237, g=115, b=0), C_RGB(r=255, g=255, b=136), C_RGB(r=153, g=74, b=0), C_RGB(r=17, g=255, b=255), C_RGB(r=119, g=0, b=0), C_RGB(r=255, g=131, b=1), C_RGB(r=255, g=186, b=186), C_RGB(r=254, g=123, b=0), C_RGB(r=255, g=254, b=255), C_RGB(r=0, g=203, b=0), C_RGB(r=255, g=153, b=153), C_RGB(r=34, g=255, b=255), C_RGB(r=136, g=0, b=0), C_RGB(r=255, g=255, b=119), C_RGB(r=0, g=136, b=136), C_RGB(r=255, g=220, b=255), C_RGB(r=26, g=51, b=0), C_RGB(r=0, g=0, b=170), C_RGB(r=51, g=255, b=255), C_RGB(r=0, g=153, b=0), C_RGB(r=153, g=0, b=0), C_RGB(r=0, g=0, b=1), C_RGB(r=50, g=102, b=0), C_RGB(r=255, g=186, b=255), C_RGB(r=68, g=255, b=255), C_RGB(r=255, g=170, b=255), C_RGB(r=0, g=119, b=0), C_RGB(r=0, g=254, b=254), C_RGB(r=170, g=0, b=0), C_RGB(r=74, g=153, b=0), C_RGB(r=255, g=255, b=102), C_RGB(r=255, g=34, b=34), C_RGB(r=0, g=0, b=153), C_RGB(r=139, g=255, b=17), C_RGB(r=85, g=255, b=255), C_RGB(r=255, g=1, b=1), C_RGB(r=255, g=136, b=255), C_RGB(r=0, g=85, b=0), C_RGB(r=0, g=17, b=17), C_RGB(r=255, g=255, b=254), C_RGB(r=255, g=253, b=254), C_RGB(r=164, g=255, b=68), C_RGB(r=102, g=255, b=255), C_RGB(r=255, g=102, b=255), C_RGB(r=0, g=51, b=0), C_RGB(r=255, g=255, b=85), C_RGB(r=255, g=119, b=119), C_RGB(r=0, g=0, b=136), C_RGB(r=255, g=68, b=255), C_RGB(r=0, g=17, b=0), C_RGB(r=119, g=255, b=255), C_RGB(r=0, g=102, b=102), C_RGB(r=255, g=255, b=237), C_RGB(r=0, g=1, b=0), C_RGB(r=255, g=245, b=237), C_RGB(r=17, g=17, b=255), C_RGB(r=255, g=255, b=68), C_RGB(r=255, g=34, b=255), C_RGB(r=255, g=237, b=237), C_RGB(r=17, g=17, b=0), C_RGB(r=136, g=255, b=255), C_RGB(r=0, g=0, b=119), C_RGB(r=147, g=255, b=34), C_RGB(r=0, g=220, b=220), C_RGB(r=51, g=51, b=255), C_RGB(r=254, g=0, b=254), C_RGB(r=186, g=186, b=255), C_RGB(r=153, g=255, b=255), C_RGB(r=51, g=51, b=0), C_RGB(r=99, g=203, b=0), C_RGB(r=186, g=186, b=0), C_RGB(r=172, g=255, b=85), C_RGB(r=255, g=255, b=220), C_RGB(r=255, g=255, b=51), C_RGB(r=123, g=254, b=0), C_RGB(r=237, g=0, b=237), C_RGB(r=85, g=85, b=255), C_RGB(r=170, g=255, b=255), C_RGB(r=220, g=220, b=255), C_RGB(r=85, g=85, b=0), C_RGB(r=0, g=0, b=102), C_RGB(r=220, g=220, b=0), C_RGB(r=220, g=0, b=220), C_RGB(r=131, g=255, b=1), C_RGB(r=119, g=119, b=255), C_RGB(r=254, g=254, b=255), C_RGB(r=255, g=255, b=203), C_RGB(r=255, g=85, b=85), C_RGB(r=119, g=119, b=0), C_RGB(r=254, g=254, b=0), C_RGB(r=203, g=0, b=203), C_RGB(r=0, g=0, b=254), C_RGB(r=1, g=2, b=0), C_RGB(r=1, g=0, b=0), C_RGB(r=18, g=34, b=0), C_RGB(r=255, g=255, b=34), C_RGB(r=0, g=68, b=68), C_RGB(r=155, g=255, b=51), C_RGB(r=255, g=212, b=170), C_RGB(r=0, g=0, b=85), C_RGB(r=153, g=153, b=255), C_RGB(r=153, g=153, b=0), C_RGB(r=186, g=0, b=186), C_RGB(r=42, g=85, b=0), C_RGB(r=255, g=203, b=203), C_RGB(r=180, g=255, b=102), C_RGB(r=255, g=155, b=51), C_RGB(r=255, g=255, b=186), C_RGB(r=170, g=0, b=170), C_RGB(r=66, g=136, b=0), C_RGB(r=83, g=170, b=0), C_RGB(r=255, g=170, b=170), C_RGB(r=0, g=0, b=237), C_RGB(r=0, g=186, b=186), C_RGB(r=255, g=255, b=17), C_RGB(r=0, g=254, b=0), C_RGB(r=0, g=0, b=68), C_RGB(r=0, g=153, b=153), C_RGB(r=153, g=0, b=153), C_RGB(r=255, g=204, b=153), C_RGB(r=186, g=0, b=0), C_RGB(r=136, g=0, b=136), C_RGB(r=0, g=220, b=0), C_RGB(r=255, g=147, b=34), C_RGB(r=0, g=0, b=220), C_RGB(r=254, g=255, b=254), C_RGB(r=170, g=83, b=0), C_RGB(r=119, g=0, b=119), C_RGB(r=2, g=1, b=0), C_RGB(r=203, g=0, b=0), C_RGB(r=0, g=0, b=51), C_RGB(r=255, g=237, b=255), C_RGB(r=0, g=186, b=0), C_RGB(r=255, g=51, b=51), C_RGB(r=237, g=255, b=237), C_RGB(r=255, g=196, b=136), C_RGB(r=188, g=255, b=119), C_RGB(r=0, g=170, b=0), C_RGB(r=102, g=0, b=102), C_RGB(r=0, g=34, b=34), C_RGB(r=220, g=0, b=0), C_RGB(r=255, g=203, b=255), C_RGB(r=220, g=255, b=220), C_RGB(r=255, g=139, b=17), C_RGB(r=0, g=0, b=203), C_RGB(r=0, g=1, b=1), C_RGB(r=85, g=0, b=85), C_RGB(r=0, g=136, b=0), C_RGB(r=0, g=0, b=34), C_RGB(r=1, g=255, b=255), C_RGB(r=203, g=255, b=203), C_RGB(r=237, g=0, b=0), C_RGB(r=255, g=136, b=136), C_RGB(r=68, g=0, b=68), C_RGB(r=91, g=186, b=0), C_RGB(r=255, g=188, b=119), C_RGB(r=255, g=153, b=255), C_RGB(r=0, g=102, b=0), C_RGB(r=186, g=255, b=186), C_RGB(r=0, g=119, b=119), C_RGB(r=115, g=237, b=0), C_RGB(r=254, g=0, b=0), C_RGB(r=51, g=0, b=51), C_RGB(r=0, g=0, b=186), C_RGB(r=255, g=119, b=255), C_RGB(r=0, g=68, b=0), C_RGB(r=170, g=255, b=170), C_RGB(r=255, g=254, b=254), C_RGB(r=0, g=0, b=17), C_RGB(r=34, g=0, b=34), C_RGB(r=196, g=255, b=136), C_RGB(r=0, g=237, b=237), C_RGB(r=153, g=255, b=153), C_RGB(r=255, g=85, b=255), C_RGB(r=0, g=34, b=0), C_RGB(r=255, g=180, b=102), C_RGB(r=17, g=0, b=17), C_RGB(r=10, g=17, b=0), C_RGB(r=255, g=17, b=17), C_RGB(r=220, g=255, b=186), C_RGB(r=186, g=255, b=255), C_RGB(r=136, g=255, b=136), C_RGB(r=1, g=0, b=1), C_RGB(r=255, g=51, b=255)])
  [003] - CT_hIST(is_parsed=False, chunk_size=512, chunk_type=b'hIST', chunk_crc=b'M\xcc\xf5\xe3')
  [004] - CT_IDAT(is_parsed=True, chunk_size=433, chunk_type=b'IDAT', chunk_crc=b'\x87\x96\xc8\xe0')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cm0n0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tIME'; 7 bytes
parsing b'IDAT'; 200 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tIME(is_parsed=True, chunk_size=7, chunk_type=b'tIME', chunk_crc=b'\xdd\x9c\xff\x80', year=2000, month=1, day=1, hour=12, minute=34, second=56)
  [003] - CT_IDAT(is_parsed=True, chunk_size=200, chunk_type=b'IDAT', chunk_crc=b'\xf8\xff\x89k')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cm7n0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tIME'; 7 bytes
parsing b'IDAT'; 200 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tIME(is_parsed=True, chunk_size=7, chunk_type=b'tIME', chunk_crc=b'\x1e\nV\x0b', year=1970, month=1, day=1, hour=0, minute=0, second=0)
  [003] - CT_IDAT(is_parsed=True, chunk_size=200, chunk_type=b'IDAT', chunk_crc=b'\xf8\xff\x89k')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cm9n0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tIME'; 7 bytes
parsing b'IDAT'; 200 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tIME(is_parsed=True, chunk_size=7, chunk_type=b'tIME', chunk_crc=b'u0\x1f\xe0', year=1999, month=12, day=31, hour=23, minute=59, second=59)
  [003] - CT_IDAT(is_parsed=True, chunk_size=200, chunk_type=b'IDAT', chunk_crc=b'\xf8\xff\x89k')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cs3n2c16.png"
test description : color, 13 significant bits
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'IDAT'; 126 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'\xd07\x8d\xc1', sbit_n_r=13, sbit_n_g=13, sbit_n_b=13, sbit_n_a=None)
  [003] - CT_IDAT(is_parsed=True, chunk_size=126, chunk_type=b'IDAT', chunk_crc=b'\\\x7fvg')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cs3n3p08.png"
test description : paletted, 3 significant bits
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 84 bytes
parsing b'IDAT'; 75 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'\xa3\x92\xa0B', sbit_n_r=3, sbit_n_g=3, sbit_n_b=3, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=84, chunk_type=b'PLTE', chunk_crc=b'\xdfp+\x17', entries=[C_RGB(r=146, g=255, b=0), C_RGB(r=0, g=255, b=146), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=0, g=219, b=255), C_RGB(r=0, g=255, b=109), C_RGB(r=255, g=182, b=0), C_RGB(r=0, g=109, b=255), C_RGB(r=182, g=255, b=0), C_RGB(r=255, g=146, b=0), C_RGB(r=219, g=255, b=0), C_RGB(r=0, g=73, b=255), C_RGB(r=255, g=36, b=0), C_RGB(r=255, g=0, b=0), C_RGB(r=36, g=255, b=0), C_RGB(r=73, g=255, b=0), C_RGB(r=0, g=255, b=219), C_RGB(r=0, g=255, b=73), C_RGB(r=0, g=255, b=182), C_RGB(r=255, g=255, b=0), C_RGB(r=0, g=255, b=36), C_RGB(r=0, g=182, b=255), C_RGB(r=255, g=219, b=0), C_RGB(r=0, g=146, b=255), C_RGB(r=255, g=109, b=0), C_RGB(r=0, g=36, b=255), C_RGB(r=255, g=73, b=0), C_RGB(r=109, g=255, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=75, chunk_type=b'IDAT', chunk_crc=b'w\xf4\xae&')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cs5n2c08.png"
test description : color, 5 significant bits
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'IDAT'; 98 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'\x18&\xdeC', sbit_n_r=5, sbit_n_g=5, sbit_n_b=5, sbit_n_a=None)
  [003] - CT_IDAT(is_parsed=True, chunk_size=98, chunk_type=b'IDAT', chunk_crc=b'\x10\x10\xb9h')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cs5n3p08.png"
test description : paletted, 5 significant bits
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 96 bytes
parsing b'IDAT'; 75 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'\x18&\xdeC', sbit_n_r=5, sbit_n_g=5, sbit_n_b=5, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=96, chunk_type=b'PLTE', chunk_crc=b'G/\x85\xf5', entries=[C_RGB(r=255, g=25, b=0), C_RGB(r=66, g=255, b=0), C_RGB(r=197, g=255, b=0), C_RGB(r=0, g=255, b=123), C_RGB(r=0, g=255, b=189), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=0, g=197, b=255), C_RGB(r=0, g=165, b=255), C_RGB(r=255, g=222, b=0), C_RGB(r=165, g=255, b=0), C_RGB(r=0, g=99, b=255), C_RGB(r=255, g=156, b=0), C_RGB(r=0, g=33, b=255), C_RGB(r=255, g=90, b=0), C_RGB(r=0, g=255, b=58), C_RGB(r=255, g=58, b=0), C_RGB(r=99, g=255, b=0), C_RGB(r=230, g=255, b=0), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=90), C_RGB(r=33, g=255, b=0), C_RGB(r=0, g=255, b=156), C_RGB(r=0, g=255, b=222), C_RGB(r=0, g=230, b=255), C_RGB(r=255, g=255, b=0), C_RGB(r=0, g=132, b=255), C_RGB(r=255, g=189, b=0), C_RGB(r=0, g=66, b=255), C_RGB(r=255, g=123, b=0), C_RGB(r=132, g=255, b=0), C_RGB(r=0, g=255, b=25)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=75, chunk_type=b'IDAT', chunk_crc=b'\xed\xd6\xf1\xbb')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cs8n2c08.png"
test description : color, 8 significant bits (reference)
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 76 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=76, chunk_type=b'IDAT', chunk_crc=b'F\xa1\xe4\xaa')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cs8n3p08.png"
test description : paletted, 8 significant bits (reference)
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 96 bytes
parsing b'IDAT'; 75 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=96, chunk_type=b'PLTE', chunk_crc=b'\xb3\x81\xb3c', entries=[C_RGB(r=32, g=255, b=0), C_RGB(r=255, g=31, b=0), C_RGB(r=0, g=255, b=31), C_RGB(r=0, g=255, b=223), C_RGB(r=160, g=255, b=0), C_RGB(r=0, g=255, b=63), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=128, g=255, b=0), C_RGB(r=0, g=255, b=95), C_RGB(r=0, g=255, b=127), C_RGB(r=96, g=255, b=0), C_RGB(r=255, g=0, b=0), C_RGB(r=224, g=255, b=0), C_RGB(r=0, g=255, b=159), C_RGB(r=0, g=224, b=255), C_RGB(r=64, g=255, b=0), C_RGB(r=255, g=255, b=0), C_RGB(r=0, g=192, b=255), C_RGB(r=255, g=223, b=0), C_RGB(r=0, g=160, b=255), C_RGB(r=255, g=191, b=0), C_RGB(r=0, g=128, b=255), C_RGB(r=192, g=255, b=0), C_RGB(r=0, g=255, b=191), C_RGB(r=255, g=159, b=0), C_RGB(r=0, g=96, b=255), C_RGB(r=255, g=127, b=0), C_RGB(r=0, g=64, b=255), C_RGB(r=255, g=95, b=0), C_RGB(r=0, g=32, b=255), C_RGB(r=255, g=63, b=0)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=75, chunk_type=b'IDAT', chunk_crc=b'\xf8\xf3S\xd9')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ct0n0g04.png"
test description : no textual data
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 200 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=200, chunk_type=b'IDAT', chunk_crc=b'\xf8\xff\x89k')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ct1n0g04.png"
test description : with textual data
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tEXt'; 14 bytes
parsing b'tEXt'; 49 bytes
parsing b'tEXt'; 56 bytes
parsing b'tEXt'; 251 bytes
parsing b'tEXt'; 57 bytes
parsing b'tEXt'; 20 bytes
parsing b'IDAT'; 200 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tEXt(is_parsed=True, chunk_size=14, chunk_type=b'tEXt', chunk_crc=b'OU\xcfL', keyword=b'Title', text=b'PngSuite')
  [003] - CT_tEXt(is_parsed=True, chunk_size=49, chunk_type=b'tEXt', chunk_crc=b'\x8e\xccG\x1f', keyword=b'Author', text=b'Willem A.J. van Schaik\n(willem@schaik.com)')
  [004] - CT_tEXt(is_parsed=True, chunk_size=56, chunk_type=b'tEXt', chunk_crc=b'\x84P\x048', keyword=b'Copyright', text=b'Copyright Willem van Schaik, Singapore 1995-96')
  [005] - CT_tEXt(is_parsed=True, chunk_size=251, chunk_type=b'tEXt', chunk_crc=b'M\t\rk', keyword=b'Description', text=b'A compilation of a set of images created to test the\nvarious color-types of the PNG format. Included are\nblack&white, color, paletted, with alpha channel, with\ntransparency formats. All bit-depths allowed according\nto the spec are present.')
  [006] - CT_tEXt(is_parsed=True, chunk_size=57, chunk_type=b'tEXt', chunk_crc=b'j\x12dy', keyword=b'Software', text=b'Created on a NeXTstation color using "pnmtopng".')
  [007] - CT_tEXt(is_parsed=True, chunk_size=20, chunk_type=b'tEXt', chunk_crc=b'_\x80,J', keyword=b'Disclaimer', text=b'Freeware.')
  [008] - CT_IDAT(is_parsed=True, chunk_size=200, chunk_type=b'IDAT', chunk_crc=b'\xf8\xff\x89k')
  [009] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cten0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'iTXt'; 25 bytes
parsing b'iTXt'; 56 bytes
parsing b'iTXt'; 65 bytes
parsing b'iTXt'; 268 bytes
parsing b'iTXt'; 71 bytes
parsing b'iTXt'; 36 bytes
parsing b'IDAT'; 76 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_iTXt(is_parsed=True, chunk_size=25, chunk_type=b'iTXt', chunk_crc=b'\xd5\xac\xc5\x1e', keyword=b'Title', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'en', translated_keyword=b'Title', text=b'PngSuite')
  [003] - CT_iTXt(is_parsed=True, chunk_size=56, chunk_type=b'iTXt', chunk_crc=b'EW \xa4', keyword=b'Author', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'en', translated_keyword=b'Author', text=b'Willem van Schaik (willem@schaik.com)')
  [004] - CT_iTXt(is_parsed=True, chunk_size=65, chunk_type=b'iTXt', chunk_crc=b'\xd2\xeb3\xc1', keyword=b'Copyright', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'en', translated_keyword=b'Copyright', text=b'Copyright Willem van Schaik, Canada 2011')
  [005] - CT_iTXt(is_parsed=True, chunk_size=268, chunk_type=b'iTXt', chunk_crc=b'~5\rD', keyword=b'Description', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'en', translated_keyword=b'Description', text=b'A compilation of a set of images created to test the various color-types of the PNG format. Included are black&white, color, paletted, with alpha channel, with transparency formats. All bit-depths allowed according to the spec are present.')
  [006] - CT_iTXt(is_parsed=True, chunk_size=71, chunk_type=b'iTXt', chunk_crc=b'\xc4\x19\x05\x07', keyword=b'Software', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'en', translated_keyword=b'Software', text=b'Created on a NeXTstation color using "pnmtopng".')
  [007] - CT_iTXt(is_parsed=True, chunk_size=36, chunk_type=b'iTXt', chunk_crc=b'\xd3\xbe2\t', keyword=b'Disclaimer', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'en', translated_keyword=b'Disclaimer', text=b'Freeware.')
  [008] - CT_IDAT(is_parsed=True, chunk_size=76, chunk_type=b'IDAT', chunk_crc=b'U\xd64\x97')
  [009] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ctfn0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'iTXt'; 27 bytes
parsing b'iTXt'; 57 bytes
parsing b'iTXt'; 72 bytes
parsing b'iTXt'; 235 bytes
parsing b'iTXt'; 63 bytes
parsing b'iTXt'; 45 bytes
parsing b'IDAT'; 72 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_iTXt(is_parsed=True, chunk_size=27, chunk_type=b'iTXt', chunk_crc=b'\xf3\x1f\xc8I', keyword=b'Title', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'fi', translated_keyword=b'Otsikko', text=b'PngSuite')
  [003] - CT_iTXt(is_parsed=True, chunk_size=57, chunk_type=b'iTXt', chunk_crc=b'M\xb2\x98\xd5', keyword=b'Author', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'fi', translated_keyword=b'Tekij\xc3\xa4', text=b'Willem van Schaik (willem@schaik.com)')
  [004] - CT_iTXt(is_parsed=True, chunk_size=72, chunk_type=b'iTXt', chunk_crc=b'\x18\xfd\xbf\x87', keyword=b'Copyright', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'fi', translated_keyword=b'Tekij\xc3\xa4noikeudet', text=b'Copyright Willem van Schaik, Kanada 2011')
  [005] - CT_iTXt(is_parsed=True, chunk_size=235, chunk_type=b'iTXt', chunk_crc=b'\xc76qY', keyword=b'Description', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'fi', translated_keyword=b'Kuvaus', text=b'kokoelma joukon kuvia luotu testata eri v\xc3\xa4ri-tyyppisi\xc3\xa4 PNG-muodossa. Mukana on mustavalkoinen, v\xc3\xa4ri, paletted, alpha-kanava, avoimuuden muodossa. Kaikki bit-syvyydess\xc3\xa4 mukaan sallittua spec on \xe2\x80\x8b\xe2\x80\x8bl\xc3\xa4sn\xc3\xa4.')
  [006] - CT_iTXt(is_parsed=True, chunk_size=63, chunk_type=b'iTXt', chunk_crc=b'Qm\xa5]', keyword=b'Software', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'fi', translated_keyword=b'Ohjelmistot', text=b'Luotu NeXTstation v\xc3\xa4ri\xc3\xa4 "pnmtopng".')
  [007] - CT_iTXt(is_parsed=True, chunk_size=45, chunk_type=b'iTXt', chunk_crc=b'\xfcw\x1e/', keyword=b'Disclaimer', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'fi', translated_keyword=b'Vastuuvapauslauseke', text=b'Freeware.')
  [008] - CT_IDAT(is_parsed=True, chunk_size=72, chunk_type=b'IDAT', chunk_crc=b'\x12\xd0\xc4\xbd')
  [009] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ctgn0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'iTXt'; 32 bytes
parsing b'iTXt'; 70 bytes
parsing b'iTXt'; 137 bytes
parsing b'iTXt'; 501 bytes
parsing b'iTXt'; 137 bytes
parsing b'iTXt'; 67 bytes
parsing b'IDAT'; 93 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_iTXt(is_parsed=True, chunk_size=32, chunk_type=b'iTXt', chunk_crc=b' \x87@\xb9', keyword=b'Title', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'el', translated_keyword=b'\xce\xa4\xce\xaf\xcf\x84\xce\xbb\xce\xbf\xcf\x82', text=b'PngSuite')
  [003] - CT_iTXt(is_parsed=True, chunk_size=70, chunk_type=b'iTXt', chunk_crc=b'\xd6*6f', keyword=b'Author', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'el', translated_keyword=b'\xce\xa3\xcf\x85\xce\xb3\xce\xb3\xcf\x81\xce\xb1\xcf\x86\xce\xad\xce\xb1\xcf\x82', text=b'Willem van Schaik (willem@schaik.com)')
  [004] - CT_iTXt(is_parsed=True, chunk_size=137, chunk_type=b'iTXt', chunk_crc=b'\xd7#\xe4v', keyword=b'Copyright', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'el', translated_keyword=b'\xce\xa0\xce\xbd\xce\xb5\xcf\x85\xce\xbc\xce\xb1\xcf\x84\xce\xb9\xce\xba\xce\xac \xce\xb4\xce\xb9\xce\xba\xce\xb1\xce\xb9\xcf\x8e\xce\xbc\xce\xb1\xcf\x84\xce\xb1', text=b'\xce\xa0\xce\xbd\xce\xb5\xcf\x85\xce\xbc\xce\xb1\xcf\x84\xce\xb9\xce\xba\xce\xac \xce\xb4\xce\xb9\xce\xba\xce\xb1\xce\xb9\xcf\x8e\xce\xbc\xce\xb1\xcf\x84\xce\xb1 Schaik van Willem, \xce\x9a\xce\xb1\xce\xbd\xce\xb1\xce\xb4\xce\xac\xcf\x82 2011')
  [005] - CT_iTXt(is_parsed=True, chunk_size=501, chunk_type=b'iTXt', chunk_crc=b'\xa6\x88)\x18', keyword=b'Description', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'el', translated_keyword=b'\xce\xa0\xce\xb5\xcf\x81\xce\xb9\xce\xb3\xcf\x81\xce\xb1\xcf\x86\xce\xae', text=b'\xce\x9c\xce\xb9\xce\xb1 \xcf\x83\xcf\x85\xce\xbb\xce\xbb\xce\xbf\xce\xb3\xce\xae \xce\xb1\xcf\x80\xcf\x8c \xce\xad\xce\xbd\xce\xb1 \xcf\x83\xcf\x8d\xce\xbd\xce\xbf\xce\xbb\xce\xbf \xce\xb5\xce\xb9\xce\xba\xcf\x8c\xce\xbd\xcf\x89\xce\xbd \xcf\x80\xce\xbf\xcf\x85 \xce\xb4\xce\xb7\xce\xbc\xce\xb9\xce\xbf\xcf\x85\xcf\x81\xce\xb3\xce\xae\xce\xb8\xce\xb7\xce\xba\xce\xb1\xce\xbd \xce\xb3\xce\xb9\xce\xb1 \xcf\x84\xce\xb7 \xce\xb4\xce\xbf\xce\xba\xce\xb9\xce\xbc\xce\xae \xcf\x84\xcf\x89\xce\xbd \xce\xb4\xce\xb9\xce\xb1\xcf\x86\xcf\x8c\xcf\x81\xcf\x89\xce\xbd \xcf\x87\xcf\x81\xcf\x89\xce\xbc\xce\xac\xcf\x84\xcf\x89\xce\xbd-\xcf\x84\xcf\x8d\xcf\x80\xcf\x89\xce\xbd \xcf\x84\xce\xbf\xcf\x85 \xce\xbc\xce\xbf\xcf\x81\xcf\x86\xce\xae PNG. \xce\xa0\xce\xb5\xcf\x81\xce\xb9\xce\xbb\xce\xb1\xce\xbc\xce\xb2\xce\xac\xce\xbd\xce\xbf\xce\xbd\xcf\x84\xce\xb1\xce\xb9 \xce\xbf\xce\xb9 \xce\xb1\xcf\x83\xcf\x80\xcf\x81\xcf\x8c\xce\xbc\xce\xb1\xcf\x85\xcf\x81\xce\xb5\xcf\x82, \xcf\x87\xcf\x81\xcf\x8e\xce\xbc\xce\xb1, paletted, \xce\xbc\xce\xb5 \xce\xac\xce\xbb\xcf\x86\xce\xb1 \xce\xba\xce\xb1\xce\xbd\xce\xac\xce\xbb\xce\xb9, \xce\xbc\xce\xb5 \xce\xbc\xce\xbf\xcf\x81\xcf\x86\xce\xad\xcf\x82 \xcf\x84\xce\xb7\xcf\x82 \xce\xb4\xce\xb9\xce\xb1\xcf\x86\xce\xac\xce\xbd\xce\xb5\xce\xb9\xce\xb1\xcf\x82. \xce\x8c\xce\xbb\xce\xbf\xce\xb9 \xce\xbb\xce\xaf\xce\xb3\xce\xbf-\xce\xb2\xce\xac\xce\xb8\xce\xb7 \xce\xb5\xcf\x80\xce\xb9\xcf\x84\xcf\x81\xce\xad\xcf\x80\xce\xb5\xcf\x84\xce\xb1\xce\xb9 \xcf\x83\xcf\x8d\xce\xbc\xcf\x86\xcf\x89\xce\xbd\xce\xb1 \xce\xbc\xce\xb5 \xcf\x84\xce\xbf spec \xce\xb5\xce\xaf\xce\xbd\xce\xb1\xce\xb9 \xcf\x80\xce\xb1\xcf\x81\xcf\x8c\xce\xbd\xcf\x84\xce\xb5\xcf\x82.')
  [006] - CT_iTXt(is_parsed=True, chunk_size=137, chunk_type=b'iTXt', chunk_crc=b'Cx\xcb\xeb', keyword=b'Software', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'el', translated_keyword=b'\xce\x9b\xce\xbf\xce\xb3\xce\xb9\xcf\x83\xce\xbc\xce\xb9\xce\xba\xcf\x8c', text=b'\xce\x94\xce\xb7\xce\xbc\xce\xb9\xce\xbf\xcf\x85\xcf\x81\xce\xb3\xce\xae\xce\xb8\xce\xb7\xce\xba\xce\xb5 \xcf\x83\xce\xb5 \xce\xad\xce\xbd\xce\xb1 \xcf\x87\xcf\x81\xcf\x8e\xce\xbc\xce\xb1 NeXTstation \xcf\x87\xcf\x81\xce\xb7\xcf\x83\xce\xb9\xce\xbc\xce\xbf\xcf\x80\xce\xbf\xce\xb9\xcf\x8e\xce\xbd\xcf\x84\xce\xb1\xcf\x82 "pnmtopng".')
  [007] - CT_iTXt(is_parsed=True, chunk_size=67, chunk_type=b'iTXt', chunk_crc=b',\x9e\xafl', keyword=b'Disclaimer', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'el', translated_keyword=b'\xce\x91\xcf\x80\xce\xbf\xcf\x80\xce\xbf\xce\xaf\xce\xb7\xcf\x83\xce\xb7', text=b'\xce\x94\xcf\x89\xcf\x81\xce\xb5\xce\xac\xce\xbd \xce\xbb\xce\xbf\xce\xb3\xce\xb9\xcf\x83\xce\xbc\xce\xb9\xce\xba\xcf\x8c.')
  [008] - CT_IDAT(is_parsed=True, chunk_size=93, chunk_type=b'IDAT', chunk_crc=b'\x0f\xb2\x93E')
  [009] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\cthn0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'iTXt'; 38 bytes
parsing b'iTXt'; 62 bytes
parsing b'iTXt'; 104 bytes
parsing b'iTXt'; 613 bytes
parsing b'iTXt'; 145 bytes
parsing b'iTXt'; 66 bytes
parsing b'IDAT'; 96 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_iTXt(is_parsed=True, chunk_size=38, chunk_type=b'iTXt', chunk_crc=b'S\xfdK\xb7', keyword=b'Title', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'hi', translated_keyword=b'\xe0\xa4\xb6\xe0\xa5\x80\xe0\xa4\xb0\xe0\xa5\x8d\xe0\xa4\xb7\xe0\xa4\x95', text=b'PngSuite')
  [003] - CT_iTXt(is_parsed=True, chunk_size=62, chunk_type=b'iTXt', chunk_crc=b'\xcfM}\xe7', keyword=b'Author', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'hi', translated_keyword=b'\xe0\xa4\xb2\xe0\xa5\x87\xe0\xa4\x96\xe0\xa4\x95', text=b'Willem van Schaik (willem@schaik.com)')
  [004] - CT_iTXt(is_parsed=True, chunk_size=104, chunk_type=b'iTXt', chunk_crc=b'\xdf\x14\xd5\x85', keyword=b'Copyright', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'hi', translated_keyword=b'\xe0\xa4\x95\xe0\xa5\x89\xe0\xa4\xaa\xe0\xa5\x80\xe0\xa4\xb0\xe0\xa4\xbe\xe0\xa4\x87\xe0\xa4\x9f', text=b'\xe0\xa4\x95\xe0\xa5\x89\xe0\xa4\xaa\xe0\xa5\x80\xe0\xa4\xb0\xe0\xa4\xbe\xe0\xa4\x87\xe0\xa4\x9f Willem van Schaik, 2011 \xe0\xa4\x95\xe0\xa4\xa8\xe0\xa4\xbe\xe0\xa4\xa1\xe0\xa4\xbe')
  [005] - CT_iTXt(is_parsed=True, chunk_size=613, chunk_type=b'iTXt', chunk_crc=b'\xfa\xd4\x91\x06', keyword=b'Description', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'hi', translated_keyword=b'\xe0\xa4\xb5\xe0\xa4\xbf\xe0\xa4\xb5\xe0\xa4\xb0\xe0\xa4\xa3', text=b'\xe0\xa4\x95\xe0\xa4\xb0\xe0\xa4\xa8\xe0\xa5\x87 \xe0\xa4\x95\xe0\xa5\x87 \xe0\xa4\xb2\xe0\xa4\xbf\xe0\xa4\x8f PNG \xe0\xa4\xaa\xe0\xa5\x8d\xe0\xa4\xb0\xe0\xa4\xbe\xe0\xa4\xb0\xe0\xa5\x82\xe0\xa4\xaa \xe0\xa4\x95\xe0\xa5\x87 \xe0\xa4\xb5\xe0\xa4\xbf\xe0\xa4\xad\xe0\xa4\xbf\xe0\xa4\xa8\xe0\xa5\x8d\xe0\xa4\xa8 \xe0\xa4\xb0\xe0\xa4\x82\xe0\xa4\x97 \xe0\xa4\xaa\xe0\xa5\x8d\xe0\xa4\xb0\xe0\xa4\x95\xe0\xa4\xbe\xe0\xa4\xb0 \xe0\xa4\xaa\xe0\xa4\xb0\xe0\xa5\x80\xe0\xa4\x95\xe0\xa5\x8d\xe0\xa4\xb7\xe0\xa4\xa3 \xe0\xa4\xac\xe0\xa4\xa8\xe0\xa4\xbe\xe0\xa4\xaf\xe0\xa4\xbe \xe0\xa4\x9b\xe0\xa4\xb5\xe0\xa4\xbf\xe0\xa4\xaf\xe0\xa5\x8b\xe0\xa4\x82 \xe0\xa4\x95\xe0\xa4\xbe \xe0\xa4\x8f\xe0\xa4\x95 \xe0\xa4\xb8\xe0\xa5\x87\xe0\xa4\x9f \xe0\xa4\x95\xe0\xa4\xbe \xe0\xa4\x8f\xe0\xa4\x95 \xe0\xa4\xb8\xe0\xa4\x82\xe0\xa4\x95\xe0\xa4\xb2\xe0\xa4\xa8. \xe0\xa4\xb6\xe0\xa4\xbe\xe0\xa4\xae\xe0\xa4\xbf\xe0\xa4\xb2 \xe0\xa4\x95\xe0\xa4\xbe\xe0\xa4\xb2\xe0\xa5\x87 \xe0\xa4\x94\xe0\xa4\xb0 \xe0\xa4\xb8\xe0\xa4\xab\xe0\xa5\x87\xe0\xa4\xa6, \xe0\xa4\xb0\xe0\xa4\x82\xe0\xa4\x97, \xe0\xa4\xaa\xe0\xa5\x88\xe0\xa4\xb2\xe0\xa5\x87\xe0\xa4\x9f\xe0\xa5\x87\xe0\xa4\xa1 \xe0\xa4\xb9\xe0\xa5\x88\xe0\xa4\x82, \xe0\xa4\x85\xe0\xa4\xb2\xe0\xa5\x8d\xe0\xa4\xab\xe0\xa4\xbe \xe0\xa4\x9a\xe0\xa5\x88\xe0\xa4\xa8\xe0\xa4\xb2 \xe0\xa4\x95\xe0\xa5\x87 \xe0\xa4\xb8\xe0\xa4\xbe\xe0\xa4\xa5 \xe0\xa4\xaa\xe0\xa4\xbe\xe0\xa4\xb0\xe0\xa4\xa6\xe0\xa4\xb0\xe0\xa5\x8d\xe0\xa4\xb6\xe0\xa4\xbf\xe0\xa4\xa4\xe0\xa4\xbe \xe0\xa4\xb8\xe0\xa5\x8d\xe0\xa4\xb5\xe0\xa4\xb0\xe0\xa5\x82\xe0\xa4\xaa\xe0\xa5\x8b\xe0\xa4\x82 \xe0\xa4\x95\xe0\xa5\x87 \xe0\xa4\xb8\xe0\xa4\xbe\xe0\xa4\xa5. \xe0\xa4\xb8\xe0\xa4\xad\xe0\xa5\x80 \xe0\xa4\xac\xe0\xa4\xbf\xe0\xa4\x9f \xe0\xa4\x97\xe0\xa4\xb9\xe0\xa4\xb0\xe0\xa4\xbe\xe0\xa4\x88 \xe0\xa4\x95\xe0\xa4\xb2\xe0\xa5\x8d\xe0\xa4\xaa\xe0\xa4\xa8\xe0\xa4\xbe \xe0\xa4\x95\xe0\xa5\x87 \xe0\xa4\x85\xe0\xa4\xa8\xe0\xa5\x81\xe0\xa4\xb8\xe0\xa4\xbe\xe0\xa4\xb0 \xe0\xa4\x95\xe0\xa5\x80 \xe0\xa4\x85\xe0\xa4\xa8\xe0\xa5\x81\xe0\xa4\xae\xe0\xa4\xa4\xe0\xa4\xbf \xe0\xa4\xa6\xe0\xa5\x80 \xe0\xa4\xae\xe0\xa5\x8c\xe0\xa4\x9c\xe0\xa5\x82\xe0\xa4\xa6 \xe0\xa4\xb9\xe0\xa5\x88\xe0\xa4\x82.')
  [006] - CT_iTXt(is_parsed=True, chunk_size=145, chunk_type=b'iTXt', chunk_crc=b'\x15\xc5Q\xd7', keyword=b'Software', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'hi', translated_keyword=b'\xe0\xa4\xb8\xe0\xa5\x89\xe0\xa4\xab\xe0\xa5\x8d\xe0\xa4\x9f\xe0\xa4\xb5\xe0\xa5\x87\xe0\xa4\xaf\xe0\xa4\xb0', text=b'\xe0\xa4\x8f\xe0\xa4\x95 NeXTstation "pnmtopng \'\xe0\xa4\x95\xe0\xa4\xbe \xe0\xa4\x89\xe0\xa4\xaa\xe0\xa4\xaf\xe0\xa5\x8b\xe0\xa4\x97 \xe0\xa4\x95\xe0\xa4\xb0 \xe0\xa4\xb0\xe0\xa4\x82\xe0\xa4\x97 \xe0\xa4\xaa\xe0\xa4\xb0 \xe0\xa4\xac\xe0\xa4\xa8\xe0\xa4\xbe\xe0\xa4\xaf\xe0\xa4\xbe \xe0\xa4\x97\xe0\xa4\xaf\xe0\xa4\xbe.')
  [007] - CT_iTXt(is_parsed=True, chunk_size=66, chunk_type=b'iTXt', chunk_crc=b'-O@\xbb', keyword=b'Disclaimer', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'hi', translated_keyword=b'\xe0\xa4\x85\xe0\xa4\xb8\xe0\xa5\x8d\xe0\xa4\xb5\xe0\xa5\x80\xe0\xa4\x95\xe0\xa4\xb0\xe0\xa4\xa3', text=b'\xe0\xa4\xab\xe0\xa5\x8d\xe0\xa4\xb0\xe0\xa5\x80\xe0\xa4\xb5\xe0\xa5\x87\xe0\xa4\xaf\xe0\xa4\xb0.')
  [008] - CT_IDAT(is_parsed=True, chunk_size=96, chunk_type=b'IDAT', chunk_crc=b'\x0c\xcd\xfb\xc1')
  [009] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ctjn0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'iTXt'; 32 bytes
parsing b'iTXt'; 56 bytes
parsing b'iTXt'; 83 bytes
parsing b'iTXt'; 375 bytes
parsing b'iTXt'; 99 bytes
parsing b'iTXt'; 50 bytes
parsing b'IDAT'; 101 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_iTXt(is_parsed=True, chunk_size=32, chunk_type=b'iTXt', chunk_crc=b'\x0f\x1a\\\x02', keyword=b'Title', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'ja', translated_keyword=b'\xe3\x82\xbf\xe3\x82\xa4\xe3\x83\x88\xe3\x83\xab', text=b'PngSuite')
  [003] - CT_iTXt(is_parsed=True, chunk_size=56, chunk_type=b'iTXt', chunk_crc=b'\xe5\xf1\xcc\xa1', keyword=b'Author', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'ja', translated_keyword=b'\xe8\x91\x97\xe8\x80\x85', text=b'Willem van Schaik (willem@schaik.com)')
  [004] - CT_iTXt(is_parsed=True, chunk_size=83, chunk_type=b'iTXt', chunk_crc=b'\x84_m\xbe', keyword=b'Copyright', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'ja', translated_keyword=b'\xe6\x9c\xac\xe6\x96\x87\xe3\x81\xb8', text=b'\xe8\x91\x97\xe4\xbd\x9c\xe6\xa8\xa9\xe3\x82\xa6\xe3\x82\xa3\xe3\x83\xac\xe3\x83\xa0\xe3\x83\xb4\xe3\x82\xa1\xe3\x83\xb3\xe3\x82\xb7\xe3\x83\xa3\xe3\x82\xa4\xe3\x82\xaf\xe3\x80\x81\xe3\x82\xab\xe3\x83\x8a\xe3\x83\x802011')
  [005] - CT_iTXt(is_parsed=True, chunk_size=375, chunk_type=b'iTXt', chunk_crc=b'\xc3\x05\r\xb4', keyword=b'Description', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'ja', translated_keyword=b'\xe6\xa6\x82\xe8\xa6\x81', text=b'PNG\xe5\xbd\xa2\xe5\xbc\x8f\xe3\x81\xae\xe6\xa7\x98\xe3\x80\x85\xe3\x81\xaa\xe8\x89\xb2\xe3\x81\xae\xe7\xa8\xae\xe9\xa1\x9e\xe3\x82\x92\xe3\x83\x86\xe3\x82\xb9\xe3\x83\x88\xe3\x81\x99\xe3\x82\x8b\xe3\x81\x9f\xe3\x82\x81\xe3\x81\xab\xe4\xbd\x9c\xe6\x88\x90\xe3\x81\x95\xe3\x82\x8c\xe3\x81\x9f\xe3\x82\xa4\xe3\x83\xa1\xe3\x83\xbc\xe3\x82\xb8\xe3\x81\xae\xe3\x82\xbb\xe3\x83\x83\xe3\x83\x88\xe3\x81\xae\xe3\x82\xb3\xe3\x83\xb3\xe3\x83\x91\xe3\x82\xa4\xe3\x83\xab\xe3\x80\x82\xe5\x90\xab\xe3\x81\xbe\xe3\x82\x8c\xe3\x81\xa6\xe3\x81\x84\xe3\x82\x8b\xe3\x81\xae\xe3\x81\xaf\xe9\x80\x8f\xe6\x98\x8e\xe5\xba\xa6\xe3\x81\xae\xe3\x83\x95\xe3\x82\xa9\xe3\x83\xbc\xe3\x83\x9e\xe3\x83\x83\xe3\x83\x88\xe3\x81\xa7\xe3\x80\x81\xe3\x82\xa2\xe3\x83\xab\xe3\x83\x95\xe3\x82\xa1\xe3\x83\x81\xe3\x83\xa3\xe3\x83\x8d\xe3\x83\xab\xe3\x82\x92\xe6\x8c\x81\xe3\x81\xa4\xe3\x80\x81\xe7\x99\xbd\xe9\xbb\x92\xe3\x80\x81\xe3\x82\xab\xe3\x83\xa9\xe3\x83\xbc\xe3\x80\x81\xe3\x83\x91\xe3\x83\xac\xe3\x83\x83\xe3\x83\x88\xe3\x81\xa7\xe3\x81\x99\xe3\x80\x82\xe3\x81\x99\xe3\x81\xb9\xe3\x81\xa6\xe3\x81\xae\xe3\x83\x93\xe3\x83\x83\xe3\x83\x88\xe6\xb7\xb1\xe5\xba\xa6\xe3\x81\x8c\xe5\xad\x98\xe5\x9c\xa8\xe3\x81\x97\xe3\x81\xa6\xe3\x81\x84\xe3\x82\x8b\xe4\xbb\x95\xe6\xa7\x98\xe3\x81\xab\xe5\xbe\x93\xe3\x81\xa3\xe3\x81\x9f\xe3\x81\x93\xe3\x81\xa8\xe3\x81\x8c\xe3\x81\xa7\xe3\x81\x8d\xe3\x81\xbe\xe3\x81\x97\xe3\x81\x9f\xe3\x80\x82')
  [006] - CT_iTXt(is_parsed=True, chunk_size=99, chunk_type=b'iTXt', chunk_crc=b'\xc2\x83\xf80', keyword=b'Software', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'ja', translated_keyword=b'\xe3\x82\xbd\xe3\x83\x95\xe3\x83\x88\xe3\x82\xa6\xe3\x82\xa7\xe3\x82\xa2', text=b'"pnmtopng"\xe3\x82\x92\xe4\xbd\xbf\xe7\x94\xa8\xe3\x81\x97\xe3\x81\xa6NeXTstation\xe8\x89\xb2\xe4\xb8\x8a\xe3\x81\xab\xe4\xbd\x9c\xe6\x88\x90\xe3\x81\x95\xe3\x82\x8c\xe3\x81\xbe\xe3\x81\x99\xe3\x80\x82')
  [007] - CT_iTXt(is_parsed=True, chunk_size=50, chunk_type=b'iTXt', chunk_crc=b'v\xf0C\xe6', keyword=b'Disclaimer', compression_flag=b'\x00', compression_method=b'\x00', language_tag=b'ja', translated_keyword=b'\xe5\x85\x8d\xe8\xb2\xac\xe4\xba\x8b\xe9\xa0\x85', text=b'\xe3\x83\x95\xe3\x83\xaa\xe3\x83\xbc\xe3\x82\xa6\xe3\x82\xa7\xe3\x82\xa2\xe3\x80\x82')
  [008] - CT_IDAT(is_parsed=True, chunk_size=101, chunk_type=b'IDAT', chunk_crc=b'\x0cH\x96>')
  [009] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ctzn0g04.png"
test description : with compressed textual data
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tEXt'; 14 bytes
parsing b'tEXt'; 49 bytes
parsing b'zTXt'; 65 bytes
parsing b'zTXt'; 187 bytes
parsing b'zTXt'; 64 bytes
parsing b'zTXt'; 29 bytes
parsing b'IDAT'; 200 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tEXt(is_parsed=True, chunk_size=14, chunk_type=b'tEXt', chunk_crc=b'OU\xcfL', keyword=b'Title', text=b'PngSuite')
  [003] - CT_tEXt(is_parsed=True, chunk_size=49, chunk_type=b'tEXt', chunk_crc=b'\x8e\xccG\x1f', keyword=b'Author', text=b'Willem A.J. van Schaik\n(willem@schaik.com)')
  [004] - CT_zTXt(is_parsed=True, chunk_size=65, chunk_type=b'zTXt', chunk_crc=b'RZ\x94\x12', keyword=b'Copyright', compression_method=b'\x00', compressed_text=b'x\x9cs\xce/\xa8,\xcaL\xcf(Q\x08\xcf\xcc\xc9I\xcdU(K\xccS\x08N\xceH\xcc\xcc\xd6Q\x08\xce\xccKO,\xc8/JU0\xb4\xb44\xd5\xb54\x03\x00\x8ba\x0f\xa4')
  [005] - CT_zTXt(is_parsed=True, chunk_size=187, chunk_type=b'zTXt', chunk_crc=b'\xf2bz\x88', keyword=b'Description', compression_method=b'\x00', compressed_text=b'x\x9c-\x8e\xb1\x0e\xc20\x0cD\xf7~\xc5ML\xa5\xff\xc0\x84X\x10\xbf`\\C"\xdc8J\x0cU\xff\x1eW\xb0Y\xbe{ww\x02\xdbR\xb3\x92g+\xb0\x07\x08]|?\xf2BO\xe9\xe0&\xe42\xc3\r.\xdd\xe1I\x86\x0f\xb5l\xef\xd0L\xad\x1d}\xab\xe1\x0b"$\xdc\xaeg<\xac-\xe4\x13.\x85\xf5=\x07KM\x86\xbb\x12\xbf\x0ek\xca.\xe3\x0f\x1cQI\xc5#|\xc4\x9a=\x81\xb4&\x02\'*E\xf4\xf7\x1b\xbcQ\xe95\x02\no\xff\xe0>\xe1\xa4\x8a{\xf6\xe3,\xd5S\x0fPm\xdd{\x98\xad\xcd\xb9<\x87}m\xac\xe9UxoGm\xd2\xa5\xf8\xf4\x05\x1f\xf2V\x04')
  [006] - CT_zTXt(is_parsed=True, chunk_size=64, chunk_type=b'zTXt', chunk_crc=b'\x9eQ\xa8\xae', keyword=b'Software', compression_method=b'\x00', compressed_text=b'x\x9cs.JM,IMQ\xc8\xcfSHT\xf0K\x8d\x08).I,\xc9\x04\xf2\x92\xf3s\xf2\x8b\x14J\x8b3\xf3\xd2\x15\x94\n\xf2rK\xf2\x0b\xf2\xd2\x95\xf4\x00\xa6\xec\x11B')
  [007] - CT_zTXt(is_parsed=True, chunk_size=29, chunk_type=b'zTXt', chunk_crc=b'\xd4\xae\xb5\xef', keyword=b'Disclaimer', compression_method=b'\x00', compressed_text=b'x\x9cs+JM-O,J\xd5\x03\x00\x11U\x03`')
  [008] - CT_IDAT(is_parsed=True, chunk_size=200, chunk_type=b'IDAT', chunk_crc=b'\xf8\xff\x89k')
  [009] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\exif2c08.png"
test description : not documented
-------------------------------------------------
WARNING! chunk type b'eXIf' is not present in ENUM_PNG_CT_BYTES
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 741 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=741, chunk_type=b'IDAT', chunk_crc=b'\xe6=+$')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f00n0g08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 262 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'V\x11%(', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_IDAT(is_parsed=True, chunk_size=262, chunk_type=b'IDAT', chunk_crc=b'P\xa6\xce\xb6')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f00n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 2418 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=2418, chunk_type=b'IDAT', chunk_crc=b'$\x8d\x93\xc5')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f01n0g08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 264 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'V\x11%(', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_IDAT(is_parsed=True, chunk_size=264, chunk_type=b'IDAT', chunk_crc=b'\x13\x7f\xab\n')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f01n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 1123 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=1123, chunk_type=b'IDAT', chunk_crc=b'\x82{\x97\xe7')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f02n0g08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 298 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'V\x11%(', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_IDAT(is_parsed=True, chunk_size=298, chunk_type=b'IDAT', chunk_crc=b'\xbf\xcc\xeb\xfd')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f02n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 1672 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=1672, chunk_type=b'IDAT', chunk_crc=b'We==')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f03n0g08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 332 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'V\x11%(', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_IDAT(is_parsed=True, chunk_size=332, chunk_type=b'IDAT', chunk_crc=b'\xbc\xfe\x0b9')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f03n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 1234 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=1234, chunk_type=b'IDAT', chunk_crc=b'\x97\xce\x96\xfe')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f04n0g08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 212 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'V\x11%(', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_IDAT(is_parsed=True, chunk_size=212, chunk_type=b'IDAT', chunk_crc=b'!\x99`\x81')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f04n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 928 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=928, chunk_type=b'IDAT', chunk_crc=b'\x8e\xf2\xa3\xfc')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\f99n0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 369 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_IDAT(is_parsed=True, chunk_size=369, chunk_type=b'IDAT', chunk_crc=b'\x84\xe7t\xa4')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g03n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 272 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\xbd\xc5I\xb0', gamma=35000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=272, chunk_type=b'IDAT', chunk_crc=b'+D\xdd\xb7')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g03n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 297 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\xbd\xc5I\xb0', gamma=35000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=297, chunk_type=b'IDAT', chunk_crc=b'\x07[\xdfj')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g03n3p04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 30 bytes
parsing b'IDAT'; 99 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x81Tg\xc7', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\xbd\xc5I\xb0', gamma=35000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=30, chunk_type=b'PLTE', chunk_crc=b'1\xba \x88', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=0, g=255, b=255), C_RGB(r=255, g=0, b=255), C_RGB(r=0, g=200, b=200), C_RGB(r=173, g=173, b=0), C_RGB(r=221, g=221, b=0), C_RGB(r=255, g=255, b=255), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=221, b=255), C_RGB(r=255, g=173, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=99, chunk_type=b'IDAT', chunk_crc=b'\xe6\x1d\xb5\xab')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g04n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 290 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'7\x05\x8a\xe9', gamma=45000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=290, chunk_type=b'IDAT', chunk_crc=b'\xa5\x0ec\x80')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g04n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 304 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'7\x05\x8a\xe9', gamma=45000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=304, chunk_type=b'IDAT', chunk_crc=b'H\x83\xa2\xd7')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g04n3p04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 30 bytes
parsing b'IDAT'; 104 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x81Tg\xc7', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'7\x05\x8a\xe9', gamma=45000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=30, chunk_type=b'PLTE', chunk_crc=b'"\xe8,\x82', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=0, g=255, b=255), C_RGB(r=255, g=212, b=255), C_RGB(r=212, g=212, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=0, g=186, b=186), C_RGB(r=255, g=255, b=255), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=155, b=255), C_RGB(r=155, g=155, b=0)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=104, chunk_type=b'IDAT', chunk_crc=b'u\xa7\x11\x95')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g05n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 266 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\xd4OX2', gamma=55000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=266, chunk_type=b'IDAT', chunk_crc=b'\x02A\xb3\xe0')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g05n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 277 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\xd4OX2', gamma=55000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=277, chunk_type=b'IDAT', chunk_crc=b'\x9c\x15,W')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g05n3p04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 30 bytes
parsing b'IDAT'; 91 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x81Tg\xc7', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\xd4OX2', gamma=55000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=30, chunk_type=b'PLTE', chunk_crc=b's\xe2$\x92', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=0, g=255, b=255), C_RGB(r=204, g=204, b=0), C_RGB(r=255, g=204, b=255), C_RGB(r=0, g=174, b=174), C_RGB(r=255, g=0, b=255), C_RGB(r=139, g=139, b=0), C_RGB(r=255, g=255, b=255), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=139, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=91, chunk_type=b'IDAT', chunk_crc=b'J\xed\xa0U')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g07n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 248 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\x89;XV', gamma=70000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=248, chunk_type=b'IDAT', chunk_crc=b'\xd0,s,')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g07n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 267 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\x89;XV', gamma=70000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=267, chunk_type=b'IDAT', chunk_crc=b'?\xe1\xa1\n')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g07n3p04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 30 bytes
parsing b'IDAT'; 92 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x81Tg\xc7', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\x89;XV', gamma=70000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=30, chunk_type=b'PLTE', chunk_crc=b'N\x97Tl', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=156, b=156), C_RGB(r=191, g=191, b=0), C_RGB(r=255, g=118, b=255), C_RGB(r=118, g=118, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=255, b=255), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=191, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=92, chunk_type=b'IDAT', chunk_crc=b'\xe9r=\xcf')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g10n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 189 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=189, chunk_type=b'IDAT', chunk_crc=b'\xe5\xfc\x96\x88')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g10n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 212 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=212, chunk_type=b'IDAT', chunk_crc=b'\xde\xdf\x8f\x9e')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g10n3p04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 30 bytes
parsing b'IDAT'; 99 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x81Tg\xc7', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=30, chunk_type=b'PLTE', chunk_crc=b'\xee\x0e\xdbZ', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=169, g=169, b=0), C_RGB(r=0, g=255, b=255), C_RGB(r=255, g=170, b=255), C_RGB(r=84, g=84, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=0, g=127, b=127), C_RGB(r=255, g=255, b=255), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=85, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=99, chunk_type=b'IDAT', chunk_crc=b'\x99:\x11\x0e')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g25n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 310 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\xf8T\x88O', gamma=250000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=310, chunk_type=b'IDAT', chunk_crc=b' 8\x14\xa4')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g25n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 332 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\xf8T\x88O', gamma=250000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=332, chunk_type=b'IDAT', chunk_crc=b'2\xb9w\x8d')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\g25n3p04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 30 bytes
parsing b'IDAT'; 100 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x81Tg\xc7', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'\xf8T\x88O', gamma=250000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=30, chunk_type=b'PLTE', chunk_crc=b'RQ\xd7\xe5', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=0, g=45, b=45), C_RGB(r=0, g=255, b=255), C_RGB(r=16, g=16, b=0), C_RGB(r=255, g=92, b=255), C_RGB(r=255, g=16, b=255), C_RGB(r=255, g=0, b=255), C_RGB(r=92, g=92, b=0), C_RGB(r=255, g=255, b=255), C_RGB(r=255, g=255, b=0)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=100, chunk_type=b'IDAT', chunk_crc=b';\xb4P\xd8')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\oi1n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 94 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=94, chunk_type=b'IDAT', chunk_crc=b'\xae+\x9f\xd7')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\oi1n2c16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 229 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=229, chunk_type=b'IDAT', chunk_crc=b'\x07\xbb\xc4\xec')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\oi2n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 64 bytes
parsing b'IDAT'; 30 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=64, chunk_type=b'IDAT', chunk_crc=b':\xb0\xc03')
  [003] - CT_IDAT(is_parsed=True, chunk_size=30, chunk_type=b'IDAT', chunk_crc=b'\xb2z_}')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\oi2n2c16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 128 bytes
parsing b'IDAT'; 101 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=128, chunk_type=b'IDAT', chunk_crc=b'\x99\x88\xa0s')
  [003] - CT_IDAT(is_parsed=True, chunk_size=101, chunk_type=b'IDAT', chunk_crc=b'Mw\x9eb')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\oi4n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 31 bytes
parsing b'IDAT'; 31 bytes
parsing b'IDAT'; 2 bytes
parsing b'IDAT'; 30 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=31, chunk_type=b'IDAT', chunk_crc=b'\x87m\x93\xdf')
  [003] - CT_IDAT(is_parsed=True, chunk_size=31, chunk_type=b'IDAT', chunk_crc=b'\xce\xa3\xcb\xec')
  [004] - CT_IDAT(is_parsed=True, chunk_size=2, chunk_type=b'IDAT', chunk_crc=b'\xc5mf ')
  [005] - CT_IDAT(is_parsed=True, chunk_size=30, chunk_type=b'IDAT', chunk_crc=b'\xb2z_}')
  [006] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\oi4n2c16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 99 bytes
parsing b'IDAT'; 29 bytes
parsing b'IDAT'; 99 bytes
parsing b'IDAT'; 2 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=99, chunk_type=b'IDAT', chunk_crc=b'nTZX')
  [003] - CT_IDAT(is_parsed=True, chunk_size=29, chunk_type=b'IDAT', chunk_crc=b'e\xe8\xc5\xe6')
  [004] - CT_IDAT(is_parsed=True, chunk_size=99, chunk_type=b'IDAT', chunk_crc=b' \xe2\xe2)')
  [005] - CT_IDAT(is_parsed=True, chunk_size=2, chunk_type=b'IDAT', chunk_crc=b'z\x17\rz')
  [006] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\oi9n0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'v\xe6\x84\xe6')
  [003] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd1\x81\xa2\x87')
  [004] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xde\x81[\xb3')
  [005] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'@\xe5\xce\x10')
  [006] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'y\xe6}\xd2')
  [007] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc8\xed\x94\xf6')
  [008] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb3\\\xbfX')
  [009] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x0e\xe1MD')
  [010] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'!\x8e1\xc3')
  [011] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc7\xedm\xc2')
  [012] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'4T\x1c\x8a')
  [013] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'w=\xf5\xe0')
  [014] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd4\x81\xf5\x94')
  [015] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x18\x8d\x82\x01')
  [016] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe8\x82\x11E')
  [017] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'Z?\x1am')
  [018] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa7]\xe3\x17')
  [019] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfe\xee\xde\x00')
  [020] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'A>\xbf\x16')
  [021] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb3\\\xbfX')
  [022] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x1d\x8d\xd5\x12')
  [023] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xef\xef\xd5\\')
  [024] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe0\xef,h')
  [025] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xde\x81[\xb3')
  [026] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xf3\x83\xb4>')
  [027] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'/U\xb9\xf1')
  [028] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'g\xe7\x8f\xba')
  [029] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd77\x17\x98')
  [030] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'U?\xe3Y')
  [031] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x9e^P\xd5')
  [032] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x00:\xc5v')
  [033] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc5\x80\xfe\xc8')
  [034] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'`\x8aK\xa3')
  [035] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xed\x82FV')
  [036] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xdd7\xb9\xbf')
  [037] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xac\x86<6')
  [038] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xac\x86<6')
  [039] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfc\x83M\n')
  [040] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfe\xee\xde\x00')
  [041] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xee4\xa4Z')
  [042] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'+\x8e\x9f\xe4')
  [043] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'e\x8a\x1c\xb0')
  [044] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'K>\x111')
  [045] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'&\xe3\xf5\xda')
  [046] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa1\xebV\x08')
  [047] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'(8}\xe8')
  [048] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd0Z\xd3\x81')
  [049] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'+\x8e\x9f\xe4')
  [050] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'|\xe6*\xc1')
  [051] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'^\xe4<x')
  [052] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'S\x89VF')
  [053] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'/U\xb9\xf1')
  [054] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x86\xe9\x17\xa2')
  [055] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xdc\xec\xc8\xb9')
  [056] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa7]\xe3\x17')
  [057] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc1[\xd8\xdd')
  [058] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb0\xea]T')
  [059] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfa5\xf8\x15')
  [060] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'^\xe4<x')
  [061] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'}=[\xc7')
  [062] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfe\xee\xde\x00')
  [063] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'pP1\xf9')
  [064] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd87\xee\xac')
  [065] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe0\xef,h')
  [066] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'_?M~')
  [067] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b"\x03\x8c'z")
  [068] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'XR\x89g')
  [069] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'}=[\xc7')
  [070] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb2\x87\xce^')
  [071] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd87\xee\xac')
  [072] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'Q\xe4\xc5L')
  [073] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xae\xeb\xaf<')
  [074] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'm\xe7!\x9d')
  [075] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'kQ\x94\x82')
  [076] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb8\x87`y')
  [077] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xf9\x83\x1a\x19')
  [078] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'WRpS')
  [079] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'e\x8a\x1c\xb0')
  [080] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x9e^P\xd5')
  [081] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xf55\x01!')
  [082] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb6\\\xe8K')
  [083] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x81\x84\xd3\xbb')
  [084] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xce[!\xe9')
  [085] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x92\xe8K\xed')
  [086] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'LS\xd5(')
  [087] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x00:\xc5v')
  [088] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'#\xe3\xa2\xc9')
  [089] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe8\x82\x11E')
  [090] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'(8}\xe8')
  [091] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xdc\xec\xc8\xb9')
  [092] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b"\xa00'\x0e")
  [093] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc96\xe5\xf0')
  [094] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b"\xa00'\x0e")
  [095] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd3\xec1\x8d')
  [096] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\oi9n2c16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IDAT'; 1 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'v\xe6\x84\xe6')
  [003] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd1\x81\xa2\x87')
  [004] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xde\x81[\xb3')
  [005] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'1TK\x99')
  [006] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc4[\x8f\xce')
  [007] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc8\xed\x94\xf6')
  [008] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\\\x89\xafr')
  [009] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x0e\xe1MD')
  [010] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'5\x8fm\x8c')
  [011] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'Y\x89\xf8a')
  [012] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'`\x8aK\xa3')
  [013] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x882\x9f\x90')
  [014] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b')\xe3\x0c\xee')
  [015] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe8\x82\x11E')
  [016] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'$\x8ef\xd0')
  [017] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x9f\x85!\xd3')
  [018] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'}=[\xc7')
  [019] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xeb4\xf3I')
  [020] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x80_\xa2\xbd')
  [021] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'|\xe6*\xc1')
  [022] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'1TK\x99')
  [023] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd27@\x8b')
  [024] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc1[\xd8\xdd')
  [025] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb11,R')
  [026] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'69\x8f\x80')
  [027] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b',\xe3[\xfd')
  [028] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfa5\xf8\x15')
  [029] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x8c\xe9\xb9\x85')
  [030] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'A>\xbf\x16')
  [031] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xba\xea\xf3s')
  [032] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x98\xe8\xe5\xca')
  [033] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b';T\xe5\xbe')
  [034] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b',\xe3[\xfd')
  [035] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'.\x8e\xc8\xf7')
  [036] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x8f_[\x89')
  [037] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'pP1\xf9')
  [038] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'G\x88\n\t')
  [039] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfe\xee\xde\x00')
  [040] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'U?\xe3Y')
  [041] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'5\x8fm\x8c')
  [042] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb0\xea]T')
  [043] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'(8}\xe8')
  [044] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe9Y`C')
  [045] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x83\xe9@\xb1')
  [046] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x882\x9f\x90')
  [047] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'8\xe2\x07\xb2')
  [048] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x18\x8d\x82\x01')
  [049] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'b\xe7\xd8\xa9')
  [050] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x963m\xf8')
  [051] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe14]n')
  [052] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x9f\x85!\xd3')
  [053] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b';T\xe5\xbe')
  [054] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'pP1\xf9')
  [055] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x8d2\xc8\x83')
  [056] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x97\xe8\x1c\xfe')
  [057] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd3\xec1\x8d')
  [058] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'T\xe4\x92_')
  [059] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'f<\xfe\xbc')
  [060] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x0c\x8c\xdeN')
  [061] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa3\x86\xc5\x02')
  [062] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe6Y\x99w')
  [063] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'}=[\xc7')
  [064] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc66\x1c\xc4')
  [065] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x1f\xe0F\x18')
  [066] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'T\xe4\x92_')
  [067] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x7fP\xc8\xcd')
  [068] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x1d\x8d\xd5\x12')
  [069] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'x=\x0c\xd4')
  [070] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x10\xe0\xbf,')
  [071] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x97\xe8\x1c\xfe')
  [072] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'FS{\x0f')
  [073] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x0c\x8c\xdeN')
  [074] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xf6\x83\xe3-')
  [075] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'{\x8b\xee\xd8')
  [076] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'x=\x0c\xd4')
  [077] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'=\xe2P\xa1')
  [078] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd9\xec\x9f\xaa')
  [079] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'_?M~')
  [080] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'e\x8a\x1c\xb0')
  [081] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x0c\x8c\xdeN')
  [082] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\rW\xafH')
  [083] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb2\x87\xce^')
  [084] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd3\xec1\x8d')
  [085] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x86\xe9\x17\xa2')
  [086] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x81\x84\xd3\xbb')
  [087] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'{\x8b\xee\xd8')
  [088] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc66\x1c\xc4')
  [089] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x01\xe1\xb4p')
  [090] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x7fP\xc8\xcd')
  [091] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x17\x8d{5')
  [092] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe3Y\xced')
  [093] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb3\\\xbfX')
  [094] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x9e^P\xd5')
  [095] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x7fP\xc8\xcd')
  [096] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x17\x8d{5')
  [097] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x8f_[\x89')
  [098] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'LS\xd5(')
  [099] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x1d\x8d\xd5\x12')
  [100] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc7\xedm\xc2')
  [101] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x16V\n3')
  [102] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'J\xe5`7')
  [103] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'l<P\x9b')
  [104] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb11,R')
  [105] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'~\x8b\xb9\xcb')
  [106] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x86\xe9\x17\xa2')
  [107] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x81\x84\xd3\xbb')
  [108] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe0\xef,h')
  [109] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc66\x1c\xc4')
  [110] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe5\xef{{')
  [111] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x86\xe9\x17\xa2')
  [112] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'WRpS')
  [113] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'_?M~')
  [114] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb2\x87\xce^')
  [115] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b't\x8b\x17\xec')
  [116] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x86\xe9\x17\xa2')
  [117] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xba\xea\xf3s')
  [118] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x872f\xa4')
  [119] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfb\xee\x89\x13')
  [120] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfe\xee\xde\x00')
  [121] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'V\x89\x01U')
  [122] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa6\x86\x92\x11')
  [123] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x0c\x8c\xdeN')
  [124] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b"'8\x84\xdc")
  [125] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa2]\xb4\x04')
  [126] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe3Y\xced')
  [127] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'^\xe4<x')
  [128] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfb\xee\x89\x13')
  [129] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa50p\x1d')
  [130] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b"\xf4\xeep'")
  [131] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'e\x8a\x1c\xb0')
  [132] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'[\xe4kk')
  [133] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'T\xe4\x92_')
  [134] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'<9!\xa7')
  [135] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x1d\x8d\xd5\x12')
  [136] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'e\x8a\x1c\xb0')
  [137] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xbb1\x82u')
  [138] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd27@\x8b')
  [139] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'XR\x89g')
  [140] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x9b^\x07\xc6')
  [141] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'-8*\xfb')
  [142] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'o\x8a\xb2\x97')
  [143] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb8\x87`y')
  [144] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'K>\x111')
  [145] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'(8}\xe8')
  [146] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\n:kQ')
  [147] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfb\xee\x89\x13')
  [148] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x16V\n3')
  [149] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'V\x89\x01U')
  [150] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x92\xe8K\xed')
  [151] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'Y\x89\xf8a')
  [152] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfb\xee\x89\x13')
  [153] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x18\x8d\x82\x01')
  [154] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xfa5\xf8\x15')
  [155] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xae\xeb\xaf<')
  [156] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa50p\x1d')
  [157] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x9d\xe8\xb2\xd9')
  [158] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'O\xe57$')
  [159] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb3\\\xbfX')
  [160] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x1d\x8d\xd5\x12')
  [161] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x92\xe8K\xed')
  [162] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x1d\x8d\xd5\x12')
  [163] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'e\x8a\x1c\xb0')
  [164] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x0b\xe1\x1aW')
  [165] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'K>\x111')
  [166] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b';T\xe5\xbe')
  [167] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b"RR'@")
  [168] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'T\xe4\x92_')
  [169] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x02WV|')
  [170] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xbb1\x82u')
  [171] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe7\x82\xe8q')
  [172] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x0e\xe1MD')
  [173] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb11,R')
  [174] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa6\x86\x92\x11')
  [175] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x9d\xe8\xb2\xd9')
  [176] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b':\x8f\x94\xb8')
  [177] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'e\x8a\x1c\xb0')
  [178] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd27@\x8b')
  [179] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x98\xe8\xe5\xca')
  [180] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'zP\x9f\xde')
  [181] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb3\\\xbfX')
  [182] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'l<P\x9b')
  [183] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x92\xe8K\xed')
  [184] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x1d\x8d\xd5\x12')
  [185] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'CS,\x1c')
  [186] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xe8\x82\x11E')
  [187] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc1[\xd8\xdd')
  [188] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\t\x8c\x89]')
  [189] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xae\xeb\xaf<')
  [190] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'w=\xf5\xe0')
  [191] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'nQ\xc3\x91')
  [192] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa7]\xe3\x17')
  [193] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc5\x80\xfe\xc8')
  [194] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xdb\x81\x0c\xa0')
  [195] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xee4\xa4Z')
  [196] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xef\xef\xd5\\')
  [197] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x94^\xfe\xf2')
  [198] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc5\x80\xfe\xc8')
  [199] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xd27@\x8b')
  [200] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x98\xe8\xe5\xca')
  [201] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x94^\xfe\xf2')
  [202] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc5\x80\xfe\xc8')
  [203] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xf3\x83\xb4>')
  [204] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x98\xe8\xe5\xca')
  [205] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'2\xe2\xa9\x95')
  [206] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xbd\x877j')
  [207] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'H\x88\xf3=')
  [208] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'_?M~')
  [209] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x1b;`\r')
  [210] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x7fP\xc8\xcd')
  [211] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'T\xe4\x92_')
  [212] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x97\xe8\x1c\xfe')
  [213] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa2]\xb4\x04')
  [214] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x95\x85\x8f\xf4')
  [215] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xc5\x80\xfe\xc8')
  [216] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'T\xe4\x92_')
  [217] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'?\x8f\xc3\xab')
  [218] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'&\xe3\xf5\xda')
  [219] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x9b^\x07\xc6')
  [220] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b')\xe3\x0c\xee')
  [221] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xce[!\xe9')
  [222] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'/U\xb9\xf1')
  [223] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xea\xef\x82O')
  [224] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x89\xe9\xee\x96')
  [225] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\x97\xe8\x1c\xfe')
  [226] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b's\xe6\xd3\xf5')
  [227] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'aQ:\xa5')
  [228] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xb0\xea]T')
  [229] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'r=\xa2\xf3')
  [230] - CT_IDAT(is_parsed=True, chunk_size=1, chunk_type=b'IDAT', chunk_crc=b'\xa4\xeb\x01\x1b')
  [231] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\PngSuite.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 2205 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xd3\x10?1', width=256, height=256, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=2205, chunk_type=b'IDAT', chunk_crc=b'\x9bG\x132')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\pp0n2c16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 648 bytes
parsing b'IDAT'; 229 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=648, chunk_type=b'PLTE', chunk_crc=b'c\xb0\xbbQ', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=0, g=0, b=51), C_RGB(r=0, g=0, b=102), C_RGB(r=0, g=0, b=153), C_RGB(r=0, g=0, b=204), C_RGB(r=0, g=0, b=255), C_RGB(r=0, g=51, b=0), C_RGB(r=0, g=51, b=51), C_RGB(r=0, g=51, b=102), C_RGB(r=0, g=51, b=153), C_RGB(r=0, g=51, b=204), C_RGB(r=0, g=51, b=255), C_RGB(r=0, g=102, b=0), C_RGB(r=0, g=102, b=51), C_RGB(r=0, g=102, b=102), C_RGB(r=0, g=102, b=153), C_RGB(r=0, g=102, b=204), C_RGB(r=0, g=102, b=255), C_RGB(r=0, g=153, b=0), C_RGB(r=0, g=153, b=51), C_RGB(r=0, g=153, b=102), C_RGB(r=0, g=153, b=153), C_RGB(r=0, g=153, b=204), C_RGB(r=0, g=153, b=255), C_RGB(r=0, g=204, b=0), C_RGB(r=0, g=204, b=51), C_RGB(r=0, g=204, b=102), C_RGB(r=0, g=204, b=153), C_RGB(r=0, g=204, b=204), C_RGB(r=0, g=204, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=0, g=255, b=51), C_RGB(r=0, g=255, b=102), C_RGB(r=0, g=255, b=153), C_RGB(r=0, g=255, b=204), C_RGB(r=0, g=255, b=255), C_RGB(r=51, g=0, b=0), C_RGB(r=51, g=0, b=51), C_RGB(r=51, g=0, b=102), C_RGB(r=51, g=0, b=153), C_RGB(r=51, g=0, b=204), C_RGB(r=51, g=0, b=255), C_RGB(r=51, g=51, b=0), C_RGB(r=51, g=51, b=51), C_RGB(r=51, g=51, b=102), C_RGB(r=51, g=51, b=153), C_RGB(r=51, g=51, b=204), C_RGB(r=51, g=51, b=255), C_RGB(r=51, g=102, b=0), C_RGB(r=51, g=102, b=51), C_RGB(r=51, g=102, b=102), C_RGB(r=51, g=102, b=153), C_RGB(r=51, g=102, b=204), C_RGB(r=51, g=102, b=255), C_RGB(r=51, g=153, b=0), C_RGB(r=51, g=153, b=51), C_RGB(r=51, g=153, b=102), C_RGB(r=51, g=153, b=153), C_RGB(r=51, g=153, b=204), C_RGB(r=51, g=153, b=255), C_RGB(r=51, g=204, b=0), C_RGB(r=51, g=204, b=51), C_RGB(r=51, g=204, b=102), C_RGB(r=51, g=204, b=153), C_RGB(r=51, g=204, b=204), C_RGB(r=51, g=204, b=255), C_RGB(r=51, g=255, b=0), C_RGB(r=51, g=255, b=51), C_RGB(r=51, g=255, b=102), C_RGB(r=51, g=255, b=153), C_RGB(r=51, g=255, b=204), C_RGB(r=51, g=255, b=255), C_RGB(r=102, g=0, b=0), C_RGB(r=102, g=0, b=51), C_RGB(r=102, g=0, b=102), C_RGB(r=102, g=0, b=153), C_RGB(r=102, g=0, b=204), C_RGB(r=102, g=0, b=255), C_RGB(r=102, g=51, b=0), C_RGB(r=102, g=51, b=51), C_RGB(r=102, g=51, b=102), C_RGB(r=102, g=51, b=153), C_RGB(r=102, g=51, b=204), C_RGB(r=102, g=51, b=255), C_RGB(r=102, g=102, b=0), C_RGB(r=102, g=102, b=51), C_RGB(r=102, g=102, b=102), C_RGB(r=102, g=102, b=153), C_RGB(r=102, g=102, b=204), C_RGB(r=102, g=102, b=255), C_RGB(r=102, g=153, b=0), C_RGB(r=102, g=153, b=51), C_RGB(r=102, g=153, b=102), C_RGB(r=102, g=153, b=153), C_RGB(r=102, g=153, b=204), C_RGB(r=102, g=153, b=255), C_RGB(r=102, g=204, b=0), C_RGB(r=102, g=204, b=51), C_RGB(r=102, g=204, b=102), C_RGB(r=102, g=204, b=153), C_RGB(r=102, g=204, b=204), C_RGB(r=102, g=204, b=255), C_RGB(r=102, g=255, b=0), C_RGB(r=102, g=255, b=51), C_RGB(r=102, g=255, b=102), C_RGB(r=102, g=255, b=153), C_RGB(r=102, g=255, b=204), C_RGB(r=102, g=255, b=255), C_RGB(r=153, g=0, b=0), C_RGB(r=153, g=0, b=51), C_RGB(r=153, g=0, b=102), C_RGB(r=153, g=0, b=153), C_RGB(r=153, g=0, b=204), C_RGB(r=153, g=0, b=255), C_RGB(r=153, g=51, b=0), C_RGB(r=153, g=51, b=51), C_RGB(r=153, g=51, b=102), C_RGB(r=153, g=51, b=153), C_RGB(r=153, g=51, b=204), C_RGB(r=153, g=51, b=255), C_RGB(r=153, g=102, b=0), C_RGB(r=153, g=102, b=51), C_RGB(r=153, g=102, b=102), C_RGB(r=153, g=102, b=153), C_RGB(r=153, g=102, b=204), C_RGB(r=153, g=102, b=255), C_RGB(r=153, g=153, b=0), C_RGB(r=153, g=153, b=51), C_RGB(r=153, g=153, b=102), C_RGB(r=153, g=153, b=153), C_RGB(r=153, g=153, b=204), C_RGB(r=153, g=153, b=255), C_RGB(r=153, g=204, b=0), C_RGB(r=153, g=204, b=51), C_RGB(r=153, g=204, b=102), C_RGB(r=153, g=204, b=153), C_RGB(r=153, g=204, b=204), C_RGB(r=153, g=204, b=255), C_RGB(r=153, g=255, b=0), C_RGB(r=153, g=255, b=51), C_RGB(r=153, g=255, b=102), C_RGB(r=153, g=255, b=153), C_RGB(r=153, g=255, b=204), C_RGB(r=153, g=255, b=255), C_RGB(r=204, g=0, b=0), C_RGB(r=204, g=0, b=51), C_RGB(r=204, g=0, b=102), C_RGB(r=204, g=0, b=153), C_RGB(r=204, g=0, b=204), C_RGB(r=204, g=0, b=255), C_RGB(r=204, g=51, b=0), C_RGB(r=204, g=51, b=51), C_RGB(r=204, g=51, b=102), C_RGB(r=204, g=51, b=153), C_RGB(r=204, g=51, b=204), C_RGB(r=204, g=51, b=255), C_RGB(r=204, g=102, b=0), C_RGB(r=204, g=102, b=51), C_RGB(r=204, g=102, b=102), C_RGB(r=204, g=102, b=153), C_RGB(r=204, g=102, b=204), C_RGB(r=204, g=102, b=255), C_RGB(r=204, g=153, b=0), C_RGB(r=204, g=153, b=51), C_RGB(r=204, g=153, b=102), C_RGB(r=204, g=153, b=153), C_RGB(r=204, g=153, b=204), C_RGB(r=204, g=153, b=255), C_RGB(r=204, g=204, b=0), C_RGB(r=204, g=204, b=51), C_RGB(r=204, g=204, b=102), C_RGB(r=204, g=204, b=153), C_RGB(r=204, g=204, b=204), C_RGB(r=204, g=204, b=255), C_RGB(r=204, g=255, b=0), C_RGB(r=204, g=255, b=51), C_RGB(r=204, g=255, b=102), C_RGB(r=204, g=255, b=153), C_RGB(r=204, g=255, b=204), C_RGB(r=204, g=255, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=255, g=0, b=51), C_RGB(r=255, g=0, b=102), C_RGB(r=255, g=0, b=153), C_RGB(r=255, g=0, b=204), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=51, b=0), C_RGB(r=255, g=51, b=51), C_RGB(r=255, g=51, b=102), C_RGB(r=255, g=51, b=153), C_RGB(r=255, g=51, b=204), C_RGB(r=255, g=51, b=255), C_RGB(r=255, g=102, b=0), C_RGB(r=255, g=102, b=51), C_RGB(r=255, g=102, b=102), C_RGB(r=255, g=102, b=153), C_RGB(r=255, g=102, b=204), C_RGB(r=255, g=102, b=255), C_RGB(r=255, g=153, b=0), C_RGB(r=255, g=153, b=51), C_RGB(r=255, g=153, b=102), C_RGB(r=255, g=153, b=153), C_RGB(r=255, g=153, b=204), C_RGB(r=255, g=153, b=255), C_RGB(r=255, g=204, b=0), C_RGB(r=255, g=204, b=51), C_RGB(r=255, g=204, b=102), C_RGB(r=255, g=204, b=153), C_RGB(r=255, g=204, b=204), C_RGB(r=255, g=204, b=255), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=255, b=51), C_RGB(r=255, g=255, b=102), C_RGB(r=255, g=255, b=153), C_RGB(r=255, g=255, b=204), C_RGB(r=255, g=255, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=229, chunk_type=b'IDAT', chunk_crc=b'\x07\xbb\xc4\xec')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\pp0n6a08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 648 bytes
parsing b'IDAT'; 85 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'szz\xf4', width=32, height=32, bit_depth=8, color_type=6, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used;alpha-channel-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=648, chunk_type=b'PLTE', chunk_crc=b'c\xb0\xbbQ', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=0, g=0, b=51), C_RGB(r=0, g=0, b=102), C_RGB(r=0, g=0, b=153), C_RGB(r=0, g=0, b=204), C_RGB(r=0, g=0, b=255), C_RGB(r=0, g=51, b=0), C_RGB(r=0, g=51, b=51), C_RGB(r=0, g=51, b=102), C_RGB(r=0, g=51, b=153), C_RGB(r=0, g=51, b=204), C_RGB(r=0, g=51, b=255), C_RGB(r=0, g=102, b=0), C_RGB(r=0, g=102, b=51), C_RGB(r=0, g=102, b=102), C_RGB(r=0, g=102, b=153), C_RGB(r=0, g=102, b=204), C_RGB(r=0, g=102, b=255), C_RGB(r=0, g=153, b=0), C_RGB(r=0, g=153, b=51), C_RGB(r=0, g=153, b=102), C_RGB(r=0, g=153, b=153), C_RGB(r=0, g=153, b=204), C_RGB(r=0, g=153, b=255), C_RGB(r=0, g=204, b=0), C_RGB(r=0, g=204, b=51), C_RGB(r=0, g=204, b=102), C_RGB(r=0, g=204, b=153), C_RGB(r=0, g=204, b=204), C_RGB(r=0, g=204, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=0, g=255, b=51), C_RGB(r=0, g=255, b=102), C_RGB(r=0, g=255, b=153), C_RGB(r=0, g=255, b=204), C_RGB(r=0, g=255, b=255), C_RGB(r=51, g=0, b=0), C_RGB(r=51, g=0, b=51), C_RGB(r=51, g=0, b=102), C_RGB(r=51, g=0, b=153), C_RGB(r=51, g=0, b=204), C_RGB(r=51, g=0, b=255), C_RGB(r=51, g=51, b=0), C_RGB(r=51, g=51, b=51), C_RGB(r=51, g=51, b=102), C_RGB(r=51, g=51, b=153), C_RGB(r=51, g=51, b=204), C_RGB(r=51, g=51, b=255), C_RGB(r=51, g=102, b=0), C_RGB(r=51, g=102, b=51), C_RGB(r=51, g=102, b=102), C_RGB(r=51, g=102, b=153), C_RGB(r=51, g=102, b=204), C_RGB(r=51, g=102, b=255), C_RGB(r=51, g=153, b=0), C_RGB(r=51, g=153, b=51), C_RGB(r=51, g=153, b=102), C_RGB(r=51, g=153, b=153), C_RGB(r=51, g=153, b=204), C_RGB(r=51, g=153, b=255), C_RGB(r=51, g=204, b=0), C_RGB(r=51, g=204, b=51), C_RGB(r=51, g=204, b=102), C_RGB(r=51, g=204, b=153), C_RGB(r=51, g=204, b=204), C_RGB(r=51, g=204, b=255), C_RGB(r=51, g=255, b=0), C_RGB(r=51, g=255, b=51), C_RGB(r=51, g=255, b=102), C_RGB(r=51, g=255, b=153), C_RGB(r=51, g=255, b=204), C_RGB(r=51, g=255, b=255), C_RGB(r=102, g=0, b=0), C_RGB(r=102, g=0, b=51), C_RGB(r=102, g=0, b=102), C_RGB(r=102, g=0, b=153), C_RGB(r=102, g=0, b=204), C_RGB(r=102, g=0, b=255), C_RGB(r=102, g=51, b=0), C_RGB(r=102, g=51, b=51), C_RGB(r=102, g=51, b=102), C_RGB(r=102, g=51, b=153), C_RGB(r=102, g=51, b=204), C_RGB(r=102, g=51, b=255), C_RGB(r=102, g=102, b=0), C_RGB(r=102, g=102, b=51), C_RGB(r=102, g=102, b=102), C_RGB(r=102, g=102, b=153), C_RGB(r=102, g=102, b=204), C_RGB(r=102, g=102, b=255), C_RGB(r=102, g=153, b=0), C_RGB(r=102, g=153, b=51), C_RGB(r=102, g=153, b=102), C_RGB(r=102, g=153, b=153), C_RGB(r=102, g=153, b=204), C_RGB(r=102, g=153, b=255), C_RGB(r=102, g=204, b=0), C_RGB(r=102, g=204, b=51), C_RGB(r=102, g=204, b=102), C_RGB(r=102, g=204, b=153), C_RGB(r=102, g=204, b=204), C_RGB(r=102, g=204, b=255), C_RGB(r=102, g=255, b=0), C_RGB(r=102, g=255, b=51), C_RGB(r=102, g=255, b=102), C_RGB(r=102, g=255, b=153), C_RGB(r=102, g=255, b=204), C_RGB(r=102, g=255, b=255), C_RGB(r=153, g=0, b=0), C_RGB(r=153, g=0, b=51), C_RGB(r=153, g=0, b=102), C_RGB(r=153, g=0, b=153), C_RGB(r=153, g=0, b=204), C_RGB(r=153, g=0, b=255), C_RGB(r=153, g=51, b=0), C_RGB(r=153, g=51, b=51), C_RGB(r=153, g=51, b=102), C_RGB(r=153, g=51, b=153), C_RGB(r=153, g=51, b=204), C_RGB(r=153, g=51, b=255), C_RGB(r=153, g=102, b=0), C_RGB(r=153, g=102, b=51), C_RGB(r=153, g=102, b=102), C_RGB(r=153, g=102, b=153), C_RGB(r=153, g=102, b=204), C_RGB(r=153, g=102, b=255), C_RGB(r=153, g=153, b=0), C_RGB(r=153, g=153, b=51), C_RGB(r=153, g=153, b=102), C_RGB(r=153, g=153, b=153), C_RGB(r=153, g=153, b=204), C_RGB(r=153, g=153, b=255), C_RGB(r=153, g=204, b=0), C_RGB(r=153, g=204, b=51), C_RGB(r=153, g=204, b=102), C_RGB(r=153, g=204, b=153), C_RGB(r=153, g=204, b=204), C_RGB(r=153, g=204, b=255), C_RGB(r=153, g=255, b=0), C_RGB(r=153, g=255, b=51), C_RGB(r=153, g=255, b=102), C_RGB(r=153, g=255, b=153), C_RGB(r=153, g=255, b=204), C_RGB(r=153, g=255, b=255), C_RGB(r=204, g=0, b=0), C_RGB(r=204, g=0, b=51), C_RGB(r=204, g=0, b=102), C_RGB(r=204, g=0, b=153), C_RGB(r=204, g=0, b=204), C_RGB(r=204, g=0, b=255), C_RGB(r=204, g=51, b=0), C_RGB(r=204, g=51, b=51), C_RGB(r=204, g=51, b=102), C_RGB(r=204, g=51, b=153), C_RGB(r=204, g=51, b=204), C_RGB(r=204, g=51, b=255), C_RGB(r=204, g=102, b=0), C_RGB(r=204, g=102, b=51), C_RGB(r=204, g=102, b=102), C_RGB(r=204, g=102, b=153), C_RGB(r=204, g=102, b=204), C_RGB(r=204, g=102, b=255), C_RGB(r=204, g=153, b=0), C_RGB(r=204, g=153, b=51), C_RGB(r=204, g=153, b=102), C_RGB(r=204, g=153, b=153), C_RGB(r=204, g=153, b=204), C_RGB(r=204, g=153, b=255), C_RGB(r=204, g=204, b=0), C_RGB(r=204, g=204, b=51), C_RGB(r=204, g=204, b=102), C_RGB(r=204, g=204, b=153), C_RGB(r=204, g=204, b=204), C_RGB(r=204, g=204, b=255), C_RGB(r=204, g=255, b=0), C_RGB(r=204, g=255, b=51), C_RGB(r=204, g=255, b=102), C_RGB(r=204, g=255, b=153), C_RGB(r=204, g=255, b=204), C_RGB(r=204, g=255, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=255, g=0, b=51), C_RGB(r=255, g=0, b=102), C_RGB(r=255, g=0, b=153), C_RGB(r=255, g=0, b=204), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=51, b=0), C_RGB(r=255, g=51, b=51), C_RGB(r=255, g=51, b=102), C_RGB(r=255, g=51, b=153), C_RGB(r=255, g=51, b=204), C_RGB(r=255, g=51, b=255), C_RGB(r=255, g=102, b=0), C_RGB(r=255, g=102, b=51), C_RGB(r=255, g=102, b=102), C_RGB(r=255, g=102, b=153), C_RGB(r=255, g=102, b=204), C_RGB(r=255, g=102, b=255), C_RGB(r=255, g=153, b=0), C_RGB(r=255, g=153, b=51), C_RGB(r=255, g=153, b=102), C_RGB(r=255, g=153, b=153), C_RGB(r=255, g=153, b=204), C_RGB(r=255, g=153, b=255), C_RGB(r=255, g=204, b=0), C_RGB(r=255, g=204, b=51), C_RGB(r=255, g=204, b=102), C_RGB(r=255, g=204, b=153), C_RGB(r=255, g=204, b=204), C_RGB(r=255, g=204, b=255), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=255, b=51), C_RGB(r=255, g=255, b=102), C_RGB(r=255, g=255, b=153), C_RGB(r=255, g=255, b=204), C_RGB(r=255, g=255, b=255)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=85, chunk_type=b'IDAT', chunk_crc=b'\x13\x15\x0f\x03')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ps1n0g08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sPLT'; 1306 bytes
WARNING! chunk type b'sPLT' parser method is not yet overridden. skipping procedure.
parsing b'IDAT'; 65 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'V\x11%(', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sPLT(is_parsed=False, chunk_size=1306, chunk_type=b'sPLT', chunk_crc=b'"\xffh.')
  [003] - CT_IDAT(is_parsed=True, chunk_size=65, chunk_type=b'IDAT', chunk_crc=b'5\xe2\xd8Y')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ps1n2c16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sPLT'; 1306 bytes
WARNING! chunk type b'sPLT' parser method is not yet overridden. skipping procedure.
parsing b'IDAT'; 229 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sPLT(is_parsed=False, chunk_size=1306, chunk_type=b'sPLT', chunk_crc=b'"\xffh.')
  [003] - CT_IDAT(is_parsed=True, chunk_size=229, chunk_type=b'IDAT', chunk_crc=b'\x07\xbb\xc4\xec')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ps2n0g08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sPLT'; 2170 bytes
WARNING! chunk type b'sPLT' parser method is not yet overridden. skipping procedure.
parsing b'IDAT'; 65 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'V\x11%(', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sPLT(is_parsed=False, chunk_size=2170, chunk_type=b'sPLT', chunk_crc=b'\x96\xd0\x8b\x86')
  [003] - CT_IDAT(is_parsed=True, chunk_size=65, chunk_type=b'IDAT', chunk_crc=b'5\xe2\xd8Y')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\ps2n2c16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sPLT'; 2170 bytes
WARNING! chunk type b'sPLT' parser method is not yet overridden. skipping procedure.
parsing b'IDAT'; 229 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sPLT(is_parsed=False, chunk_size=2170, chunk_type=b'sPLT', chunk_crc=b'\x96\xd0\x8b\x86')
  [003] - CT_IDAT(is_parsed=True, chunk_size=229, chunk_type=b'IDAT', chunk_crc=b'\x07\xbb\xc4\xec')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s01i3p01.png"
test description : 1x1 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 3 bytes
parsing b'IDAT'; 10 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'R\xdcf\\', width=1, height=1, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=3, chunk_type=b'PLTE', chunk_crc=b'\x8ax\xd2W', entries=[C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=10, chunk_type=b'IDAT', chunk_crc=b'H\xaf\xa4q')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s01n3p01.png"
test description : 1x1 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 3 bytes
parsing b'IDAT'; 10 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'%\xdbV\xca', width=1, height=1, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=3, chunk_type=b'PLTE', chunk_crc=b'\x8ax\xd2W', entries=[C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=10, chunk_type=b'IDAT', chunk_crc=b'H\xaf\xa4q')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s02i3p01.png"
test description : 2x2 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 3 bytes
parsing b'IDAT'; 11 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'?\x7f\xaf\xf1', width=2, height=2, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=3, chunk_type=b'PLTE', chunk_crc=b'\x19\\/%', entries=[C_RGB(r=0, g=255, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=11, chunk_type=b'IDAT', chunk_crc=b'\xfe\x8cg\xc8')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s02n3p01.png"
test description : 2x2 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 3 bytes
parsing b'IDAT'; 12 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'Hx\x9fg', width=2, height=2, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=3, chunk_type=b'PLTE', chunk_crc=b'\x19\\/%', entries=[C_RGB(r=0, g=255, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=12, chunk_type=b'IDAT', chunk_crc=b'\xf6\x178U')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s03i3p01.png"
test description : 3x3 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 6 bytes
parsing b'IDAT'; 12 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x1b\xe1\x17j', width=3, height=3, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=6, chunk_type=b'PLTE', chunk_crc=b'\xb1\xe5\xa5\x9f', entries=[C_RGB(r=0, g=255, b=0), C_RGB(r=255, g=119, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=12, chunk_type=b'IDAT', chunk_crc=b'\xda\xc9\xe6\x1c')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s03n3p01.png"
test description : 3x3 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 6 bytes
parsing b'IDAT'; 14 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b"l\xe6'\xfc", width=3, height=3, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=6, chunk_type=b'PLTE', chunk_crc=b'\xb1\xe5\xa5\x9f', entries=[C_RGB(r=0, g=255, b=0), C_RGB(r=255, g=119, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=14, chunk_type=b'IDAT', chunk_crc=b'91\x0cK')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s04i3p01.png"
test description : 4x4 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 6 bytes
parsing b'IDAT'; 20 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xe48<\xab', width=4, height=4, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=6, chunk_type=b'PLTE', chunk_crc=b'\x9a\xf7C\xb9', entries=[C_RGB(r=255, g=0, b=119), C_RGB(r=255, g=255, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=20, chunk_type=b'IDAT', chunk_crc=b'\xb9\xdf7\xf6')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s04n3p01.png"
test description : 4x4 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 6 bytes
parsing b'IDAT'; 15 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93?\x0c=', width=4, height=4, bit_depth=1, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=6, chunk_type=b'PLTE', chunk_crc=b'\x9a\xf7C\xb9', entries=[C_RGB(r=255, g=0, b=119), C_RGB(r=255, g=255, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=15, chunk_type=b'IDAT', chunk_crc=b'\x82\xb7\xb6\n')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s05i3p02.png"
test description : 5x5 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 9 bytes
parsing b'IDAT'; 25 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x87\x06\xfe\xe0', width=5, height=5, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=9, chunk_type=b'PLTE', chunk_crc=b'A\xa4\xaas', entries=[C_RGB(r=0, g=255, b=255), C_RGB(r=119, g=0, b=255), C_RGB(r=255, g=0, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=25, chunk_type=b'IDAT', chunk_crc=b'p$FE')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s05n3p02.png"
test description : 5x5 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 9 bytes
parsing b'IDAT'; 20 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xf0\x01\xcev', width=5, height=5, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=9, chunk_type=b'PLTE', chunk_crc=b'A\xa4\xaas', entries=[C_RGB(r=0, g=255, b=255), C_RGB(r=119, g=0, b=255), C_RGB(r=255, g=0, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=20, chunk_type=b'IDAT', chunk_crc=b'\xae\x8c\xf4J')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s06i3p02.png"
test description : 6x6 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 9 bytes
parsing b'IDAT'; 34 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xea\xa57M', width=6, height=6, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=9, chunk_type=b'PLTE', chunk_crc=b'\xa3E\x0eh', entries=[C_RGB(r=0, g=255, b=0), C_RGB(r=0, g=119, b=255), C_RGB(r=255, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=34, chunk_type=b'IDAT', chunk_crc=b'\xc8e\xed$')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s06n3p02.png"
test description : 6x6 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 9 bytes
parsing b'IDAT'; 22 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x9d\xa2\x07\xdb', width=6, height=6, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=9, chunk_type=b'PLTE', chunk_crc=b'\xa3E\x0eh', entries=[C_RGB(r=0, g=255, b=0), C_RGB(r=0, g=119, b=255), C_RGB(r=255, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=22, chunk_type=b'IDAT', chunk_crc=b')p\xfd\xca')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s07i3p02.png"
test description : 7x7 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 12 bytes
parsing b'IDAT'; 37 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xce;\x8f\xd6', width=7, height=7, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=12, chunk_type=b'PLTE', chunk_crc=b'\x1bC\xb3\x9c', entries=[C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=37, chunk_type=b'IDAT', chunk_crc=b'U\x82\xf9\x89')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s07n3p02.png"
test description : 7x7 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 12 bytes
parsing b'IDAT'; 26 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xb9<\xbf@', width=7, height=7, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=12, chunk_type=b'PLTE', chunk_crc=b'\x1bC\xb3\x9c', entries=[C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=26, chunk_type=b'IDAT', chunk_crc=b'\x1e]m\x07')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s08i3p02.png"
test description : 8x8 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 12 bytes
parsing b'IDAT'; 37 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xceff\x8e', width=8, height=8, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=12, chunk_type=b'PLTE', chunk_crc=b'\xaa\xbaY\x1c', entries=[C_RGB(r=0, g=255, b=255), C_RGB(r=119, g=0, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=37, chunk_type=b'IDAT', chunk_crc=b'p\xd3J\xaf')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s08n3p02.png"
test description : 8x8 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 12 bytes
parsing b'IDAT'; 27 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xb9aV\x18', width=8, height=8, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=12, chunk_type=b'PLTE', chunk_crc=b'\xaa\xbaY\x1c', entries=[C_RGB(r=0, g=255, b=255), C_RGB(r=119, g=0, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=27, chunk_type=b'IDAT', chunk_crc=b'\xf9L\x10\x13')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s09i3p02.png"
test description : 9x9 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 12 bytes
parsing b'IDAT'; 35 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xea\xf8\xde\x15', width=9, height=9, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=12, chunk_type=b'PLTE', chunk_crc=b'\xffV\x00d', entries=[C_RGB(r=0, g=255, b=0), C_RGB(r=0, g=119, b=255), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=119, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=35, chunk_type=b'IDAT', chunk_crc=b'\x16\x8c\x97\x03')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s09n3p02.png"
test description : 9x9 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 12 bytes
parsing b'IDAT'; 31 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x9d\xff\xee\x83', width=9, height=9, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=12, chunk_type=b'PLTE', chunk_crc=b'\xffV\x00d', entries=[C_RGB(r=0, g=255, b=0), C_RGB(r=0, g=119, b=255), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=119, b=0)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=31, chunk_type=b'IDAT', chunk_crc=b'jC\x7f#')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s32i3p04.png"
test description : 32x32 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 216 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xf6SWQ', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=216, chunk_type=b'IDAT', chunk_crc=b'\x94\xed\xc4#')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s32n3p04.png"
test description : 32x32 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 124 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x81Tg\xc7', width=32, height=32, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=124, chunk_type=b'IDAT', chunk_crc=b'\xebz&.')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s33i3p04.png"
test description : 33x33 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 246 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xd2\xcd\xef\xca', width=33, height=33, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=246, chunk_type=b'IDAT', chunk_crc=b'\xd6\x9fd\x95')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s33n3p04.png"
test description : 33x33 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 190 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xa5\xca\xdf\\', width=33, height=33, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=190, chunk_type=b'IDAT', chunk_crc=b'\xe61%\xeb')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s34i3p04.png"
test description : 34x34 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 210 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xbfn&g', width=34, height=34, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=210, chunk_type=b'IDAT', chunk_crc=b'Z\xdf\x88)')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s34n3p04.png"
test description : 34x34 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 109 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xc8i\x16\xf1', width=34, height=34, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=109, chunk_type=b'IDAT', chunk_crc=b':+\xa1N')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s35i3p04.png"
test description : 35x35 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 260 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x9b\xf0\x9e\xfc', width=35, height=35, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=260, chunk_type=b'IDAT', chunk_crc=b'\x9bi\x14\x0e')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s35n3p04.png"
test description : 35x35 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 199 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xec\xf7\xaej', width=35, height=35, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=199, chunk_type=b'IDAT', chunk_crc=b'\xce\xa2\xe5H')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s36i3p04.png"
test description : 36x36 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 217 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'd)\xb5=', width=36, height=36, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=217, chunk_type=b'IDAT', chunk_crc=b'\xfb\x18\x7f\xc2')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s36n3p04.png"
test description : 36x36 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 119 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x13.\x85\xab', width=36, height=36, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=119, chunk_type=b'IDAT', chunk_crc=b'\xd3\x91\xac\xbe')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s37i3p04.png"
test description : 37x37 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 254 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'@\xb7\r\xa6', width=37, height=37, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=254, chunk_type=b'IDAT', chunk_crc=b'#\xb1?\xb3')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s37n3p04.png"
test description : 37x37 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 197 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'7\xb0=0', width=37, height=37, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=197, chunk_type=b'IDAT', chunk_crc=b'V\r\xbd\x1c')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s38i3p04.png"
test description : 38x38 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 218 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'-\x14\xc4\x0b', width=38, height=38, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=218, chunk_type=b'IDAT', chunk_crc=b'y\xfcE\x16')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s38n3p04.png"
test description : 38x38 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 106 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'Z\x13\xf4\x9d', width=38, height=38, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=106, chunk_type=b'IDAT', chunk_crc=b'\xce\xacD\xe1')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s39i3p04.png"
test description : 39x39 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 281 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\t\x8a|\x90', width=39, height=39, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=281, chunk_type=b'IDAT', chunk_crc=b'\x0c\xfe\xe2\xe0')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s39n3p04.png"
test description : 39x39 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 213 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'~\x8dL\x06', width=39, height=39, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=213, chunk_type=b'IDAT', chunk_crc=b'+\xff\x9f\xe6')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s40i3p04.png"
test description : 40x40 paletted file, interlaced
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 218 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\t\xd7\x95\xc8', width=40, height=40, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=1, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=218, chunk_type=b'IDAT', chunk_crc=b'p\xf3{x')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\s40n3p04.png"
test description : 40x40 paletted file, no interlacing
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'sBIT'; 3 bytes
parsing b'PLTE'; 39 bytes
parsing b'IDAT'; 117 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'~\xd0\xa5^', width=40, height=40, bit_depth=4, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_sBIT(is_parsed=True, chunk_size=3, chunk_type=b'sBIT', chunk_crc=b'w\xf8\xb5\xa3', sbit_n_r=4, sbit_n_g=4, sbit_n_b=4, sbit_n_a=None)
  [003] - CT_PLTE(is_parsed=True, chunk_size=39, chunk_type=b'PLTE', chunk_crc=b'\xf5\xbf\x06;', entries=[C_RGB(r=0, g=0, b=0), C_RGB(r=255, g=0, b=119), C_RGB(r=0, g=255, b=255), C_RGB(r=0, g=255, b=0), C_RGB(r=119, g=0, b=255), C_RGB(r=0, g=119, b=255), C_RGB(r=119, g=255, b=0), C_RGB(r=255, g=0, b=255), C_RGB(r=255, g=0, b=0), C_RGB(r=0, g=255, b=119), C_RGB(r=255, g=255, b=0), C_RGB(r=255, g=119, b=0), C_RGB(r=0, g=0, b=255)])
  [004] - CT_IDAT(is_parsed=True, chunk_size=117, chunk_type=b'IDAT', chunk_crc=b'H]\x14)')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tbbn0g04.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tRNS'; 2 bytes
parsing b'bKGD'; 2 bytes
parsing b'IDAT'; 328 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tRNS(is_parsed=True, chunk_size=2, chunk_type=b'tRNS', chunk_crc=b'\xe6,\xd0\xa9', alpha_channel=[15])
  [003] - CT_bKGD(is_parsed=True, chunk_size=2, chunk_type=b'bKGD', chunk_crc=b'\xaa\x8d#2', background_color=C_RGB(r=0, g=0, b=0))
  [004] - CT_IDAT(is_parsed=True, chunk_size=328, chunk_type=b'IDAT', chunk_crc=b'[*M\xf7')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tbbn2c16.png"
test description : transparent, blue background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tRNS'; 6 bytes
parsing b'bKGD'; 6 bytes
parsing b'IDAT'; 1932 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tRNS(is_parsed=True, chunk_size=6, chunk_type=b'tRNS', chunk_crc=b'\x9e\xbdK2', alpha_channel=[C_RGB(r=65535, g=65535, b=65535)])
  [003] - CT_bKGD(is_parsed=True, chunk_size=6, chunk_type=b'bKGD', chunk_crc=b'Ge\xa9\x80', background_color=C_RGB(r=0, g=0, b=65535))
  [004] - CT_IDAT(is_parsed=True, chunk_size=1932, chunk_type=b'IDAT', chunk_crc=b'\xfa\xa2a\x1a')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tbbn3p08.png"
test description : transparent, black background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 738 bytes
parsing b'tRNS'; 1 bytes
parsing b'bKGD'; 1 bytes
parsing b'IDAT'; 650 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=738, chunk_type=b'PLTE', chunk_crc=b'\xcea\xfb\x16', entries=[C_RGB(r=255, g=255, b=255), C_RGB(r=128, g=86, b=86), C_RGB(r=181, g=181, b=184), C_RGB(r=168, g=66, b=66), C_RGB(r=159, g=159, b=159), C_RGB(r=177, g=32, b=32), C_RGB(r=139, g=21, b=21), C_RGB(r=157, g=157, b=157), C_RGB(r=27, g=27, b=89), C_RGB(r=155, g=155, b=155), C_RGB(r=0, g=0, b=132), C_RGB(r=153, g=153, b=153), C_RGB(r=143, g=167, b=143), C_RGB(r=151, g=151, b=151), C_RGB(r=149, g=149, b=149), C_RGB(r=147, g=147, b=147), C_RGB(r=41, g=41, b=86), C_RGB(r=145, g=145, b=145), C_RGB(r=0, g=0, b=155), C_RGB(r=143, g=143, b=143), C_RGB(r=139, g=149, b=139), C_RGB(r=46, g=46, b=167), C_RGB(r=141, g=141, b=141), C_RGB(r=128, g=0, b=0), C_RGB(r=139, g=139, b=139), C_RGB(r=185, g=0, b=0), C_RGB(r=137, g=137, b=137), C_RGB(r=12, g=12, b=213), C_RGB(r=120, g=117, b=117), C_RGB(r=135, g=135, b=135), C_RGB(r=0, g=0, b=178), C_RGB(r=133, g=133, b=133), C_RGB(r=165, g=0, b=0), C_RGB(r=222, g=0, b=0), C_RGB(r=129, g=129, b=129), C_RGB(r=127, g=127, b=127), C_RGB(r=0, g=0, b=158), C_RGB(r=125, g=125, b=125), C_RGB(r=0, g=0, b=201), C_RGB(r=123, g=123, b=123), C_RGB(r=121, g=121, b=121), C_RGB(r=55, g=55, b=86), C_RGB(r=119, g=119, b=119), C_RGB(r=117, g=117, b=117), C_RGB(r=115, g=115, b=115), C_RGB(r=72, g=169, b=72), C_RGB(r=142, g=0, b=0), C_RGB(r=2, g=2, b=100), C_RGB(r=0, g=0, b=98), C_RGB(r=86, g=137, b=86), C_RGB(r=40, g=40, b=124), C_RGB(r=83, g=139, b=83), C_RGB(r=137, g=137, b=143), C_RGB(r=103, g=103, b=103), C_RGB(r=101, g=101, b=101), C_RGB(r=93, g=109, b=93), C_RGB(r=19, g=229, b=19), C_RGB(r=134, g=38, b=38), C_RGB(r=111, g=45, b=45), C_RGB(r=68, g=145, b=68), C_RGB(r=97, g=97, b=97), C_RGB(r=59, g=157, b=59), C_RGB(r=68, g=137, b=68), C_RGB(r=61, g=147, b=61), C_RGB(r=0, g=0, b=164), C_RGB(r=0, g=243, b=0), C_RGB(r=0, g=241, b=0), C_RGB(r=89, g=89, b=89), C_RGB(r=87, g=87, b=87), C_RGB(r=85, g=85, b=85), C_RGB(r=83, g=83, b=83), C_RGB(r=52, g=133, b=52), C_RGB(r=81, g=81, b=81), C_RGB(r=36, g=151, b=36), C_RGB(r=79, g=79, b=79), C_RGB(r=58, g=58, b=65), C_RGB(r=16, g=16, b=186), C_RGB(r=178, g=15, b=15), C_RGB(r=0, g=199, b=0), C_RGB(r=0, g=197, b=0), C_RGB(r=252, g=252, b=252), C_RGB(r=0, g=195, b=0), C_RGB(r=4, g=4, b=151), C_RGB(r=0, g=193, b=0), C_RGB(r=45, g=119, b=45), C_RGB(r=250, g=250, b=250), C_RGB(r=0, g=191, b=0), C_RGB(r=0, g=0, b=104), C_RGB(r=0, g=189, b=0), C_RGB(r=218, g=212, b=212), C_RGB(r=16, g=16, b=123), C_RGB(r=9, g=173, b=9), C_RGB(r=248, g=248, b=248), C_RGB(r=0, g=185, b=0), C_RGB(r=0, g=183, b=0), C_RGB(r=156, g=156, b=161), C_RGB(r=246, g=246, b=246), C_RGB(r=12, g=161, b=12), C_RGB(r=0, g=179, b=0), C_RGB(r=0, g=177, b=0), C_RGB(r=16, g=145, b=16), C_RGB(r=0, g=171, b=0), C_RGB(r=242, g=242, b=242), C_RGB(r=0, g=169, b=0), C_RGB(r=0, g=167, b=0), C_RGB(r=238, g=238, b=238), C_RGB(r=236, g=236, b=236), C_RGB(r=0, g=151, b=0), C_RGB(r=234, g=234, b=234), C_RGB(r=0, g=0, b=107), C_RGB(r=0, g=141, b=0), C_RGB(r=0, g=139, b=0), C_RGB(r=0, g=137, b=0), C_RGB(r=0, g=135, b=0), C_RGB(r=49, g=49, b=49), C_RGB(r=25, g=25, b=42), C_RGB(r=7, g=7, b=64), C_RGB(r=18, g=18, b=174), C_RGB(r=9, g=9, b=238), C_RGB(r=211, g=214, b=211), C_RGB(r=204, g=204, b=204), C_RGB(r=147, g=0, b=0), C_RGB(r=163, g=42, b=42), C_RGB(r=198, g=198, b=198), C_RGB(r=196, g=196, b=196), C_RGB(r=204, g=0, b=0), C_RGB(r=211, g=10, b=10), C_RGB(r=129, g=107, b=107), C_RGB(r=120, g=62, b=62), C_RGB(r=3, g=3, b=109), C_RGB(r=0, g=0, b=159), C_RGB(r=10, g=10, b=86), C_RGB(r=70, g=70, b=72), C_RGB(r=65, g=65, b=77), C_RGB(r=115, g=93, b=93), C_RGB(r=81, g=7, b=7), C_RGB(r=168, g=168, b=168), C_RGB(r=237, g=237, b=239), C_RGB(r=160, g=160, b=160), C_RGB(r=158, g=158, b=158), C_RGB(r=156, g=156, b=156), C_RGB(r=0, g=0, b=185), C_RGB(r=154, g=154, b=154), C_RGB(r=178, g=0, b=0), C_RGB(r=152, g=152, b=152), C_RGB(r=235, g=0, b=0), C_RGB(r=150, g=150, b=150), C_RGB(r=158, g=0, b=0), C_RGB(r=148, g=148, b=148), C_RGB(r=19, g=19, b=28), C_RGB(r=146, g=146, b=146), C_RGB(r=144, g=144, b=144), C_RGB(r=142, g=142, b=142), C_RGB(r=0, g=0, b=145), C_RGB(r=138, g=138, b=138), C_RGB(r=136, g=136, b=136), C_RGB(r=118, g=162, b=118), C_RGB(r=133, g=136, b=133), C_RGB(r=134, g=134, b=134), C_RGB(r=132, g=132, b=132), C_RGB(r=120, g=15, b=15), C_RGB(r=130, g=130, b=130), C_RGB(r=126, g=130, b=126), C_RGB(r=126, g=126, b=126), C_RGB(r=124, g=124, b=124), C_RGB(r=122, g=122, b=122), C_RGB(r=74, g=192, b=74), C_RGB(r=118, g=118, b=118), C_RGB(r=116, g=116, b=116), C_RGB(r=114, g=114, b=114), C_RGB(r=112, g=112, b=112), C_RGB(r=152, g=0, b=0), C_RGB(r=110, g=110, b=110), C_RGB(r=106, g=112, b=106), C_RGB(r=122, g=102, b=102), C_RGB(r=106, g=106, b=106), C_RGB(r=132, g=0, b=0), C_RGB(r=68, g=162, b=68), C_RGB(r=75, g=150, b=75), C_RGB(r=97, g=100, b=97), C_RGB(r=98, g=98, b=98), C_RGB(r=0, g=244, b=0), C_RGB(r=56, g=152, b=56), C_RGB(r=92, g=92, b=92), C_RGB(r=90, g=90, b=90), C_RGB(r=0, g=230, b=0), C_RGB(r=2, g=2, b=93), C_RGB(r=66, g=120, b=66), C_RGB(r=86, g=86, b=86), C_RGB(r=0, g=0, b=240), C_RGB(r=46, g=148, b=46), C_RGB(r=71, g=104, b=71), C_RGB(r=49, g=49, b=96), C_RGB(r=0, g=216, b=0), C_RGB(r=82, g=82, b=82), C_RGB(r=80, g=80, b=80), C_RGB(r=0, g=206, b=0), C_RGB(r=33, g=152, b=33), C_RGB(r=20, g=20, b=109), C_RGB(r=0, g=200, b=0), C_RGB(r=76, g=76, b=76), C_RGB(r=253, g=253, b=253), C_RGB(r=0, g=198, b=0), C_RGB(r=0, g=0, b=157), C_RGB(r=111, g=107, b=107), C_RGB(r=234, g=14, b=14), C_RGB(r=72, g=72, b=72), C_RGB(r=0, g=188, b=0), C_RGB(r=52, g=102, b=52), C_RGB(r=2, g=2, b=245), C_RGB(r=83, g=83, b=96), C_RGB(r=0, g=176, b=0), C_RGB(r=0, g=174, b=0), C_RGB(r=183, g=0, b=0), C_RGB(r=0, g=164, b=0), C_RGB(r=239, g=239, b=239), C_RGB(r=0, g=162, b=0), C_RGB(r=143, g=79, b=79), C_RGB(r=149, g=52, b=52), C_RGB(r=0, g=152, b=0), C_RGB(r=0, g=150, b=0), C_RGB(r=0, g=146, b=0), C_RGB(r=231, g=231, b=231), C_RGB(r=0, g=140, b=0), C_RGB(r=227, g=227, b=227), C_RGB(r=0, g=128, b=0), C_RGB(r=146, g=6, b=6), C_RGB(r=1, g=1, b=111), C_RGB(r=100, g=86, b=89), C_RGB(r=0, g=0, b=100), C_RGB(r=78, g=78, b=107), C_RGB(r=207, g=207, b=207), C_RGB(r=221, g=221, b=224), C_RGB(r=0, g=0, b=123), C_RGB(r=201, g=201, b=201), C_RGB(r=22, g=22, b=65), C_RGB(r=33, g=33, b=89), C_RGB(r=87, g=87, b=89), C_RGB(r=68, g=68, b=120), C_RGB(r=191, g=191, b=191), C_RGB(r=235, g=221, b=221), C_RGB(r=45, g=45, b=84), C_RGB(r=10, g=10, b=96), C_RGB(r=0, g=0, b=255), C_RGB(r=191, g=125, b=125), C_RGB(r=0, g=0, b=0)])
  [003] - CT_tRNS(is_parsed=True, chunk_size=1, chunk_type=b'tRNS', chunk_crc=b'@\xe6\xd8f', alpha_channel=[0])
  [004] - CT_bKGD(is_parsed=True, chunk_size=1, chunk_type=b'bKGD', chunk_crc=b'E\xd2\x1b\xdb', background_color=C_RGB(r=0, g=0, b=0))
  [005] - CT_IDAT(is_parsed=True, chunk_size=650, chunk_type=b'IDAT', chunk_crc=b'\x9d\x95\xdb\xc0')
  [006] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tbgn2c16.png"
test description : transparent, green background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tRNS'; 6 bytes
parsing b'bKGD'; 6 bytes
parsing b'IDAT'; 1932 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xac\x881\xe0', width=32, height=32, bit_depth=16, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tRNS(is_parsed=True, chunk_size=6, chunk_type=b'tRNS', chunk_crc=b'\x9e\xbdK2', alpha_channel=[C_RGB(r=65535, g=65535, b=65535)])
  [003] - CT_bKGD(is_parsed=True, chunk_size=6, chunk_type=b'bKGD', chunk_crc=b'\x99\xde\x89c', background_color=C_RGB(r=0, g=65535, b=0))
  [004] - CT_IDAT(is_parsed=True, chunk_size=1932, chunk_type=b'IDAT', chunk_crc=b'\xfa\xa2a\x1a')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tbgn3p08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 738 bytes
parsing b'tRNS'; 1 bytes
parsing b'bKGD'; 1 bytes
parsing b'IDAT'; 650 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=738, chunk_type=b'PLTE', chunk_crc=b'xe=5', entries=[C_RGB(r=255, g=255, b=255), C_RGB(r=128, g=86, b=86), C_RGB(r=181, g=181, b=184), C_RGB(r=168, g=66, b=66), C_RGB(r=159, g=159, b=159), C_RGB(r=177, g=32, b=32), C_RGB(r=139, g=21, b=21), C_RGB(r=157, g=157, b=157), C_RGB(r=27, g=27, b=89), C_RGB(r=155, g=155, b=155), C_RGB(r=0, g=0, b=132), C_RGB(r=153, g=153, b=153), C_RGB(r=143, g=167, b=143), C_RGB(r=151, g=151, b=151), C_RGB(r=149, g=149, b=149), C_RGB(r=147, g=147, b=147), C_RGB(r=41, g=41, b=86), C_RGB(r=145, g=145, b=145), C_RGB(r=0, g=0, b=155), C_RGB(r=143, g=143, b=143), C_RGB(r=139, g=149, b=139), C_RGB(r=46, g=46, b=167), C_RGB(r=141, g=141, b=141), C_RGB(r=128, g=0, b=0), C_RGB(r=139, g=139, b=139), C_RGB(r=185, g=0, b=0), C_RGB(r=137, g=137, b=137), C_RGB(r=12, g=12, b=213), C_RGB(r=120, g=117, b=117), C_RGB(r=135, g=135, b=135), C_RGB(r=0, g=0, b=178), C_RGB(r=133, g=133, b=133), C_RGB(r=165, g=0, b=0), C_RGB(r=222, g=0, b=0), C_RGB(r=129, g=129, b=129), C_RGB(r=127, g=127, b=127), C_RGB(r=0, g=0, b=158), C_RGB(r=125, g=125, b=125), C_RGB(r=0, g=0, b=201), C_RGB(r=123, g=123, b=123), C_RGB(r=121, g=121, b=121), C_RGB(r=55, g=55, b=86), C_RGB(r=119, g=119, b=119), C_RGB(r=117, g=117, b=117), C_RGB(r=115, g=115, b=115), C_RGB(r=72, g=169, b=72), C_RGB(r=142, g=0, b=0), C_RGB(r=2, g=2, b=100), C_RGB(r=0, g=0, b=98), C_RGB(r=86, g=137, b=86), C_RGB(r=40, g=40, b=124), C_RGB(r=83, g=139, b=83), C_RGB(r=137, g=137, b=143), C_RGB(r=103, g=103, b=103), C_RGB(r=101, g=101, b=101), C_RGB(r=93, g=109, b=93), C_RGB(r=19, g=229, b=19), C_RGB(r=134, g=38, b=38), C_RGB(r=111, g=45, b=45), C_RGB(r=68, g=145, b=68), C_RGB(r=97, g=97, b=97), C_RGB(r=59, g=157, b=59), C_RGB(r=68, g=137, b=68), C_RGB(r=61, g=147, b=61), C_RGB(r=0, g=0, b=164), C_RGB(r=0, g=243, b=0), C_RGB(r=0, g=241, b=0), C_RGB(r=89, g=89, b=89), C_RGB(r=87, g=87, b=87), C_RGB(r=85, g=85, b=85), C_RGB(r=83, g=83, b=83), C_RGB(r=52, g=133, b=52), C_RGB(r=81, g=81, b=81), C_RGB(r=36, g=151, b=36), C_RGB(r=79, g=79, b=79), C_RGB(r=58, g=58, b=65), C_RGB(r=16, g=16, b=186), C_RGB(r=178, g=15, b=15), C_RGB(r=0, g=199, b=0), C_RGB(r=0, g=197, b=0), C_RGB(r=252, g=252, b=252), C_RGB(r=0, g=195, b=0), C_RGB(r=4, g=4, b=151), C_RGB(r=0, g=193, b=0), C_RGB(r=45, g=119, b=45), C_RGB(r=250, g=250, b=250), C_RGB(r=0, g=191, b=0), C_RGB(r=0, g=0, b=104), C_RGB(r=0, g=189, b=0), C_RGB(r=218, g=212, b=212), C_RGB(r=16, g=16, b=123), C_RGB(r=9, g=173, b=9), C_RGB(r=248, g=248, b=248), C_RGB(r=0, g=185, b=0), C_RGB(r=0, g=183, b=0), C_RGB(r=156, g=156, b=161), C_RGB(r=246, g=246, b=246), C_RGB(r=12, g=161, b=12), C_RGB(r=0, g=179, b=0), C_RGB(r=0, g=177, b=0), C_RGB(r=16, g=145, b=16), C_RGB(r=0, g=171, b=0), C_RGB(r=242, g=242, b=242), C_RGB(r=0, g=169, b=0), C_RGB(r=0, g=167, b=0), C_RGB(r=238, g=238, b=238), C_RGB(r=236, g=236, b=236), C_RGB(r=0, g=151, b=0), C_RGB(r=234, g=234, b=234), C_RGB(r=0, g=0, b=107), C_RGB(r=0, g=141, b=0), C_RGB(r=0, g=139, b=0), C_RGB(r=0, g=137, b=0), C_RGB(r=0, g=135, b=0), C_RGB(r=49, g=49, b=49), C_RGB(r=25, g=25, b=42), C_RGB(r=7, g=7, b=64), C_RGB(r=18, g=18, b=174), C_RGB(r=9, g=9, b=238), C_RGB(r=211, g=214, b=211), C_RGB(r=204, g=204, b=204), C_RGB(r=147, g=0, b=0), C_RGB(r=163, g=42, b=42), C_RGB(r=198, g=198, b=198), C_RGB(r=196, g=196, b=196), C_RGB(r=204, g=0, b=0), C_RGB(r=211, g=10, b=10), C_RGB(r=129, g=107, b=107), C_RGB(r=120, g=62, b=62), C_RGB(r=3, g=3, b=109), C_RGB(r=0, g=0, b=159), C_RGB(r=10, g=10, b=86), C_RGB(r=70, g=70, b=72), C_RGB(r=65, g=65, b=77), C_RGB(r=115, g=93, b=93), C_RGB(r=81, g=7, b=7), C_RGB(r=168, g=168, b=168), C_RGB(r=237, g=237, b=239), C_RGB(r=160, g=160, b=160), C_RGB(r=158, g=158, b=158), C_RGB(r=156, g=156, b=156), C_RGB(r=0, g=0, b=185), C_RGB(r=154, g=154, b=154), C_RGB(r=178, g=0, b=0), C_RGB(r=152, g=152, b=152), C_RGB(r=235, g=0, b=0), C_RGB(r=150, g=150, b=150), C_RGB(r=158, g=0, b=0), C_RGB(r=148, g=148, b=148), C_RGB(r=19, g=19, b=28), C_RGB(r=146, g=146, b=146), C_RGB(r=144, g=144, b=144), C_RGB(r=142, g=142, b=142), C_RGB(r=0, g=0, b=145), C_RGB(r=138, g=138, b=138), C_RGB(r=136, g=136, b=136), C_RGB(r=118, g=162, b=118), C_RGB(r=133, g=136, b=133), C_RGB(r=134, g=134, b=134), C_RGB(r=132, g=132, b=132), C_RGB(r=120, g=15, b=15), C_RGB(r=130, g=130, b=130), C_RGB(r=126, g=130, b=126), C_RGB(r=126, g=126, b=126), C_RGB(r=124, g=124, b=124), C_RGB(r=122, g=122, b=122), C_RGB(r=74, g=192, b=74), C_RGB(r=118, g=118, b=118), C_RGB(r=116, g=116, b=116), C_RGB(r=114, g=114, b=114), C_RGB(r=112, g=112, b=112), C_RGB(r=152, g=0, b=0), C_RGB(r=110, g=110, b=110), C_RGB(r=106, g=112, b=106), C_RGB(r=122, g=102, b=102), C_RGB(r=106, g=106, b=106), C_RGB(r=132, g=0, b=0), C_RGB(r=68, g=162, b=68), C_RGB(r=75, g=150, b=75), C_RGB(r=97, g=100, b=97), C_RGB(r=98, g=98, b=98), C_RGB(r=0, g=244, b=0), C_RGB(r=56, g=152, b=56), C_RGB(r=92, g=92, b=92), C_RGB(r=90, g=90, b=90), C_RGB(r=0, g=230, b=0), C_RGB(r=2, g=2, b=93), C_RGB(r=66, g=120, b=66), C_RGB(r=86, g=86, b=86), C_RGB(r=0, g=0, b=240), C_RGB(r=46, g=148, b=46), C_RGB(r=71, g=104, b=71), C_RGB(r=49, g=49, b=96), C_RGB(r=0, g=216, b=0), C_RGB(r=82, g=82, b=82), C_RGB(r=80, g=80, b=80), C_RGB(r=0, g=206, b=0), C_RGB(r=33, g=152, b=33), C_RGB(r=20, g=20, b=109), C_RGB(r=0, g=200, b=0), C_RGB(r=76, g=76, b=76), C_RGB(r=253, g=253, b=253), C_RGB(r=0, g=198, b=0), C_RGB(r=0, g=0, b=157), C_RGB(r=111, g=107, b=107), C_RGB(r=234, g=14, b=14), C_RGB(r=72, g=72, b=72), C_RGB(r=0, g=188, b=0), C_RGB(r=52, g=102, b=52), C_RGB(r=2, g=2, b=245), C_RGB(r=83, g=83, b=96), C_RGB(r=0, g=176, b=0), C_RGB(r=0, g=174, b=0), C_RGB(r=183, g=0, b=0), C_RGB(r=0, g=164, b=0), C_RGB(r=239, g=239, b=239), C_RGB(r=0, g=162, b=0), C_RGB(r=143, g=79, b=79), C_RGB(r=149, g=52, b=52), C_RGB(r=0, g=152, b=0), C_RGB(r=0, g=150, b=0), C_RGB(r=0, g=146, b=0), C_RGB(r=231, g=231, b=231), C_RGB(r=0, g=140, b=0), C_RGB(r=227, g=227, b=227), C_RGB(r=0, g=128, b=0), C_RGB(r=146, g=6, b=6), C_RGB(r=1, g=1, b=111), C_RGB(r=100, g=86, b=89), C_RGB(r=0, g=0, b=100), C_RGB(r=78, g=78, b=107), C_RGB(r=207, g=207, b=207), C_RGB(r=221, g=221, b=224), C_RGB(r=0, g=0, b=123), C_RGB(r=201, g=201, b=201), C_RGB(r=22, g=22, b=65), C_RGB(r=33, g=33, b=89), C_RGB(r=87, g=87, b=89), C_RGB(r=68, g=68, b=120), C_RGB(r=191, g=191, b=191), C_RGB(r=235, g=221, b=221), C_RGB(r=45, g=45, b=84), C_RGB(r=10, g=10, b=96), C_RGB(r=0, g=0, b=255), C_RGB(r=191, g=125, b=125), C_RGB(r=170, g=170, b=170)])
  [003] - CT_tRNS(is_parsed=True, chunk_size=1, chunk_type=b'tRNS', chunk_crc=b'@\xe6\xd8f', alpha_channel=[0])
  [004] - CT_bKGD(is_parsed=True, chunk_size=1, chunk_type=b'bKGD', chunk_crc=b'E\xd2\x1b\xdb', background_color=C_RGB(r=170, g=170, b=170))
  [005] - CT_IDAT(is_parsed=True, chunk_size=650, chunk_type=b'IDAT', chunk_crc=b'\x9d\x95\xdb\xc0')
  [006] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tbrn2c08.png"
test description : transparent, red background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tRNS'; 6 bytes
parsing b'bKGD'; 6 bytes
parsing b'IDAT'; 1524 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tRNS(is_parsed=True, chunk_size=6, chunk_type=b'tRNS', chunk_crc=b'7X\x1b}', alpha_channel=[C_RGB(r=255, g=255, b=255)])
  [003] - CT_bKGD(is_parsed=True, chunk_size=6, chunk_type=b'bKGD', chunk_crc=b"3'|\xf3", background_color=C_RGB(r=255, g=0, b=0))
  [004] - CT_IDAT(is_parsed=True, chunk_size=1524, chunk_type=b'IDAT', chunk_crc=b'^\x9dI\xa3')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tbwn0g16.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'tRNS'; 2 bytes
parsing b'bKGD'; 2 bytes
parsing b'IDAT'; 1212 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x06\x81\xf9k', width=32, height=32, bit_depth=16, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_tRNS(is_parsed=True, chunk_size=2, chunk_type=b'tRNS', chunk_crc=b'\xc8\xb5\xdf\xc7', alpha_channel=[65535])
  [003] - CT_bKGD(is_parsed=True, chunk_size=2, chunk_type=b'bKGD', chunk_crc=b'\x14\xab1\xcd', background_color=C_RGB(r=65535, g=65535, b=65535))
  [004] - CT_IDAT(is_parsed=True, chunk_size=1212, chunk_type=b'IDAT', chunk_crc=b'37\x1e\x13')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tbwn3p08.png"
test description : transparent, white background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 735 bytes
parsing b'tRNS'; 1 bytes
parsing b'bKGD'; 1 bytes
parsing b'IDAT'; 650 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=735, chunk_type=b'PLTE', chunk_crc=b'\x0f%\xb7\xad', entries=[C_RGB(r=255, g=255, b=255), C_RGB(r=128, g=86, b=86), C_RGB(r=181, g=181, b=184), C_RGB(r=168, g=66, b=66), C_RGB(r=159, g=159, b=159), C_RGB(r=177, g=32, b=32), C_RGB(r=139, g=21, b=21), C_RGB(r=157, g=157, b=157), C_RGB(r=27, g=27, b=89), C_RGB(r=155, g=155, b=155), C_RGB(r=0, g=0, b=132), C_RGB(r=153, g=153, b=153), C_RGB(r=143, g=167, b=143), C_RGB(r=151, g=151, b=151), C_RGB(r=149, g=149, b=149), C_RGB(r=147, g=147, b=147), C_RGB(r=41, g=41, b=86), C_RGB(r=145, g=145, b=145), C_RGB(r=0, g=0, b=155), C_RGB(r=143, g=143, b=143), C_RGB(r=139, g=149, b=139), C_RGB(r=46, g=46, b=167), C_RGB(r=141, g=141, b=141), C_RGB(r=128, g=0, b=0), C_RGB(r=139, g=139, b=139), C_RGB(r=185, g=0, b=0), C_RGB(r=137, g=137, b=137), C_RGB(r=12, g=12, b=213), C_RGB(r=120, g=117, b=117), C_RGB(r=135, g=135, b=135), C_RGB(r=0, g=0, b=178), C_RGB(r=133, g=133, b=133), C_RGB(r=165, g=0, b=0), C_RGB(r=222, g=0, b=0), C_RGB(r=129, g=129, b=129), C_RGB(r=127, g=127, b=127), C_RGB(r=0, g=0, b=158), C_RGB(r=125, g=125, b=125), C_RGB(r=0, g=0, b=201), C_RGB(r=123, g=123, b=123), C_RGB(r=121, g=121, b=121), C_RGB(r=55, g=55, b=86), C_RGB(r=119, g=119, b=119), C_RGB(r=117, g=117, b=117), C_RGB(r=115, g=115, b=115), C_RGB(r=72, g=169, b=72), C_RGB(r=142, g=0, b=0), C_RGB(r=2, g=2, b=100), C_RGB(r=0, g=0, b=98), C_RGB(r=86, g=137, b=86), C_RGB(r=40, g=40, b=124), C_RGB(r=83, g=139, b=83), C_RGB(r=137, g=137, b=143), C_RGB(r=103, g=103, b=103), C_RGB(r=101, g=101, b=101), C_RGB(r=93, g=109, b=93), C_RGB(r=19, g=229, b=19), C_RGB(r=134, g=38, b=38), C_RGB(r=111, g=45, b=45), C_RGB(r=68, g=145, b=68), C_RGB(r=97, g=97, b=97), C_RGB(r=59, g=157, b=59), C_RGB(r=68, g=137, b=68), C_RGB(r=61, g=147, b=61), C_RGB(r=0, g=0, b=164), C_RGB(r=0, g=243, b=0), C_RGB(r=0, g=241, b=0), C_RGB(r=89, g=89, b=89), C_RGB(r=87, g=87, b=87), C_RGB(r=85, g=85, b=85), C_RGB(r=83, g=83, b=83), C_RGB(r=52, g=133, b=52), C_RGB(r=81, g=81, b=81), C_RGB(r=36, g=151, b=36), C_RGB(r=79, g=79, b=79), C_RGB(r=58, g=58, b=65), C_RGB(r=16, g=16, b=186), C_RGB(r=178, g=15, b=15), C_RGB(r=0, g=199, b=0), C_RGB(r=0, g=197, b=0), C_RGB(r=252, g=252, b=252), C_RGB(r=0, g=195, b=0), C_RGB(r=4, g=4, b=151), C_RGB(r=0, g=193, b=0), C_RGB(r=45, g=119, b=45), C_RGB(r=250, g=250, b=250), C_RGB(r=0, g=191, b=0), C_RGB(r=0, g=0, b=104), C_RGB(r=0, g=189, b=0), C_RGB(r=218, g=212, b=212), C_RGB(r=16, g=16, b=123), C_RGB(r=9, g=173, b=9), C_RGB(r=248, g=248, b=248), C_RGB(r=0, g=185, b=0), C_RGB(r=0, g=183, b=0), C_RGB(r=156, g=156, b=161), C_RGB(r=246, g=246, b=246), C_RGB(r=12, g=161, b=12), C_RGB(r=0, g=179, b=0), C_RGB(r=0, g=177, b=0), C_RGB(r=16, g=145, b=16), C_RGB(r=0, g=171, b=0), C_RGB(r=242, g=242, b=242), C_RGB(r=0, g=169, b=0), C_RGB(r=0, g=167, b=0), C_RGB(r=238, g=238, b=238), C_RGB(r=236, g=236, b=236), C_RGB(r=0, g=151, b=0), C_RGB(r=234, g=234, b=234), C_RGB(r=0, g=0, b=107), C_RGB(r=0, g=141, b=0), C_RGB(r=0, g=139, b=0), C_RGB(r=0, g=137, b=0), C_RGB(r=0, g=135, b=0), C_RGB(r=49, g=49, b=49), C_RGB(r=25, g=25, b=42), C_RGB(r=7, g=7, b=64), C_RGB(r=18, g=18, b=174), C_RGB(r=9, g=9, b=238), C_RGB(r=211, g=214, b=211), C_RGB(r=204, g=204, b=204), C_RGB(r=147, g=0, b=0), C_RGB(r=163, g=42, b=42), C_RGB(r=198, g=198, b=198), C_RGB(r=196, g=196, b=196), C_RGB(r=204, g=0, b=0), C_RGB(r=211, g=10, b=10), C_RGB(r=129, g=107, b=107), C_RGB(r=120, g=62, b=62), C_RGB(r=3, g=3, b=109), C_RGB(r=0, g=0, b=159), C_RGB(r=10, g=10, b=86), C_RGB(r=70, g=70, b=72), C_RGB(r=65, g=65, b=77), C_RGB(r=115, g=93, b=93), C_RGB(r=81, g=7, b=7), C_RGB(r=168, g=168, b=168), C_RGB(r=237, g=237, b=239), C_RGB(r=160, g=160, b=160), C_RGB(r=158, g=158, b=158), C_RGB(r=156, g=156, b=156), C_RGB(r=0, g=0, b=185), C_RGB(r=154, g=154, b=154), C_RGB(r=178, g=0, b=0), C_RGB(r=152, g=152, b=152), C_RGB(r=235, g=0, b=0), C_RGB(r=150, g=150, b=150), C_RGB(r=158, g=0, b=0), C_RGB(r=148, g=148, b=148), C_RGB(r=19, g=19, b=28), C_RGB(r=146, g=146, b=146), C_RGB(r=144, g=144, b=144), C_RGB(r=142, g=142, b=142), C_RGB(r=0, g=0, b=145), C_RGB(r=138, g=138, b=138), C_RGB(r=136, g=136, b=136), C_RGB(r=118, g=162, b=118), C_RGB(r=133, g=136, b=133), C_RGB(r=134, g=134, b=134), C_RGB(r=132, g=132, b=132), C_RGB(r=120, g=15, b=15), C_RGB(r=130, g=130, b=130), C_RGB(r=126, g=130, b=126), C_RGB(r=126, g=126, b=126), C_RGB(r=124, g=124, b=124), C_RGB(r=122, g=122, b=122), C_RGB(r=74, g=192, b=74), C_RGB(r=118, g=118, b=118), C_RGB(r=116, g=116, b=116), C_RGB(r=114, g=114, b=114), C_RGB(r=112, g=112, b=112), C_RGB(r=152, g=0, b=0), C_RGB(r=110, g=110, b=110), C_RGB(r=106, g=112, b=106), C_RGB(r=122, g=102, b=102), C_RGB(r=106, g=106, b=106), C_RGB(r=132, g=0, b=0), C_RGB(r=68, g=162, b=68), C_RGB(r=75, g=150, b=75), C_RGB(r=97, g=100, b=97), C_RGB(r=98, g=98, b=98), C_RGB(r=0, g=244, b=0), C_RGB(r=56, g=152, b=56), C_RGB(r=92, g=92, b=92), C_RGB(r=90, g=90, b=90), C_RGB(r=0, g=230, b=0), C_RGB(r=2, g=2, b=93), C_RGB(r=66, g=120, b=66), C_RGB(r=86, g=86, b=86), C_RGB(r=0, g=0, b=240), C_RGB(r=46, g=148, b=46), C_RGB(r=71, g=104, b=71), C_RGB(r=49, g=49, b=96), C_RGB(r=0, g=216, b=0), C_RGB(r=82, g=82, b=82), C_RGB(r=80, g=80, b=80), C_RGB(r=0, g=206, b=0), C_RGB(r=33, g=152, b=33), C_RGB(r=20, g=20, b=109), C_RGB(r=0, g=200, b=0), C_RGB(r=76, g=76, b=76), C_RGB(r=253, g=253, b=253), C_RGB(r=0, g=198, b=0), C_RGB(r=0, g=0, b=157), C_RGB(r=111, g=107, b=107), C_RGB(r=234, g=14, b=14), C_RGB(r=72, g=72, b=72), C_RGB(r=0, g=188, b=0), C_RGB(r=52, g=102, b=52), C_RGB(r=2, g=2, b=245), C_RGB(r=83, g=83, b=96), C_RGB(r=0, g=176, b=0), C_RGB(r=0, g=174, b=0), C_RGB(r=183, g=0, b=0), C_RGB(r=0, g=164, b=0), C_RGB(r=239, g=239, b=239), C_RGB(r=0, g=162, b=0), C_RGB(r=143, g=79, b=79), C_RGB(r=149, g=52, b=52), C_RGB(r=0, g=152, b=0), C_RGB(r=0, g=150, b=0), C_RGB(r=0, g=146, b=0), C_RGB(r=231, g=231, b=231), C_RGB(r=0, g=140, b=0), C_RGB(r=227, g=227, b=227), C_RGB(r=0, g=128, b=0), C_RGB(r=146, g=6, b=6), C_RGB(r=1, g=1, b=111), C_RGB(r=100, g=86, b=89), C_RGB(r=0, g=0, b=100), C_RGB(r=78, g=78, b=107), C_RGB(r=207, g=207, b=207), C_RGB(r=221, g=221, b=224), C_RGB(r=0, g=0, b=123), C_RGB(r=201, g=201, b=201), C_RGB(r=22, g=22, b=65), C_RGB(r=33, g=33, b=89), C_RGB(r=87, g=87, b=89), C_RGB(r=68, g=68, b=120), C_RGB(r=191, g=191, b=191), C_RGB(r=235, g=221, b=221), C_RGB(r=45, g=45, b=84), C_RGB(r=10, g=10, b=96), C_RGB(r=0, g=0, b=255), C_RGB(r=191, g=125, b=125)])
  [003] - CT_tRNS(is_parsed=True, chunk_size=1, chunk_type=b'tRNS', chunk_crc=b'@\xe6\xd8f', alpha_channel=[0])
  [004] - CT_bKGD(is_parsed=True, chunk_size=1, chunk_type=b'bKGD', chunk_crc=b'\x88\x05\x1dH', background_color=C_RGB(r=255, g=255, b=255))
  [005] - CT_IDAT(is_parsed=True, chunk_size=650, chunk_type=b'IDAT', chunk_crc=b'\x9d\x95\xdb\xc0')
  [006] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tbyn3p08.png"
test description : transparent, yellow background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 738 bytes
parsing b'tRNS'; 1 bytes
parsing b'bKGD'; 1 bytes
parsing b'IDAT'; 650 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=738, chunk_type=b'PLTE', chunk_crc=b'\xe3\xdd2\x89', entries=[C_RGB(r=255, g=255, b=255), C_RGB(r=128, g=86, b=86), C_RGB(r=181, g=181, b=184), C_RGB(r=168, g=66, b=66), C_RGB(r=159, g=159, b=159), C_RGB(r=177, g=32, b=32), C_RGB(r=139, g=21, b=21), C_RGB(r=157, g=157, b=157), C_RGB(r=27, g=27, b=89), C_RGB(r=155, g=155, b=155), C_RGB(r=0, g=0, b=132), C_RGB(r=153, g=153, b=153), C_RGB(r=143, g=167, b=143), C_RGB(r=151, g=151, b=151), C_RGB(r=149, g=149, b=149), C_RGB(r=147, g=147, b=147), C_RGB(r=41, g=41, b=86), C_RGB(r=145, g=145, b=145), C_RGB(r=0, g=0, b=155), C_RGB(r=143, g=143, b=143), C_RGB(r=139, g=149, b=139), C_RGB(r=46, g=46, b=167), C_RGB(r=141, g=141, b=141), C_RGB(r=128, g=0, b=0), C_RGB(r=139, g=139, b=139), C_RGB(r=185, g=0, b=0), C_RGB(r=137, g=137, b=137), C_RGB(r=12, g=12, b=213), C_RGB(r=120, g=117, b=117), C_RGB(r=135, g=135, b=135), C_RGB(r=0, g=0, b=178), C_RGB(r=133, g=133, b=133), C_RGB(r=165, g=0, b=0), C_RGB(r=222, g=0, b=0), C_RGB(r=129, g=129, b=129), C_RGB(r=127, g=127, b=127), C_RGB(r=0, g=0, b=158), C_RGB(r=125, g=125, b=125), C_RGB(r=0, g=0, b=201), C_RGB(r=123, g=123, b=123), C_RGB(r=121, g=121, b=121), C_RGB(r=55, g=55, b=86), C_RGB(r=119, g=119, b=119), C_RGB(r=117, g=117, b=117), C_RGB(r=115, g=115, b=115), C_RGB(r=72, g=169, b=72), C_RGB(r=142, g=0, b=0), C_RGB(r=2, g=2, b=100), C_RGB(r=0, g=0, b=98), C_RGB(r=86, g=137, b=86), C_RGB(r=40, g=40, b=124), C_RGB(r=83, g=139, b=83), C_RGB(r=137, g=137, b=143), C_RGB(r=103, g=103, b=103), C_RGB(r=101, g=101, b=101), C_RGB(r=93, g=109, b=93), C_RGB(r=19, g=229, b=19), C_RGB(r=134, g=38, b=38), C_RGB(r=111, g=45, b=45), C_RGB(r=68, g=145, b=68), C_RGB(r=97, g=97, b=97), C_RGB(r=59, g=157, b=59), C_RGB(r=68, g=137, b=68), C_RGB(r=61, g=147, b=61), C_RGB(r=0, g=0, b=164), C_RGB(r=0, g=243, b=0), C_RGB(r=0, g=241, b=0), C_RGB(r=89, g=89, b=89), C_RGB(r=87, g=87, b=87), C_RGB(r=85, g=85, b=85), C_RGB(r=83, g=83, b=83), C_RGB(r=52, g=133, b=52), C_RGB(r=81, g=81, b=81), C_RGB(r=36, g=151, b=36), C_RGB(r=79, g=79, b=79), C_RGB(r=58, g=58, b=65), C_RGB(r=16, g=16, b=186), C_RGB(r=178, g=15, b=15), C_RGB(r=0, g=199, b=0), C_RGB(r=0, g=197, b=0), C_RGB(r=252, g=252, b=252), C_RGB(r=0, g=195, b=0), C_RGB(r=4, g=4, b=151), C_RGB(r=0, g=193, b=0), C_RGB(r=45, g=119, b=45), C_RGB(r=250, g=250, b=250), C_RGB(r=0, g=191, b=0), C_RGB(r=0, g=0, b=104), C_RGB(r=0, g=189, b=0), C_RGB(r=218, g=212, b=212), C_RGB(r=16, g=16, b=123), C_RGB(r=9, g=173, b=9), C_RGB(r=248, g=248, b=248), C_RGB(r=0, g=185, b=0), C_RGB(r=0, g=183, b=0), C_RGB(r=156, g=156, b=161), C_RGB(r=246, g=246, b=246), C_RGB(r=12, g=161, b=12), C_RGB(r=0, g=179, b=0), C_RGB(r=0, g=177, b=0), C_RGB(r=16, g=145, b=16), C_RGB(r=0, g=171, b=0), C_RGB(r=242, g=242, b=242), C_RGB(r=0, g=169, b=0), C_RGB(r=0, g=167, b=0), C_RGB(r=238, g=238, b=238), C_RGB(r=236, g=236, b=236), C_RGB(r=0, g=151, b=0), C_RGB(r=234, g=234, b=234), C_RGB(r=0, g=0, b=107), C_RGB(r=0, g=141, b=0), C_RGB(r=0, g=139, b=0), C_RGB(r=0, g=137, b=0), C_RGB(r=0, g=135, b=0), C_RGB(r=49, g=49, b=49), C_RGB(r=25, g=25, b=42), C_RGB(r=7, g=7, b=64), C_RGB(r=18, g=18, b=174), C_RGB(r=9, g=9, b=238), C_RGB(r=211, g=214, b=211), C_RGB(r=204, g=204, b=204), C_RGB(r=147, g=0, b=0), C_RGB(r=163, g=42, b=42), C_RGB(r=198, g=198, b=198), C_RGB(r=196, g=196, b=196), C_RGB(r=204, g=0, b=0), C_RGB(r=211, g=10, b=10), C_RGB(r=129, g=107, b=107), C_RGB(r=120, g=62, b=62), C_RGB(r=3, g=3, b=109), C_RGB(r=0, g=0, b=159), C_RGB(r=10, g=10, b=86), C_RGB(r=70, g=70, b=72), C_RGB(r=65, g=65, b=77), C_RGB(r=115, g=93, b=93), C_RGB(r=81, g=7, b=7), C_RGB(r=168, g=168, b=168), C_RGB(r=237, g=237, b=239), C_RGB(r=160, g=160, b=160), C_RGB(r=158, g=158, b=158), C_RGB(r=156, g=156, b=156), C_RGB(r=0, g=0, b=185), C_RGB(r=154, g=154, b=154), C_RGB(r=178, g=0, b=0), C_RGB(r=152, g=152, b=152), C_RGB(r=235, g=0, b=0), C_RGB(r=150, g=150, b=150), C_RGB(r=158, g=0, b=0), C_RGB(r=148, g=148, b=148), C_RGB(r=19, g=19, b=28), C_RGB(r=146, g=146, b=146), C_RGB(r=144, g=144, b=144), C_RGB(r=142, g=142, b=142), C_RGB(r=0, g=0, b=145), C_RGB(r=138, g=138, b=138), C_RGB(r=136, g=136, b=136), C_RGB(r=118, g=162, b=118), C_RGB(r=133, g=136, b=133), C_RGB(r=134, g=134, b=134), C_RGB(r=132, g=132, b=132), C_RGB(r=120, g=15, b=15), C_RGB(r=130, g=130, b=130), C_RGB(r=126, g=130, b=126), C_RGB(r=126, g=126, b=126), C_RGB(r=124, g=124, b=124), C_RGB(r=122, g=122, b=122), C_RGB(r=74, g=192, b=74), C_RGB(r=118, g=118, b=118), C_RGB(r=116, g=116, b=116), C_RGB(r=114, g=114, b=114), C_RGB(r=112, g=112, b=112), C_RGB(r=152, g=0, b=0), C_RGB(r=110, g=110, b=110), C_RGB(r=106, g=112, b=106), C_RGB(r=122, g=102, b=102), C_RGB(r=106, g=106, b=106), C_RGB(r=132, g=0, b=0), C_RGB(r=68, g=162, b=68), C_RGB(r=75, g=150, b=75), C_RGB(r=97, g=100, b=97), C_RGB(r=98, g=98, b=98), C_RGB(r=0, g=244, b=0), C_RGB(r=56, g=152, b=56), C_RGB(r=92, g=92, b=92), C_RGB(r=90, g=90, b=90), C_RGB(r=0, g=230, b=0), C_RGB(r=2, g=2, b=93), C_RGB(r=66, g=120, b=66), C_RGB(r=86, g=86, b=86), C_RGB(r=0, g=0, b=240), C_RGB(r=46, g=148, b=46), C_RGB(r=71, g=104, b=71), C_RGB(r=49, g=49, b=96), C_RGB(r=0, g=216, b=0), C_RGB(r=82, g=82, b=82), C_RGB(r=80, g=80, b=80), C_RGB(r=0, g=206, b=0), C_RGB(r=33, g=152, b=33), C_RGB(r=20, g=20, b=109), C_RGB(r=0, g=200, b=0), C_RGB(r=76, g=76, b=76), C_RGB(r=253, g=253, b=253), C_RGB(r=0, g=198, b=0), C_RGB(r=0, g=0, b=157), C_RGB(r=111, g=107, b=107), C_RGB(r=234, g=14, b=14), C_RGB(r=72, g=72, b=72), C_RGB(r=0, g=188, b=0), C_RGB(r=52, g=102, b=52), C_RGB(r=2, g=2, b=245), C_RGB(r=83, g=83, b=96), C_RGB(r=0, g=176, b=0), C_RGB(r=0, g=174, b=0), C_RGB(r=183, g=0, b=0), C_RGB(r=0, g=164, b=0), C_RGB(r=239, g=239, b=239), C_RGB(r=0, g=162, b=0), C_RGB(r=143, g=79, b=79), C_RGB(r=149, g=52, b=52), C_RGB(r=0, g=152, b=0), C_RGB(r=0, g=150, b=0), C_RGB(r=0, g=146, b=0), C_RGB(r=231, g=231, b=231), C_RGB(r=0, g=140, b=0), C_RGB(r=227, g=227, b=227), C_RGB(r=0, g=128, b=0), C_RGB(r=146, g=6, b=6), C_RGB(r=1, g=1, b=111), C_RGB(r=100, g=86, b=89), C_RGB(r=0, g=0, b=100), C_RGB(r=78, g=78, b=107), C_RGB(r=207, g=207, b=207), C_RGB(r=221, g=221, b=224), C_RGB(r=0, g=0, b=123), C_RGB(r=201, g=201, b=201), C_RGB(r=22, g=22, b=65), C_RGB(r=33, g=33, b=89), C_RGB(r=87, g=87, b=89), C_RGB(r=68, g=68, b=120), C_RGB(r=191, g=191, b=191), C_RGB(r=235, g=221, b=221), C_RGB(r=45, g=45, b=84), C_RGB(r=10, g=10, b=96), C_RGB(r=0, g=0, b=255), C_RGB(r=191, g=125, b=125), C_RGB(r=255, g=255, b=0)])
  [003] - CT_tRNS(is_parsed=True, chunk_size=1, chunk_type=b'tRNS', chunk_crc=b'@\xe6\xd8f', alpha_channel=[0])
  [004] - CT_bKGD(is_parsed=True, chunk_size=1, chunk_type=b'bKGD', chunk_crc=b'E\xd2\x1b\xdb', background_color=C_RGB(r=255, g=255, b=0))
  [005] - CT_IDAT(is_parsed=True, chunk_size=650, chunk_type=b'IDAT', chunk_crc=b'\x9d\x95\xdb\xc0')
  [006] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tm3n3p02.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'PLTE'; 12 bytes
parsing b'tRNS'; 3 bytes
parsing b'IDAT'; 20 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x0e\x14\x92g', width=32, height=32, bit_depth=2, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_PLTE(is_parsed=True, chunk_size=12, chunk_type=b'PLTE', chunk_crc=b'\xb5\x9fC\xce', entries=[C_RGB(r=0, g=0, b=255), C_RGB(r=0, g=0, b=255), C_RGB(r=0, g=0, b=255), C_RGB(r=0, g=0, b=255)])
  [002] - CT_tRNS(is_parsed=True, chunk_size=3, chunk_type=b'tRNS', chunk_crc=b"\x0b\xb9'9", alpha_channel=[0, 85, 170])
  [003] - CT_IDAT(is_parsed=True, chunk_size=20, chunk_type=b'IDAT', chunk_crc=b'\x163.A')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tp0n0g08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 646 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'V\x11%(', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=646, chunk_type=b'IDAT', chunk_crc=b'\xd9c\xd5]')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tp0n2c08.png"
test description : not transparent for reference (logo on gray)
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 1521 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=1521, chunk_type=b'IDAT', chunk_crc=b'f\x00\xc7\x1f')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tp0n3p08.png"
test description : not transparent for reference (logo on gray)
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 735 bytes
parsing b'IDAT'; 656 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=735, chunk_type=b'PLTE', chunk_crc=b'Db\x06\xaa', entries=[C_RGB(r=20, g=20, b=109), C_RGB(r=128, g=86, b=86), C_RGB(r=181, g=181, b=184), C_RGB(r=168, g=66, b=66), C_RGB(r=159, g=159, b=159), C_RGB(r=177, g=32, b=32), C_RGB(r=139, g=21, b=21), C_RGB(r=157, g=157, b=157), C_RGB(r=27, g=27, b=89), C_RGB(r=155, g=155, b=155), C_RGB(r=0, g=0, b=132), C_RGB(r=153, g=153, b=153), C_RGB(r=143, g=167, b=143), C_RGB(r=151, g=151, b=151), C_RGB(r=149, g=149, b=149), C_RGB(r=147, g=147, b=147), C_RGB(r=41, g=41, b=86), C_RGB(r=145, g=145, b=145), C_RGB(r=0, g=0, b=155), C_RGB(r=143, g=143, b=143), C_RGB(r=139, g=149, b=139), C_RGB(r=46, g=46, b=167), C_RGB(r=141, g=141, b=141), C_RGB(r=128, g=0, b=0), C_RGB(r=139, g=139, b=139), C_RGB(r=185, g=0, b=0), C_RGB(r=137, g=137, b=137), C_RGB(r=12, g=12, b=213), C_RGB(r=120, g=117, b=117), C_RGB(r=135, g=135, b=135), C_RGB(r=0, g=0, b=178), C_RGB(r=133, g=133, b=133), C_RGB(r=165, g=0, b=0), C_RGB(r=222, g=0, b=0), C_RGB(r=129, g=129, b=129), C_RGB(r=127, g=127, b=127), C_RGB(r=0, g=0, b=158), C_RGB(r=125, g=125, b=125), C_RGB(r=0, g=0, b=201), C_RGB(r=123, g=123, b=123), C_RGB(r=121, g=121, b=121), C_RGB(r=55, g=55, b=86), C_RGB(r=119, g=119, b=119), C_RGB(r=117, g=117, b=117), C_RGB(r=115, g=115, b=115), C_RGB(r=72, g=169, b=72), C_RGB(r=142, g=0, b=0), C_RGB(r=2, g=2, b=100), C_RGB(r=0, g=0, b=98), C_RGB(r=86, g=137, b=86), C_RGB(r=40, g=40, b=124), C_RGB(r=83, g=139, b=83), C_RGB(r=137, g=137, b=143), C_RGB(r=103, g=103, b=103), C_RGB(r=101, g=101, b=101), C_RGB(r=93, g=109, b=93), C_RGB(r=19, g=229, b=19), C_RGB(r=134, g=38, b=38), C_RGB(r=111, g=45, b=45), C_RGB(r=68, g=145, b=68), C_RGB(r=97, g=97, b=97), C_RGB(r=59, g=157, b=59), C_RGB(r=68, g=137, b=68), C_RGB(r=61, g=147, b=61), C_RGB(r=0, g=0, b=164), C_RGB(r=0, g=243, b=0), C_RGB(r=0, g=241, b=0), C_RGB(r=89, g=89, b=89), C_RGB(r=87, g=87, b=87), C_RGB(r=85, g=85, b=85), C_RGB(r=83, g=83, b=83), C_RGB(r=52, g=133, b=52), C_RGB(r=81, g=81, b=81), C_RGB(r=36, g=151, b=36), C_RGB(r=79, g=79, b=79), C_RGB(r=58, g=58, b=65), C_RGB(r=16, g=16, b=186), C_RGB(r=178, g=15, b=15), C_RGB(r=0, g=199, b=0), C_RGB(r=0, g=197, b=0), C_RGB(r=252, g=252, b=252), C_RGB(r=0, g=195, b=0), C_RGB(r=4, g=4, b=151), C_RGB(r=0, g=193, b=0), C_RGB(r=45, g=119, b=45), C_RGB(r=250, g=250, b=250), C_RGB(r=0, g=191, b=0), C_RGB(r=0, g=0, b=104), C_RGB(r=0, g=189, b=0), C_RGB(r=218, g=212, b=212), C_RGB(r=16, g=16, b=123), C_RGB(r=9, g=173, b=9), C_RGB(r=248, g=248, b=248), C_RGB(r=0, g=185, b=0), C_RGB(r=0, g=183, b=0), C_RGB(r=156, g=156, b=161), C_RGB(r=246, g=246, b=246), C_RGB(r=12, g=161, b=12), C_RGB(r=0, g=179, b=0), C_RGB(r=0, g=177, b=0), C_RGB(r=16, g=145, b=16), C_RGB(r=0, g=171, b=0), C_RGB(r=242, g=242, b=242), C_RGB(r=0, g=169, b=0), C_RGB(r=0, g=167, b=0), C_RGB(r=238, g=238, b=238), C_RGB(r=236, g=236, b=236), C_RGB(r=0, g=151, b=0), C_RGB(r=234, g=234, b=234), C_RGB(r=0, g=0, b=107), C_RGB(r=0, g=141, b=0), C_RGB(r=0, g=139, b=0), C_RGB(r=0, g=137, b=0), C_RGB(r=0, g=135, b=0), C_RGB(r=49, g=49, b=49), C_RGB(r=25, g=25, b=42), C_RGB(r=7, g=7, b=64), C_RGB(r=18, g=18, b=174), C_RGB(r=9, g=9, b=238), C_RGB(r=211, g=214, b=211), C_RGB(r=204, g=204, b=204), C_RGB(r=147, g=0, b=0), C_RGB(r=163, g=42, b=42), C_RGB(r=198, g=198, b=198), C_RGB(r=196, g=196, b=196), C_RGB(r=204, g=0, b=0), C_RGB(r=211, g=10, b=10), C_RGB(r=129, g=107, b=107), C_RGB(r=120, g=62, b=62), C_RGB(r=3, g=3, b=109), C_RGB(r=0, g=0, b=159), C_RGB(r=10, g=10, b=86), C_RGB(r=70, g=70, b=72), C_RGB(r=65, g=65, b=77), C_RGB(r=115, g=93, b=93), C_RGB(r=81, g=7, b=7), C_RGB(r=168, g=168, b=168), C_RGB(r=237, g=237, b=239), C_RGB(r=160, g=160, b=160), C_RGB(r=158, g=158, b=158), C_RGB(r=156, g=156, b=156), C_RGB(r=0, g=0, b=185), C_RGB(r=154, g=154, b=154), C_RGB(r=178, g=0, b=0), C_RGB(r=152, g=152, b=152), C_RGB(r=235, g=0, b=0), C_RGB(r=150, g=150, b=150), C_RGB(r=158, g=0, b=0), C_RGB(r=148, g=148, b=148), C_RGB(r=19, g=19, b=28), C_RGB(r=146, g=146, b=146), C_RGB(r=144, g=144, b=144), C_RGB(r=142, g=142, b=142), C_RGB(r=0, g=0, b=145), C_RGB(r=138, g=138, b=138), C_RGB(r=136, g=136, b=136), C_RGB(r=118, g=162, b=118), C_RGB(r=133, g=136, b=133), C_RGB(r=134, g=134, b=134), C_RGB(r=132, g=132, b=132), C_RGB(r=120, g=15, b=15), C_RGB(r=130, g=130, b=130), C_RGB(r=126, g=130, b=126), C_RGB(r=126, g=126, b=126), C_RGB(r=124, g=124, b=124), C_RGB(r=122, g=122, b=122), C_RGB(r=74, g=192, b=74), C_RGB(r=118, g=118, b=118), C_RGB(r=116, g=116, b=116), C_RGB(r=114, g=114, b=114), C_RGB(r=112, g=112, b=112), C_RGB(r=152, g=0, b=0), C_RGB(r=110, g=110, b=110), C_RGB(r=106, g=112, b=106), C_RGB(r=122, g=102, b=102), C_RGB(r=106, g=106, b=106), C_RGB(r=132, g=0, b=0), C_RGB(r=68, g=162, b=68), C_RGB(r=75, g=150, b=75), C_RGB(r=97, g=100, b=97), C_RGB(r=98, g=98, b=98), C_RGB(r=0, g=244, b=0), C_RGB(r=56, g=152, b=56), C_RGB(r=92, g=92, b=92), C_RGB(r=90, g=90, b=90), C_RGB(r=0, g=230, b=0), C_RGB(r=2, g=2, b=93), C_RGB(r=66, g=120, b=66), C_RGB(r=86, g=86, b=86), C_RGB(r=0, g=0, b=240), C_RGB(r=46, g=148, b=46), C_RGB(r=71, g=104, b=71), C_RGB(r=49, g=49, b=96), C_RGB(r=0, g=216, b=0), C_RGB(r=82, g=82, b=82), C_RGB(r=80, g=80, b=80), C_RGB(r=0, g=206, b=0), C_RGB(r=33, g=152, b=33), C_RGB(r=255, g=255, b=255), C_RGB(r=0, g=200, b=0), C_RGB(r=76, g=76, b=76), C_RGB(r=253, g=253, b=253), C_RGB(r=0, g=198, b=0), C_RGB(r=0, g=0, b=157), C_RGB(r=111, g=107, b=107), C_RGB(r=234, g=14, b=14), C_RGB(r=72, g=72, b=72), C_RGB(r=0, g=188, b=0), C_RGB(r=52, g=102, b=52), C_RGB(r=2, g=2, b=245), C_RGB(r=83, g=83, b=96), C_RGB(r=0, g=176, b=0), C_RGB(r=0, g=174, b=0), C_RGB(r=183, g=0, b=0), C_RGB(r=0, g=164, b=0), C_RGB(r=239, g=239, b=239), C_RGB(r=0, g=162, b=0), C_RGB(r=143, g=79, b=79), C_RGB(r=149, g=52, b=52), C_RGB(r=0, g=152, b=0), C_RGB(r=0, g=150, b=0), C_RGB(r=0, g=146, b=0), C_RGB(r=231, g=231, b=231), C_RGB(r=0, g=140, b=0), C_RGB(r=227, g=227, b=227), C_RGB(r=0, g=128, b=0), C_RGB(r=146, g=6, b=6), C_RGB(r=1, g=1, b=111), C_RGB(r=100, g=86, b=89), C_RGB(r=0, g=0, b=100), C_RGB(r=78, g=78, b=107), C_RGB(r=207, g=207, b=207), C_RGB(r=221, g=221, b=224), C_RGB(r=0, g=0, b=123), C_RGB(r=201, g=201, b=201), C_RGB(r=22, g=22, b=65), C_RGB(r=33, g=33, b=89), C_RGB(r=87, g=87, b=89), C_RGB(r=68, g=68, b=120), C_RGB(r=191, g=191, b=191), C_RGB(r=235, g=221, b=221), C_RGB(r=45, g=45, b=84), C_RGB(r=10, g=10, b=96), C_RGB(r=0, g=0, b=255), C_RGB(r=191, g=125, b=125)])
  [003] - CT_IDAT(is_parsed=True, chunk_size=656, chunk_type=b'IDAT', chunk_crc=b'\x0e\xd6\xb9\x98')
  [004] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\tp1n3p08.png"
test description : transparent, but no background chunk
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'PLTE'; 735 bytes
parsing b'tRNS'; 1 bytes
parsing b'IDAT'; 650 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'D\xa4\x8a\xc6', width=32, height=32, bit_depth=8, color_type=3, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used;color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_PLTE(is_parsed=True, chunk_size=735, chunk_type=b'PLTE', chunk_crc=b'\x0f%\xb7\xad', entries=[C_RGB(r=255, g=255, b=255), C_RGB(r=128, g=86, b=86), C_RGB(r=181, g=181, b=184), C_RGB(r=168, g=66, b=66), C_RGB(r=159, g=159, b=159), C_RGB(r=177, g=32, b=32), C_RGB(r=139, g=21, b=21), C_RGB(r=157, g=157, b=157), C_RGB(r=27, g=27, b=89), C_RGB(r=155, g=155, b=155), C_RGB(r=0, g=0, b=132), C_RGB(r=153, g=153, b=153), C_RGB(r=143, g=167, b=143), C_RGB(r=151, g=151, b=151), C_RGB(r=149, g=149, b=149), C_RGB(r=147, g=147, b=147), C_RGB(r=41, g=41, b=86), C_RGB(r=145, g=145, b=145), C_RGB(r=0, g=0, b=155), C_RGB(r=143, g=143, b=143), C_RGB(r=139, g=149, b=139), C_RGB(r=46, g=46, b=167), C_RGB(r=141, g=141, b=141), C_RGB(r=128, g=0, b=0), C_RGB(r=139, g=139, b=139), C_RGB(r=185, g=0, b=0), C_RGB(r=137, g=137, b=137), C_RGB(r=12, g=12, b=213), C_RGB(r=120, g=117, b=117), C_RGB(r=135, g=135, b=135), C_RGB(r=0, g=0, b=178), C_RGB(r=133, g=133, b=133), C_RGB(r=165, g=0, b=0), C_RGB(r=222, g=0, b=0), C_RGB(r=129, g=129, b=129), C_RGB(r=127, g=127, b=127), C_RGB(r=0, g=0, b=158), C_RGB(r=125, g=125, b=125), C_RGB(r=0, g=0, b=201), C_RGB(r=123, g=123, b=123), C_RGB(r=121, g=121, b=121), C_RGB(r=55, g=55, b=86), C_RGB(r=119, g=119, b=119), C_RGB(r=117, g=117, b=117), C_RGB(r=115, g=115, b=115), C_RGB(r=72, g=169, b=72), C_RGB(r=142, g=0, b=0), C_RGB(r=2, g=2, b=100), C_RGB(r=0, g=0, b=98), C_RGB(r=86, g=137, b=86), C_RGB(r=40, g=40, b=124), C_RGB(r=83, g=139, b=83), C_RGB(r=137, g=137, b=143), C_RGB(r=103, g=103, b=103), C_RGB(r=101, g=101, b=101), C_RGB(r=93, g=109, b=93), C_RGB(r=19, g=229, b=19), C_RGB(r=134, g=38, b=38), C_RGB(r=111, g=45, b=45), C_RGB(r=68, g=145, b=68), C_RGB(r=97, g=97, b=97), C_RGB(r=59, g=157, b=59), C_RGB(r=68, g=137, b=68), C_RGB(r=61, g=147, b=61), C_RGB(r=0, g=0, b=164), C_RGB(r=0, g=243, b=0), C_RGB(r=0, g=241, b=0), C_RGB(r=89, g=89, b=89), C_RGB(r=87, g=87, b=87), C_RGB(r=85, g=85, b=85), C_RGB(r=83, g=83, b=83), C_RGB(r=52, g=133, b=52), C_RGB(r=81, g=81, b=81), C_RGB(r=36, g=151, b=36), C_RGB(r=79, g=79, b=79), C_RGB(r=58, g=58, b=65), C_RGB(r=16, g=16, b=186), C_RGB(r=178, g=15, b=15), C_RGB(r=0, g=199, b=0), C_RGB(r=0, g=197, b=0), C_RGB(r=252, g=252, b=252), C_RGB(r=0, g=195, b=0), C_RGB(r=4, g=4, b=151), C_RGB(r=0, g=193, b=0), C_RGB(r=45, g=119, b=45), C_RGB(r=250, g=250, b=250), C_RGB(r=0, g=191, b=0), C_RGB(r=0, g=0, b=104), C_RGB(r=0, g=189, b=0), C_RGB(r=218, g=212, b=212), C_RGB(r=16, g=16, b=123), C_RGB(r=9, g=173, b=9), C_RGB(r=248, g=248, b=248), C_RGB(r=0, g=185, b=0), C_RGB(r=0, g=183, b=0), C_RGB(r=156, g=156, b=161), C_RGB(r=246, g=246, b=246), C_RGB(r=12, g=161, b=12), C_RGB(r=0, g=179, b=0), C_RGB(r=0, g=177, b=0), C_RGB(r=16, g=145, b=16), C_RGB(r=0, g=171, b=0), C_RGB(r=242, g=242, b=242), C_RGB(r=0, g=169, b=0), C_RGB(r=0, g=167, b=0), C_RGB(r=238, g=238, b=238), C_RGB(r=236, g=236, b=236), C_RGB(r=0, g=151, b=0), C_RGB(r=234, g=234, b=234), C_RGB(r=0, g=0, b=107), C_RGB(r=0, g=141, b=0), C_RGB(r=0, g=139, b=0), C_RGB(r=0, g=137, b=0), C_RGB(r=0, g=135, b=0), C_RGB(r=49, g=49, b=49), C_RGB(r=25, g=25, b=42), C_RGB(r=7, g=7, b=64), C_RGB(r=18, g=18, b=174), C_RGB(r=9, g=9, b=238), C_RGB(r=211, g=214, b=211), C_RGB(r=204, g=204, b=204), C_RGB(r=147, g=0, b=0), C_RGB(r=163, g=42, b=42), C_RGB(r=198, g=198, b=198), C_RGB(r=196, g=196, b=196), C_RGB(r=204, g=0, b=0), C_RGB(r=211, g=10, b=10), C_RGB(r=129, g=107, b=107), C_RGB(r=120, g=62, b=62), C_RGB(r=3, g=3, b=109), C_RGB(r=0, g=0, b=159), C_RGB(r=10, g=10, b=86), C_RGB(r=70, g=70, b=72), C_RGB(r=65, g=65, b=77), C_RGB(r=115, g=93, b=93), C_RGB(r=81, g=7, b=7), C_RGB(r=168, g=168, b=168), C_RGB(r=237, g=237, b=239), C_RGB(r=160, g=160, b=160), C_RGB(r=158, g=158, b=158), C_RGB(r=156, g=156, b=156), C_RGB(r=0, g=0, b=185), C_RGB(r=154, g=154, b=154), C_RGB(r=178, g=0, b=0), C_RGB(r=152, g=152, b=152), C_RGB(r=235, g=0, b=0), C_RGB(r=150, g=150, b=150), C_RGB(r=158, g=0, b=0), C_RGB(r=148, g=148, b=148), C_RGB(r=19, g=19, b=28), C_RGB(r=146, g=146, b=146), C_RGB(r=144, g=144, b=144), C_RGB(r=142, g=142, b=142), C_RGB(r=0, g=0, b=145), C_RGB(r=138, g=138, b=138), C_RGB(r=136, g=136, b=136), C_RGB(r=118, g=162, b=118), C_RGB(r=133, g=136, b=133), C_RGB(r=134, g=134, b=134), C_RGB(r=132, g=132, b=132), C_RGB(r=120, g=15, b=15), C_RGB(r=130, g=130, b=130), C_RGB(r=126, g=130, b=126), C_RGB(r=126, g=126, b=126), C_RGB(r=124, g=124, b=124), C_RGB(r=122, g=122, b=122), C_RGB(r=74, g=192, b=74), C_RGB(r=118, g=118, b=118), C_RGB(r=116, g=116, b=116), C_RGB(r=114, g=114, b=114), C_RGB(r=112, g=112, b=112), C_RGB(r=152, g=0, b=0), C_RGB(r=110, g=110, b=110), C_RGB(r=106, g=112, b=106), C_RGB(r=122, g=102, b=102), C_RGB(r=106, g=106, b=106), C_RGB(r=132, g=0, b=0), C_RGB(r=68, g=162, b=68), C_RGB(r=75, g=150, b=75), C_RGB(r=97, g=100, b=97), C_RGB(r=98, g=98, b=98), C_RGB(r=0, g=244, b=0), C_RGB(r=56, g=152, b=56), C_RGB(r=92, g=92, b=92), C_RGB(r=90, g=90, b=90), C_RGB(r=0, g=230, b=0), C_RGB(r=2, g=2, b=93), C_RGB(r=66, g=120, b=66), C_RGB(r=86, g=86, b=86), C_RGB(r=0, g=0, b=240), C_RGB(r=46, g=148, b=46), C_RGB(r=71, g=104, b=71), C_RGB(r=49, g=49, b=96), C_RGB(r=0, g=216, b=0), C_RGB(r=82, g=82, b=82), C_RGB(r=80, g=80, b=80), C_RGB(r=0, g=206, b=0), C_RGB(r=33, g=152, b=33), C_RGB(r=20, g=20, b=109), C_RGB(r=0, g=200, b=0), C_RGB(r=76, g=76, b=76), C_RGB(r=253, g=253, b=253), C_RGB(r=0, g=198, b=0), C_RGB(r=0, g=0, b=157), C_RGB(r=111, g=107, b=107), C_RGB(r=234, g=14, b=14), C_RGB(r=72, g=72, b=72), C_RGB(r=0, g=188, b=0), C_RGB(r=52, g=102, b=52), C_RGB(r=2, g=2, b=245), C_RGB(r=83, g=83, b=96), C_RGB(r=0, g=176, b=0), C_RGB(r=0, g=174, b=0), C_RGB(r=183, g=0, b=0), C_RGB(r=0, g=164, b=0), C_RGB(r=239, g=239, b=239), C_RGB(r=0, g=162, b=0), C_RGB(r=143, g=79, b=79), C_RGB(r=149, g=52, b=52), C_RGB(r=0, g=152, b=0), C_RGB(r=0, g=150, b=0), C_RGB(r=0, g=146, b=0), C_RGB(r=231, g=231, b=231), C_RGB(r=0, g=140, b=0), C_RGB(r=227, g=227, b=227), C_RGB(r=0, g=128, b=0), C_RGB(r=146, g=6, b=6), C_RGB(r=1, g=1, b=111), C_RGB(r=100, g=86, b=89), C_RGB(r=0, g=0, b=100), C_RGB(r=78, g=78, b=107), C_RGB(r=207, g=207, b=207), C_RGB(r=221, g=221, b=224), C_RGB(r=0, g=0, b=123), C_RGB(r=201, g=201, b=201), C_RGB(r=22, g=22, b=65), C_RGB(r=33, g=33, b=89), C_RGB(r=87, g=87, b=89), C_RGB(r=68, g=68, b=120), C_RGB(r=191, g=191, b=191), C_RGB(r=235, g=221, b=221), C_RGB(r=45, g=45, b=84), C_RGB(r=10, g=10, b=96), C_RGB(r=0, g=0, b=255), C_RGB(r=191, g=125, b=125)])
  [003] - CT_tRNS(is_parsed=True, chunk_size=1, chunk_type=b'tRNS', chunk_crc=b'@\xe6\xd8f', alpha_channel=[0])
  [004] - CT_IDAT(is_parsed=True, chunk_size=650, chunk_type=b'IDAT', chunk_crc=b'\x9d\x95\xdb\xc0')
  [005] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xc1n0g08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 65 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xee\xadBM', width=32, height=32, bit_depth=8, color_type=1, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=65, chunk_type=b'IDAT', chunk_crc=b'5\xe2\xd8Y')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xc9n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 72 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'+\x19j\xa2', width=32, height=32, bit_depth=8, color_type=9, compression_method=0, filter_method=0, interlace_method=0, color_type_info='palette-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=72, chunk_type=b'IDAT', chunk_crc=b'\x0f@\xcfK')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xcrn0g04.png"
test description : added cr bytes
-------------------------------------------------
WARNING! file does not contain or has correct PNG signature: b'\x89PNG\r\r\x1a\r'
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 72 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x93\xe1\xc8)', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=72, chunk_type=b'IDAT', chunk_crc=b'\xea\xffA\xfa')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xcsn0g01.png"
test description : not documented
-------------------------------------------------
WARNING! file is corrupted: crc hash does not match
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 91 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'[\x01GY', width=32, height=32, bit_depth=1, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=91, chunk_type=b'IDAT', chunk_crc=b'CSUM')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xd0n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 72 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xcch\xa6b', width=32, height=32, bit_depth=0, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=72, chunk_type=b'IDAT', chunk_crc=b'\x0f@\xcfK')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xd3n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 72 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x8b\xc8\xdc\xb2', width=32, height=32, bit_depth=3, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=72, chunk_type=b'IDAT', chunk_crc=b'\x0f@\xcfK')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xd9n2c08.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 72 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\x12\xfa\xab\xff', width=32, height=32, bit_depth=99, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=72, chunk_type=b'IDAT', chunk_crc=b'\x0f@\xcfK')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xdtn0g01.png"
test description : not documented
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'[\x01GY', width=32, height=32, bit_depth=1, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xhdn0g08.png"
test description : not documented
-------------------------------------------------
WARNING! file is corrupted: crc hash does not match
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 65 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'CSUM', width=32, height=32, bit_depth=8, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=65, chunk_type=b'IDAT', chunk_crc=b'5\xe2\xd8Y')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xlfn0g04.png"
test description : converted cr bytes to lf and removed all NULs
-------------------------------------------------
WARNING! file does not contain or has correct PNG signature: b'\x89PNG\n\n\x1a\n'
WARNING! file is corrupted: crc hash does not match
WARNING! file is corrupted: crc hash does not match
WARNING! chunk type b'\x00\x00\x04g' is not present in ENUM_PNG_CT_BYTES
parsing b'IHDR'; 10 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=10, chunk_type=b'IHDR', chunk_crc=b'\x00\x00\x00\x93', width=32, height=32, bit_depth=4, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')

-------------------------------------------------
target file      : "test input\xs1n0g01.png"
test description : not documented
-------------------------------------------------
WARNING! file does not contain or has correct PNG signature: b'\tPNG\r\n\x1a\n'
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 91 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'[\x01GY', width=32, height=32, bit_depth=1, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=91, chunk_type=b'IDAT', chunk_crc=b'\xd0/\x14\xc9')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xs2n0g01.png"
test description : not documented
-------------------------------------------------
WARNING! file does not contain or has correct PNG signature: b'\x89QNG\r\n\x1a\n'
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 91 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'[\x01GY', width=32, height=32, bit_depth=1, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=91, chunk_type=b'IDAT', chunk_crc=b'\xd0/\x14\xc9')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xs4n0g01.png"
test description : not documented
-------------------------------------------------
WARNING! file does not contain or has correct PNG signature: b'\x89PNg\r\n\x1a\n'
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 91 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'[\x01GY', width=32, height=32, bit_depth=1, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=91, chunk_type=b'IDAT', chunk_crc=b'\xd0/\x14\xc9')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\xs7n0g01.png"
test description : not documented
-------------------------------------------------
WARNING! file does not contain or has correct PNG signature: b'\x89PNG\r\n \n'
parsing b'IHDR'; 13 bytes
parsing b'gAMA'; 4 bytes
parsing b'IDAT'; 91 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'[\x01GY', width=32, height=32, bit_depth=1, color_type=0, compression_method=0, filter_method=0, interlace_method=0, color_type_info='')
  [001] - CT_gAMA(is_parsed=True, chunk_size=4, chunk_type=b'gAMA', chunk_crc=b'1\xe8\x96_', gamma=100000)
  [002] - CT_IDAT(is_parsed=True, chunk_size=91, chunk_type=b'IDAT', chunk_crc=b'\xd0/\x14\xc9')
  [003] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\z00n2c08.png"
test description : color, no interlacing, compression level 0 (none)
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 3115 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=3115, chunk_type=b'IDAT', chunk_crc=b'\x1f\x13\xf0\x95')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\z03n2c08.png"
test description : color, no interlacing, compression level 3
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 175 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=175, chunk_type=b'IDAT', chunk_crc=b'\xdf\xdbC\x19')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\z06n2c08.png"
test description : color, no interlacing, compression level 6 (default)
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 167 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=167, chunk_type=b'IDAT', chunk_crc=b'1R\xc1,')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

-------------------------------------------------
target file      : "test input\z09n2c08.png"
test description : color, no interlacing, compression level 9 (maximum)
-------------------------------------------------
parsing b'IHDR'; 13 bytes
parsing b'IDAT'; 167 bytes
parsing b'IEND'; 0 bytes
parsed chunks:
  [000] - CT_IHDR(is_parsed=True, chunk_size=13, chunk_type=b'IHDR', chunk_crc=b'\xfc\x18\xed\xa3', width=32, height=32, bit_depth=8, color_type=2, compression_method=0, filter_method=0, interlace_method=0, color_type_info='color-used')
  [001] - CT_IDAT(is_parsed=True, chunk_size=167, chunk_type=b'IDAT', chunk_crc=b'\xd6\x11\xbe\xf5')
  [002] - CT_IEND(is_parsed=True, chunk_size=0, chunk_type=b'IEND', chunk_crc=b'\xaeB`\x82')

